{"map":"{\"version\":3,\"sources\":[\"js/3.js\"],\"names\":[\"window\",\"push\",\"./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js\",\"module\",\"__webpack_exports__\",\"__webpack_require__\",\"eval\",\"./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js\",\"./node_modules/core-js/internals/array-from.js\",\"exports\",\"./node_modules/core-js/internals/call-with-safe-iteration-closing.js\",\"./node_modules/core-js/modules/es.array.from.js\",\"./node_modules/core-js/modules/es.array.slice.js\",\"./node_modules/core-js/modules/es.function.name.js\",\"./node_modules/core-js/modules/es.symbol.description.js\",\"./node_modules/core-js/modules/es.symbol.iterator.js\",\"./node_modules/css-loader/dist/cjs.js?!./node_modules/postcss-loader/src/index.js?!./node_modules/vue-good-table-next/dist/vue-good-table-next.css\",\"./node_modules/vue-good-table-next/dist/vue-good-table-next.css\",\"./node_modules/vue-good-table-next/dist/vue-good-table.esm.js\"],\"mappings\":\"CAACA,OAAO,gBAAkBA,OAAO,iBAAmB,IAAIC,KAAK,CAAC,CAAC,GAAG,CAE5DC;;;;gCAKA,SAAUC,OAAQC,oBAAqBC,qBAE7C,aACAC,KAAK,2dAICC;;;;gCAKA,SAAUJ,OAAQC,oBAAqBC,qBAE7C,aACAC,KAAK,00HAICE;;;;8BAKA,SAAUL,OAAQM,QAASJ,qBAEjC,aACAC,KAAK,s/FAICI;;;;8BAKA,SAAUP,OAAQM,QAASJ,qBAEjCC,KAAK,snBAICK;;;;8BAKA,SAAUR,OAAQM,QAASJ,qBAEjCC,KAAK,gzBAICM;;;;8BAKA,SAAUT,OAAQM,QAASJ,qBAEjC,aACAC,KAAK,ijGAICO;;;;8BAKA,SAAUV,OAAQM,QAASJ,qBAEjCC,KAAK,iuCAICQ;;;;8BAKA,SAAUX,OAAQM,QAASJ,qBAEjC,aACAC,KAAK,ozGAICS;;;;8BAKA,SAAUZ,OAAQM,QAASJ,qBAEjCC,KAAK,uXAICU;;;;8BAKA,SAAUb,OAAQM,QAASJ,qBAEjCC,KAAK,si6BAICW;;;;8BAKA,SAAUd,OAAQM,QAASJ,qBAEjCC,KAAK,q9BAICY;;;;8CAKA,SAAUf,OAAQC,oBAAqBC,qBAE7C,aACAC,KAAK\"}","code":"(window[\"webpackJsonp\"]=window[\"webpackJsonp\"]||[]).push([[3],{\"./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js\":\n/*!*********************************************************************!*\\\n  !*** ./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js ***!\n  \\*********************************************************************/\n/*! exports provided: default */function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _arrayLikeToArray; });\\nfunction _arrayLikeToArray(arr, len) {\\n  if (len == null || len > arr.length) len = arr.length;\\n\\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\\n    arr2[i] = arr[i];\\n  }\\n\\n  return arr2;\\n}\\n\\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js?')},\"./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js\":\n/*!*******************************************************************************!*\\\n  !*** ./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js ***!\n  \\*******************************************************************************/\n/*! exports provided: default */function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval('__webpack_require__.r(__webpack_exports__);\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _unsupportedIterableToArray; });\\n/* harmony import */ var core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.slice.js */ \"./node_modules/core-js/modules/es.array.slice.js\");\\n/* harmony import */ var core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_slice_js__WEBPACK_IMPORTED_MODULE_0__);\\n/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"./node_modules/core-js/modules/es.object.to-string.js\");\\n/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_1__);\\n/* harmony import */ var core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.function.name.js */ \"./node_modules/core-js/modules/es.function.name.js\");\\n/* harmony import */ var core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_function_name_js__WEBPACK_IMPORTED_MODULE_2__);\\n/* harmony import */ var core_js_modules_es_array_from_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.array.from.js */ \"./node_modules/core-js/modules/es.array.from.js\");\\n/* harmony import */ var core_js_modules_es_array_from_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_from_js__WEBPACK_IMPORTED_MODULE_3__);\\n/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.string.iterator.js */ \"./node_modules/core-js/modules/es.string.iterator.js\");\\n/* harmony import */ var core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_iterator_js__WEBPACK_IMPORTED_MODULE_4__);\\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.regexp.exec.js */ \"./node_modules/core-js/modules/es.regexp.exec.js\");\\n/* harmony import */ var core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_exec_js__WEBPACK_IMPORTED_MODULE_5__);\\n/* harmony import */ var core_js_modules_es_regexp_test_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.regexp.test.js */ \"./node_modules/core-js/modules/es.regexp.test.js\");\\n/* harmony import */ var core_js_modules_es_regexp_test_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_test_js__WEBPACK_IMPORTED_MODULE_6__);\\n/* harmony import */ var _arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./arrayLikeToArray.js */ \"./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js\");\\n\\n\\n\\n\\n\\n\\n\\n\\nfunction _unsupportedIterableToArray(o, minLen) {\\n  if (!o) return;\\n  if (typeof o === \"string\") return Object(_arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(o, minLen);\\n  var n = Object.prototype.toString.call(o).slice(8, -1);\\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Object(_arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(o, minLen);\\n}\\n\\n//# sourceURL=webpack:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js?')},\"./node_modules/core-js/internals/array-from.js\":\n/*!******************************************************!*\\\n  !*** ./node_modules/core-js/internals/array-from.js ***!\n  \\******************************************************/\n/*! no static exports found */function(module,exports,__webpack_require__){\"use strict\";eval('\\nvar global = __webpack_require__(/*! ../internals/global */ \"./node_modules/core-js/internals/global.js\");\\nvar bind = __webpack_require__(/*! ../internals/function-bind-context */ \"./node_modules/core-js/internals/function-bind-context.js\");\\nvar call = __webpack_require__(/*! ../internals/function-call */ \"./node_modules/core-js/internals/function-call.js\");\\nvar toObject = __webpack_require__(/*! ../internals/to-object */ \"./node_modules/core-js/internals/to-object.js\");\\nvar callWithSafeIterationClosing = __webpack_require__(/*! ../internals/call-with-safe-iteration-closing */ \"./node_modules/core-js/internals/call-with-safe-iteration-closing.js\");\\nvar isArrayIteratorMethod = __webpack_require__(/*! ../internals/is-array-iterator-method */ \"./node_modules/core-js/internals/is-array-iterator-method.js\");\\nvar isConstructor = __webpack_require__(/*! ../internals/is-constructor */ \"./node_modules/core-js/internals/is-constructor.js\");\\nvar lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ \"./node_modules/core-js/internals/length-of-array-like.js\");\\nvar createProperty = __webpack_require__(/*! ../internals/create-property */ \"./node_modules/core-js/internals/create-property.js\");\\nvar getIterator = __webpack_require__(/*! ../internals/get-iterator */ \"./node_modules/core-js/internals/get-iterator.js\");\\nvar getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ \"./node_modules/core-js/internals/get-iterator-method.js\");\\n\\nvar Array = global.Array;\\n\\n// `Array.from` method implementation\\n// https://tc39.es/ecma262/#sec-array.from\\nmodule.exports = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\\n  var O = toObject(arrayLike);\\n  var IS_CONSTRUCTOR = isConstructor(this);\\n  var argumentsLength = arguments.length;\\n  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;\\n  var mapping = mapfn !== undefined;\\n  if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined);\\n  var iteratorMethod = getIteratorMethod(O);\\n  var index = 0;\\n  var length, result, step, iterator, next, value;\\n  // if the target is not iterable or it\\'s an array with the default iterator - use a simple case\\n  if (iteratorMethod && !(this == Array && isArrayIteratorMethod(iteratorMethod))) {\\n    iterator = getIterator(O, iteratorMethod);\\n    next = iterator.next;\\n    result = IS_CONSTRUCTOR ? new this() : [];\\n    for (;!(step = call(next, iterator)).done; index++) {\\n      value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;\\n      createProperty(result, index, value);\\n    }\\n  } else {\\n    length = lengthOfArrayLike(O);\\n    result = IS_CONSTRUCTOR ? new this(length) : Array(length);\\n    for (;length > index; index++) {\\n      value = mapping ? mapfn(O[index], index) : O[index];\\n      createProperty(result, index, value);\\n    }\\n  }\\n  result.length = index;\\n  return result;\\n};\\n\\n\\n//# sourceURL=webpack:///./node_modules/core-js/internals/array-from.js?')},\"./node_modules/core-js/internals/call-with-safe-iteration-closing.js\":\n/*!****************************************************************************!*\\\n  !*** ./node_modules/core-js/internals/call-with-safe-iteration-closing.js ***!\n  \\****************************************************************************/\n/*! no static exports found */function(module,exports,__webpack_require__){eval('var anObject = __webpack_require__(/*! ../internals/an-object */ \"./node_modules/core-js/internals/an-object.js\");\\nvar iteratorClose = __webpack_require__(/*! ../internals/iterator-close */ \"./node_modules/core-js/internals/iterator-close.js\");\\n\\n// call something on iterator step with safe closing on error\\nmodule.exports = function (iterator, fn, value, ENTRIES) {\\n  try {\\n    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);\\n  } catch (error) {\\n    iteratorClose(iterator, \\'throw\\', error);\\n  }\\n};\\n\\n\\n//# sourceURL=webpack:///./node_modules/core-js/internals/call-with-safe-iteration-closing.js?')},\"./node_modules/core-js/modules/es.array.from.js\":\n/*!*******************************************************!*\\\n  !*** ./node_modules/core-js/modules/es.array.from.js ***!\n  \\*******************************************************/\n/*! no static exports found */function(module,exports,__webpack_require__){eval('var $ = __webpack_require__(/*! ../internals/export */ \"./node_modules/core-js/internals/export.js\");\\nvar from = __webpack_require__(/*! ../internals/array-from */ \"./node_modules/core-js/internals/array-from.js\");\\nvar checkCorrectnessOfIteration = __webpack_require__(/*! ../internals/check-correctness-of-iteration */ \"./node_modules/core-js/internals/check-correctness-of-iteration.js\");\\n\\nvar INCORRECT_ITERATION = !checkCorrectnessOfIteration(function (iterable) {\\n  // eslint-disable-next-line es/no-array-from -- required for testing\\n  Array.from(iterable);\\n});\\n\\n// `Array.from` method\\n// https://tc39.es/ecma262/#sec-array.from\\n$({ target: \\'Array\\', stat: true, forced: INCORRECT_ITERATION }, {\\n  from: from\\n});\\n\\n\\n//# sourceURL=webpack:///./node_modules/core-js/modules/es.array.from.js?')},\"./node_modules/core-js/modules/es.array.slice.js\":\n/*!********************************************************!*\\\n  !*** ./node_modules/core-js/modules/es.array.slice.js ***!\n  \\********************************************************/\n/*! no static exports found */function(module,exports,__webpack_require__){\"use strict\";eval('\\nvar $ = __webpack_require__(/*! ../internals/export */ \"./node_modules/core-js/internals/export.js\");\\nvar global = __webpack_require__(/*! ../internals/global */ \"./node_modules/core-js/internals/global.js\");\\nvar isArray = __webpack_require__(/*! ../internals/is-array */ \"./node_modules/core-js/internals/is-array.js\");\\nvar isConstructor = __webpack_require__(/*! ../internals/is-constructor */ \"./node_modules/core-js/internals/is-constructor.js\");\\nvar isObject = __webpack_require__(/*! ../internals/is-object */ \"./node_modules/core-js/internals/is-object.js\");\\nvar toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ \"./node_modules/core-js/internals/to-absolute-index.js\");\\nvar lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ \"./node_modules/core-js/internals/length-of-array-like.js\");\\nvar toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ \"./node_modules/core-js/internals/to-indexed-object.js\");\\nvar createProperty = __webpack_require__(/*! ../internals/create-property */ \"./node_modules/core-js/internals/create-property.js\");\\nvar wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ \"./node_modules/core-js/internals/well-known-symbol.js\");\\nvar arrayMethodHasSpeciesSupport = __webpack_require__(/*! ../internals/array-method-has-species-support */ \"./node_modules/core-js/internals/array-method-has-species-support.js\");\\nvar un$Slice = __webpack_require__(/*! ../internals/array-slice */ \"./node_modules/core-js/internals/array-slice.js\");\\n\\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport(\\'slice\\');\\n\\nvar SPECIES = wellKnownSymbol(\\'species\\');\\nvar Array = global.Array;\\nvar max = Math.max;\\n\\n// `Array.prototype.slice` method\\n// https://tc39.es/ecma262/#sec-array.prototype.slice\\n// fallback for not array-like ES3 strings and DOM objects\\n$({ target: \\'Array\\', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\\n  slice: function slice(start, end) {\\n    var O = toIndexedObject(this);\\n    var length = lengthOfArrayLike(O);\\n    var k = toAbsoluteIndex(start, length);\\n    var fin = toAbsoluteIndex(end === undefined ? length : end, length);\\n    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it\\'s possible\\n    var Constructor, result, n;\\n    if (isArray(O)) {\\n      Constructor = O.constructor;\\n      // cross-realm fallback\\n      if (isConstructor(Constructor) && (Constructor === Array || isArray(Constructor.prototype))) {\\n        Constructor = undefined;\\n      } else if (isObject(Constructor)) {\\n        Constructor = Constructor[SPECIES];\\n        if (Constructor === null) Constructor = undefined;\\n      }\\n      if (Constructor === Array || Constructor === undefined) {\\n        return un$Slice(O, k, fin);\\n      }\\n    }\\n    result = new (Constructor === undefined ? Array : Constructor)(max(fin - k, 0));\\n    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);\\n    result.length = n;\\n    return result;\\n  }\\n});\\n\\n\\n//# sourceURL=webpack:///./node_modules/core-js/modules/es.array.slice.js?')},\"./node_modules/core-js/modules/es.function.name.js\":\n/*!**********************************************************!*\\\n  !*** ./node_modules/core-js/modules/es.function.name.js ***!\n  \\**********************************************************/\n/*! no static exports found */function(module,exports,__webpack_require__){eval('var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ \"./node_modules/core-js/internals/descriptors.js\");\\nvar FUNCTION_NAME_EXISTS = __webpack_require__(/*! ../internals/function-name */ \"./node_modules/core-js/internals/function-name.js\").EXISTS;\\nvar uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ \"./node_modules/core-js/internals/function-uncurry-this.js\");\\nvar defineProperty = __webpack_require__(/*! ../internals/object-define-property */ \"./node_modules/core-js/internals/object-define-property.js\").f;\\n\\nvar FunctionPrototype = Function.prototype;\\nvar functionToString = uncurryThis(FunctionPrototype.toString);\\nvar nameRE = /^\\\\s*function ([^ (]*)/;\\nvar regExpExec = uncurryThis(nameRE.exec);\\nvar NAME = \\'name\\';\\n\\n// Function instances `.name` property\\n// https://tc39.es/ecma262/#sec-function-instances-name\\nif (DESCRIPTORS && !FUNCTION_NAME_EXISTS) {\\n  defineProperty(FunctionPrototype, NAME, {\\n    configurable: true,\\n    get: function () {\\n      try {\\n        return regExpExec(nameRE, functionToString(this))[1];\\n      } catch (error) {\\n        return \\'\\';\\n      }\\n    }\\n  });\\n}\\n\\n\\n//# sourceURL=webpack:///./node_modules/core-js/modules/es.function.name.js?')},\"./node_modules/core-js/modules/es.symbol.description.js\":\n/*!***************************************************************!*\\\n  !*** ./node_modules/core-js/modules/es.symbol.description.js ***!\n  \\***************************************************************/\n/*! no static exports found */function(module,exports,__webpack_require__){\"use strict\";eval(\"// `Symbol.prototype.description` getter\\n// https://tc39.es/ecma262/#sec-symbol.prototype.description\\n\\nvar $ = __webpack_require__(/*! ../internals/export */ \\\"./node_modules/core-js/internals/export.js\\\");\\nvar DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ \\\"./node_modules/core-js/internals/descriptors.js\\\");\\nvar global = __webpack_require__(/*! ../internals/global */ \\\"./node_modules/core-js/internals/global.js\\\");\\nvar uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ \\\"./node_modules/core-js/internals/function-uncurry-this.js\\\");\\nvar hasOwn = __webpack_require__(/*! ../internals/has-own-property */ \\\"./node_modules/core-js/internals/has-own-property.js\\\");\\nvar isCallable = __webpack_require__(/*! ../internals/is-callable */ \\\"./node_modules/core-js/internals/is-callable.js\\\");\\nvar isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ \\\"./node_modules/core-js/internals/object-is-prototype-of.js\\\");\\nvar toString = __webpack_require__(/*! ../internals/to-string */ \\\"./node_modules/core-js/internals/to-string.js\\\");\\nvar defineProperty = __webpack_require__(/*! ../internals/object-define-property */ \\\"./node_modules/core-js/internals/object-define-property.js\\\").f;\\nvar copyConstructorProperties = __webpack_require__(/*! ../internals/copy-constructor-properties */ \\\"./node_modules/core-js/internals/copy-constructor-properties.js\\\");\\n\\nvar NativeSymbol = global.Symbol;\\nvar SymbolPrototype = NativeSymbol && NativeSymbol.prototype;\\n\\nif (DESCRIPTORS && isCallable(NativeSymbol) && (!('description' in SymbolPrototype) ||\\n  // Safari 12 bug\\n  NativeSymbol().description !== undefined\\n)) {\\n  var EmptyStringDescriptionStore = {};\\n  // wrap Symbol constructor for correct work with undefined description\\n  var SymbolWrapper = function Symbol() {\\n    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : toString(arguments[0]);\\n    var result = isPrototypeOf(SymbolPrototype, this)\\n      ? new NativeSymbol(description)\\n      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'\\n      : description === undefined ? NativeSymbol() : NativeSymbol(description);\\n    if (description === '') EmptyStringDescriptionStore[result] = true;\\n    return result;\\n  };\\n\\n  copyConstructorProperties(SymbolWrapper, NativeSymbol);\\n  SymbolWrapper.prototype = SymbolPrototype;\\n  SymbolPrototype.constructor = SymbolWrapper;\\n\\n  var NATIVE_SYMBOL = String(NativeSymbol('test')) == 'Symbol(test)';\\n  var symbolToString = uncurryThis(SymbolPrototype.toString);\\n  var symbolValueOf = uncurryThis(SymbolPrototype.valueOf);\\n  var regexp = /^Symbol\\\\((.*)\\\\)[^)]+$/;\\n  var replace = uncurryThis(''.replace);\\n  var stringSlice = uncurryThis(''.slice);\\n\\n  defineProperty(SymbolPrototype, 'description', {\\n    configurable: true,\\n    get: function description() {\\n      var symbol = symbolValueOf(this);\\n      var string = symbolToString(symbol);\\n      if (hasOwn(EmptyStringDescriptionStore, symbol)) return '';\\n      var desc = NATIVE_SYMBOL ? stringSlice(string, 7, -1) : replace(string, regexp, '$1');\\n      return desc === '' ? undefined : desc;\\n    }\\n  });\\n\\n  $({ global: true, forced: true }, {\\n    Symbol: SymbolWrapper\\n  });\\n}\\n\\n\\n//# sourceURL=webpack:///./node_modules/core-js/modules/es.symbol.description.js?\")},\"./node_modules/core-js/modules/es.symbol.iterator.js\":\n/*!************************************************************!*\\\n  !*** ./node_modules/core-js/modules/es.symbol.iterator.js ***!\n  \\************************************************************/\n/*! no static exports found */function(module,exports,__webpack_require__){eval(\"var defineWellKnownSymbol = __webpack_require__(/*! ../internals/define-well-known-symbol */ \\\"./node_modules/core-js/internals/define-well-known-symbol.js\\\");\\n\\n// `Symbol.iterator` well-known symbol\\n// https://tc39.es/ecma262/#sec-symbol.iterator\\ndefineWellKnownSymbol('iterator');\\n\\n\\n//# sourceURL=webpack:///./node_modules/core-js/modules/es.symbol.iterator.js?\")},\"./node_modules/css-loader/dist/cjs.js?!./node_modules/postcss-loader/src/index.js?!./node_modules/vue-good-table-next/dist/vue-good-table-next.css\":\n/*!***********************************************************************************************************************************************************************************!*\\\n  !*** ./node_modules/css-loader/dist/cjs.js??ref--7-oneOf-3-1!./node_modules/postcss-loader/src??ref--7-oneOf-3-2!./node_modules/vue-good-table-next/dist/vue-good-table-next.css ***!\n  \\***********************************************************************************************************************************************************************************/\n/*! no static exports found */function(module,exports,__webpack_require__){eval('// Imports\\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\\nexports = ___CSS_LOADER_API_IMPORT___(false);\\n// Module\\nexports.push([module.i, \".vgt-table.striped tbody tr:nth-of-type(odd) {\\\\n  background-color: rgba(51, 68, 109, 0.03);\\\\n}\\\\n\\\\n/* Utility styles\\\\n************************************************/\\\\n.vgt-right-align {\\\\n  text-align: right;\\\\n}\\\\n\\\\n.vgt-left-align {\\\\n  text-align: left;\\\\n}\\\\n\\\\n.vgt-center-align {\\\\n  text-align: center;\\\\n}\\\\n\\\\n.vgt-pull-left {\\\\n  float: left !important;\\\\n}\\\\n\\\\n.vgt-pull-right {\\\\n  float: right !important;\\\\n}\\\\n\\\\n.vgt-clearfix::after {\\\\n  display: block;\\\\n  content: \\\\\"\\\\\";\\\\n  clear: both;\\\\n}\\\\n\\\\n.vgt-responsive {\\\\n  width: 100%;\\\\n  overflow-x: auto;\\\\n  position: relative;\\\\n}\\\\n\\\\n.vgt-text-disabled {\\\\n  color: #909399;\\\\n}\\\\n\\\\n.sr-only {\\\\n  clip: rect(0 0 0 0);\\\\n  -webkit-clip-path: inset(50%);\\\\n          clip-path: inset(50%);\\\\n  height: 1px;\\\\n  overflow: hidden;\\\\n  position: absolute;\\\\n  white-space: nowrap;\\\\n  width: 1px;\\\\n}\\\\n\\\\n.vgt-wrap {\\\\n  position: relative;\\\\n}\\\\n\\\\n.vgt-fixed-header {\\\\n  position: absolute;\\\\n  z-index: 10;\\\\n  overflow-x: auto;\\\\n}\\\\n\\\\ntable.vgt-table {\\\\n  font-size: 16px;\\\\n  border-collapse: collapse;\\\\n  background-color: #FFFFFF;\\\\n  width: 100%;\\\\n  max-width: 100%;\\\\n  table-layout: auto;\\\\n  border: 1px solid #DCDFE6;\\\\n}\\\\ntable.vgt-table td {\\\\n  padding: 0.75em 0.75em 0.75em 0.75em;\\\\n  vertical-align: top;\\\\n  border-bottom: 1px solid #DCDFE6;\\\\n  color: #606266;\\\\n}\\\\ntable.vgt-table tr.clickable {\\\\n  cursor: pointer;\\\\n}\\\\ntable.vgt-table tr.clickable:hover {\\\\n  background-color: #F1F5FD;\\\\n}\\\\n\\\\n.vgt-table th {\\\\n  padding: 0.75em 1.5em 0.75em 0.75em;\\\\n  vertical-align: middle;\\\\n  position: relative;\\\\n}\\\\n.vgt-table th.sortable button {\\\\n  -webkit-appearance: none;\\\\n  -moz-appearance: none;\\\\n  appearance: none;\\\\n  background: transparent;\\\\n  border: none;\\\\n  position: absolute;\\\\n  top: 0;\\\\n  left: 0;\\\\n  width: 100%;\\\\n  height: 100%;\\\\n}\\\\n.vgt-table th.sortable button:focus {\\\\n  outline: none;\\\\n}\\\\n.vgt-table th.sortable button:after {\\\\n  content: \\\\\"\\\\\";\\\\n  position: absolute;\\\\n  height: 0px;\\\\n  width: 0px;\\\\n  right: 6px;\\\\n  top: 50%;\\\\n  margin-top: -7px;\\\\n  border-left: 5px solid transparent;\\\\n  border-right: 5px solid transparent;\\\\n  border-bottom: 5px solid #606266;\\\\n}\\\\n.vgt-table th.sortable button:before {\\\\n  content: \\\\\"\\\\\";\\\\n  position: absolute;\\\\n  height: 0px;\\\\n  width: 0px;\\\\n  right: 6px;\\\\n  top: 50%;\\\\n  margin-bottom: -7px;\\\\n  border-left: 5px solid transparent;\\\\n  border-right: 5px solid transparent;\\\\n  border-top: 5px solid #606266;\\\\n}\\\\n.vgt-table th.line-numbers, .vgt-table th.vgt-checkbox-col {\\\\n  padding: 0 0.75em 0 0.75em;\\\\n  color: #606266;\\\\n  border-right: 1px solid #DCDFE6;\\\\n  word-wrap: break-word;\\\\n  width: 25px;\\\\n  text-align: center;\\\\n  background: linear-gradient(#F4F5F8, #F1F3F6);\\\\n}\\\\n.vgt-table th.filter-th {\\\\n  padding: 0.75em 0.75em 0.75em 0.75em;\\\\n}\\\\n.vgt-table th.vgt-row-header {\\\\n  border-bottom: 2px solid #DCDFE6;\\\\n  border-top: 2px solid #DCDFE6;\\\\n  background-color: #fafafb;\\\\n}\\\\n.vgt-table th.vgt-row-header .triangle {\\\\n  width: 24px;\\\\n  height: 24px;\\\\n  border-radius: 15%;\\\\n  position: relative;\\\\n  margin: 0px 8px;\\\\n}\\\\n.vgt-table th.vgt-row-header .triangle:after {\\\\n  content: \\\\\"\\\\\";\\\\n  position: absolute;\\\\n  display: block;\\\\n  left: 50%;\\\\n  top: 50%;\\\\n  margin-top: -6px;\\\\n  border-top: 6px solid transparent;\\\\n  border-bottom: 6px solid transparent;\\\\n  border-left: 6px solid #606266;\\\\n  margin-left: -3px;\\\\n  transition: 0.3s ease transform;\\\\n}\\\\n.vgt-table th.vgt-row-header .triangle.expand:after {\\\\n  transform: rotate(90deg);\\\\n}\\\\n.vgt-table thead th {\\\\n  color: #606266;\\\\n  vertical-align: bottom;\\\\n  border-bottom: 1px solid #DCDFE6;\\\\n  padding-right: 1.5em;\\\\n  background: linear-gradient(#F4F5F8, #F1F3F6);\\\\n}\\\\n.vgt-table thead th.vgt-checkbox-col {\\\\n  vertical-align: middle;\\\\n}\\\\n.vgt-table thead th.sorting-asc button:after {\\\\n  border-bottom: 5px solid #409eff;\\\\n}\\\\n.vgt-table thead th.sorting-desc button:before {\\\\n  border-top: 5px solid #409eff;\\\\n}\\\\n\\\\n.vgt-input, .vgt-select {\\\\n  width: 100%;\\\\n  height: 32px;\\\\n  line-height: 1;\\\\n  display: block;\\\\n  font-size: 14px;\\\\n  font-weight: normal;\\\\n  padding: 6px 12px;\\\\n  color: #606266;\\\\n  border-radius: 4px;\\\\n  box-sizing: border-box;\\\\n  background-image: none;\\\\n  background-color: #fff;\\\\n  border: 1px solid #DCDFE6;\\\\n  transition: border-color 0.2s cubic-bezier(0.645, 0.045, 0.355, 1);\\\\n}\\\\n.vgt-input::-moz-placeholder, .vgt-select::-moz-placeholder {\\\\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\\\\n  color: #606266;\\\\n  opacity: 0.3;\\\\n  /* Firefox */\\\\n}\\\\n.vgt-input:-ms-input-placeholder, .vgt-select:-ms-input-placeholder {\\\\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\\\\n  color: #606266;\\\\n  opacity: 0.3;\\\\n  /* Firefox */\\\\n}\\\\n.vgt-input::placeholder, .vgt-select::placeholder {\\\\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\\\\n  color: #606266;\\\\n  opacity: 0.3;\\\\n  /* Firefox */\\\\n}\\\\n.vgt-input:focus, .vgt-select:focus {\\\\n  outline: none;\\\\n  border-color: #409eff;\\\\n}\\\\n\\\\n.vgt-loading {\\\\n  position: absolute;\\\\n  width: 100%;\\\\n  z-index: 10;\\\\n  margin-top: 117px;\\\\n}\\\\n.vgt-loading__content {\\\\n  background-color: #c0dfff;\\\\n  color: #409eff;\\\\n  padding: 7px 30px;\\\\n  border-radius: 3px;\\\\n}\\\\n\\\\n.vgt-inner-wrap.is-loading {\\\\n  opacity: 0.5;\\\\n  pointer-events: none;\\\\n}\\\\n\\\\n.vgt-table.bordered td, .vgt-table.bordered th {\\\\n  border: 1px solid #DCDFE6;\\\\n}\\\\n.vgt-table.bordered th.vgt-row-header {\\\\n  border-bottom: 3px solid #DCDFE6;\\\\n}\\\\n\\\\n.vgt-wrap.rtl {\\\\n  direction: rtl;\\\\n}\\\\n.vgt-wrap.rtl .vgt-table thead th, .vgt-wrap.rtl .vgt-table.condensed thead th {\\\\n  padding-left: 1.5em;\\\\n  padding-right: 0.75em;\\\\n}\\\\n.vgt-wrap.rtl .vgt-table th.sorting:after,\\\\n.vgt-wrap.rtl .vgt-table th.sorting-asc:after {\\\\n  margin-right: 5px;\\\\n  margin-left: 0px;\\\\n}\\\\n.vgt-wrap.rtl .vgt-table th.sortable:after,\\\\n.vgt-wrap.rtl .vgt-table th.sortable:before {\\\\n  right: inherit;\\\\n  left: 6px;\\\\n}\\\\n\\\\n.vgt-table.condensed td, .vgt-table.condensed th.vgt-row-header {\\\\n  padding: 0.4em 0.4em 0.4em 0.4em;\\\\n}\\\\n\\\\n/*responsive compactMode*/\\\\n@media (max-width: 576px) {\\\\n  .vgt-compact * {\\\\n    box-sizing: border-box;\\\\n  }\\\\n  .vgt-compact tbody,\\\\n.vgt-compact tr,\\\\n.vgt-compact td {\\\\n    display: block;\\\\n    width: 100%;\\\\n  }\\\\n  .vgt-compact thead {\\\\n    display: none;\\\\n  }\\\\n  .vgt-compact tr {\\\\n    margin-bottom: 15px;\\\\n  }\\\\n  .vgt-compact td {\\\\n    text-align: right;\\\\n    position: relative;\\\\n  }\\\\n  .vgt-compact td:before {\\\\n    content: attr(data-label);\\\\n    position: relative;\\\\n    float: left;\\\\n    left: 0;\\\\n    width: 40%;\\\\n    padding-left: 10px;\\\\n    font-weight: bold;\\\\n    text-align: left;\\\\n  }\\\\n  .vgt-compact th.line-numbers {\\\\n    width: 100% !important;\\\\n    display: block;\\\\n    padding: 0.3em 1em !important;\\\\n  }\\\\n}\\\\n.vgt-global-search {\\\\n  padding: 5px 0px;\\\\n  display: flex;\\\\n  flex-wrap: nowrap;\\\\n  align-items: stretch;\\\\n  border: 1px solid #DCDFE6;\\\\n  border-bottom: 0px;\\\\n  background: linear-gradient(#F4F5F8, #F1F3F6);\\\\n}\\\\n.vgt-global-search form {\\\\n  display: flex;\\\\n}\\\\n.vgt-global-search form label {\\\\n  margin-top: 3px;\\\\n}\\\\n\\\\n.vgt-global-search__input {\\\\n  position: relative;\\\\n  padding-left: 40px;\\\\n  flex-grow: 1;\\\\n}\\\\n.vgt-global-search__input .input__icon {\\\\n  position: absolute;\\\\n  left: 0px;\\\\n  max-width: 32px;\\\\n}\\\\n.vgt-global-search__input .input__icon .magnifying-glass {\\\\n  margin-top: 3px;\\\\n  margin-left: 8px;\\\\n  display: block;\\\\n  width: 16px;\\\\n  height: 16px;\\\\n  border: 2px solid #494949;\\\\n  position: relative;\\\\n  border-radius: 50%;\\\\n}\\\\n.vgt-global-search__input .input__icon .magnifying-glass:before {\\\\n  content: \\\\\"\\\\\";\\\\n  display: block;\\\\n  position: absolute;\\\\n  right: -7px;\\\\n  bottom: -5px;\\\\n  background: #494949;\\\\n  width: 8px;\\\\n  height: 4px;\\\\n  border-radius: 2px;\\\\n  transform: rotate(45deg);\\\\n  -webkit-transform: rotate(45deg);\\\\n  -moz-transform: rotate(45deg);\\\\n  -ms-transform: rotate(45deg);\\\\n  -o-transform: rotate(45deg);\\\\n}\\\\n.vgt-global-search__actions {\\\\n  margin-left: 10px;\\\\n}\\\\n\\\\n.vgt-selection-info-row {\\\\n  background: #fdf9e8;\\\\n  padding: 5px 16px;\\\\n  font-size: 13px;\\\\n  border-top: 1px solid #DCDFE6;\\\\n  border-left: 1px solid #DCDFE6;\\\\n  border-right: 1px solid #DCDFE6;\\\\n  color: #d3aa3b;\\\\n  font-weight: bold;\\\\n}\\\\n.vgt-selection-info-row a {\\\\n  font-weight: bold;\\\\n  display: inline-block;\\\\n  margin-left: 10px;\\\\n}\\\\n\\\\n.vgt-wrap__actions-footer {\\\\n  border: 1px solid #DCDFE6;\\\\n}\\\\n\\\\n.vgt-wrap__footer {\\\\n  color: #606266;\\\\n  font-size: 1.1rem;\\\\n  padding: 1em;\\\\n  border: 1px solid #DCDFE6;\\\\n  background: linear-gradient(#F4F5F8, #F1F3F6);\\\\n}\\\\n.vgt-wrap__footer .footer__row-count {\\\\n  position: relative;\\\\n  padding-right: 3px;\\\\n}\\\\n.vgt-wrap__footer .footer__row-count__label, .vgt-wrap__footer .footer__row-count__select {\\\\n  display: inline-block;\\\\n  vertical-align: middle;\\\\n}\\\\n.vgt-wrap__footer .footer__row-count__label {\\\\n  font-size: 1.1rem;\\\\n}\\\\n.vgt-wrap__footer .footer__row-count__select {\\\\n  font-size: 1.1rem;\\\\n  background-color: transparent;\\\\n  width: auto;\\\\n  padding: 0;\\\\n  border: 0;\\\\n  border-radius: 0;\\\\n  height: auto;\\\\n  margin-left: 8px;\\\\n  color: #606266;\\\\n  font-weight: bold;\\\\n  -webkit-appearance: none;\\\\n  -moz-appearance: none;\\\\n  appearance: none;\\\\n  padding-right: 15px;\\\\n  padding-left: 5px;\\\\n}\\\\n.vgt-wrap__footer .footer__row-count__select::-ms-expand {\\\\n  display: none;\\\\n}\\\\n.vgt-wrap__footer .footer__row-count__select:focus {\\\\n  outline: none;\\\\n  border-color: #409eff;\\\\n}\\\\n.vgt-wrap__footer .footer__row-count::after {\\\\n  content: \\\\\"\\\\\";\\\\n  display: block;\\\\n  position: absolute;\\\\n  height: 0px;\\\\n  width: 0px;\\\\n  right: 6px;\\\\n  top: 50%;\\\\n  margin-top: -1px;\\\\n  border-top: 6px solid #606266;\\\\n  border-left: 6px solid transparent;\\\\n  border-right: 6px solid transparent;\\\\n  border-bottom: none;\\\\n  pointer-events: none;\\\\n}\\\\n.vgt-wrap__footer .footer__navigation {\\\\n  font-size: 1.1rem;\\\\n}\\\\n.vgt-wrap__footer .footer__navigation > button:first-of-type {\\\\n  margin-right: 16px;\\\\n}\\\\n.vgt-wrap__footer .footer__navigation__page-btn, .vgt-wrap__footer .footer__navigation__info, .vgt-wrap__footer .footer__navigation__page-info {\\\\n  display: inline-block;\\\\n  vertical-align: middle;\\\\n  color: #909399;\\\\n}\\\\n.vgt-wrap__footer .footer__navigation__page-btn {\\\\n  -webkit-appearance: none;\\\\n  -moz-appearance: none;\\\\n  appearance: none;\\\\n  background: transparent;\\\\n  border: none;\\\\n  text-decoration: none;\\\\n  color: #606266;\\\\n  font-weight: bold;\\\\n  white-space: nowrap;\\\\n  vertical-align: middle;\\\\n}\\\\n.vgt-wrap__footer .footer__navigation__page-btn:hover {\\\\n  cursor: pointer;\\\\n}\\\\n.vgt-wrap__footer .footer__navigation__page-btn.disabled, .vgt-wrap__footer .footer__navigation__page-btn.disabled:hover {\\\\n  opacity: 0.5;\\\\n  cursor: not-allowed;\\\\n}\\\\n.vgt-wrap__footer .footer__navigation__page-btn.disabled .chevron.left:after, .vgt-wrap__footer .footer__navigation__page-btn.disabled:hover .chevron.left:after {\\\\n  border-right-color: #606266;\\\\n}\\\\n.vgt-wrap__footer .footer__navigation__page-btn.disabled .chevron.right:after, .vgt-wrap__footer .footer__navigation__page-btn.disabled:hover .chevron.right:after {\\\\n  border-left-color: #606266;\\\\n}\\\\n.vgt-wrap__footer .footer__navigation__page-btn span {\\\\n  display: inline-block;\\\\n  vertical-align: middle;\\\\n  font-size: 1.1rem;\\\\n}\\\\n.vgt-wrap__footer .footer__navigation__page-btn .chevron {\\\\n  width: 24px;\\\\n  height: 24px;\\\\n  border-radius: 15%;\\\\n  position: relative;\\\\n  margin: 0;\\\\n  display: inline-block;\\\\n  vertical-align: middle;\\\\n}\\\\n.vgt-wrap__footer .footer__navigation__page-btn .chevron:after {\\\\n  content: \\\\\"\\\\\";\\\\n  position: absolute;\\\\n  display: block;\\\\n  left: 50%;\\\\n  top: 50%;\\\\n  margin-top: -6px;\\\\n  border-top: 6px solid transparent;\\\\n  border-bottom: 6px solid transparent;\\\\n}\\\\n.vgt-wrap__footer .footer__navigation__page-btn .chevron.left::after {\\\\n  border-right: 6px solid #409eff;\\\\n  margin-left: -3px;\\\\n}\\\\n.vgt-wrap__footer .footer__navigation__page-btn .chevron.right::after {\\\\n  border-left: 6px solid #409eff;\\\\n  margin-left: -3px;\\\\n}\\\\n.vgt-wrap__footer .footer__navigation__info, .vgt-wrap__footer .footer__navigation__page-info {\\\\n  display: inline-block;\\\\n  margin: 0px 16px;\\\\n}\\\\n.vgt-wrap__footer .footer__navigation__page-info span {\\\\n  display: inline-block;\\\\n  vertical-align: middle;\\\\n}\\\\n.vgt-wrap__footer .footer__navigation__page-info__current-entry {\\\\n  width: 30px;\\\\n  text-align: center;\\\\n  vertical-align: middle;\\\\n  display: inline-block;\\\\n  margin: 0px 10px;\\\\n  font-weight: bold;\\\\n}\\\\n\\\\n@media only screen and (max-width: 750px) {\\\\n  /* on small screens hide the info */\\\\n  .vgt-wrap__footer .footer__navigation__info {\\\\n    display: none;\\\\n  }\\\\n\\\\n  .vgt-wrap__footer .footer__navigation__page-btn {\\\\n    margin-left: 16px;\\\\n  }\\\\n}\\\\n.vgt-table.nocturnal {\\\\n  border: 1px solid #435169;\\\\n  background-color: #324057;\\\\n}\\\\n.vgt-table.nocturnal tr.clickable:hover {\\\\n  background-color: #445168;\\\\n}\\\\n.vgt-table.nocturnal td {\\\\n  border-bottom: 1px solid #435169;\\\\n  color: #C7CED8;\\\\n}\\\\n.vgt-table.nocturnal th.line-numbers, .vgt-table.nocturnal th.vgt-checkbox-col {\\\\n  color: #C7CED8;\\\\n  border-right: 1px solid #435169;\\\\n  background: linear-gradient(#2C394F, #2C394F);\\\\n}\\\\n.vgt-table.nocturnal thead th {\\\\n  color: #C7CED8;\\\\n  border-bottom: 1px solid #435169;\\\\n  background: linear-gradient(#2C394F, #2C394F);\\\\n}\\\\n.vgt-table.nocturnal thead th.sortable:before {\\\\n  border-top-color: #3e5170;\\\\n}\\\\n.vgt-table.nocturnal thead th.sortable:after {\\\\n  border-bottom-color: #3e5170;\\\\n}\\\\n.vgt-table.nocturnal thead th.sortable.sorting-asc {\\\\n  color: white;\\\\n}\\\\n.vgt-table.nocturnal thead th.sortable.sorting-asc:after {\\\\n  border-bottom-color: #409eff;\\\\n}\\\\n.vgt-table.nocturnal thead th.sortable.sorting-desc {\\\\n  color: white;\\\\n}\\\\n.vgt-table.nocturnal thead th.sortable.sorting-desc:before {\\\\n  border-top-color: #409eff;\\\\n}\\\\n.vgt-table.nocturnal.bordered td, .vgt-table.nocturnal.bordered th {\\\\n  border: 1px solid #435169;\\\\n}\\\\n.vgt-table.nocturnal .vgt-input, .vgt-table.nocturnal .vgt-select {\\\\n  color: #C7CED8;\\\\n  background-color: #232d3f;\\\\n  border: 1px solid #435169;\\\\n}\\\\n.vgt-table.nocturnal .vgt-input::-moz-placeholder, .vgt-table.nocturnal .vgt-select::-moz-placeholder {\\\\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\\\\n  color: #C7CED8;\\\\n  opacity: 0.3;\\\\n  /* Firefox */\\\\n}\\\\n.vgt-table.nocturnal .vgt-input:-ms-input-placeholder, .vgt-table.nocturnal .vgt-select:-ms-input-placeholder {\\\\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\\\\n  color: #C7CED8;\\\\n  opacity: 0.3;\\\\n  /* Firefox */\\\\n}\\\\n.vgt-table.nocturnal .vgt-input::placeholder, .vgt-table.nocturnal .vgt-select::placeholder {\\\\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\\\\n  color: #C7CED8;\\\\n  opacity: 0.3;\\\\n  /* Firefox */\\\\n}\\\\n\\\\n.vgt-wrap.nocturnal .vgt-wrap__footer {\\\\n  color: #C7CED8;\\\\n  border: 1px solid #435169;\\\\n  background: linear-gradient(#2C394F, #2C394F);\\\\n}\\\\n.vgt-wrap.nocturnal .vgt-wrap__footer .footer__row-count {\\\\n  position: relative;\\\\n}\\\\n.vgt-wrap.nocturnal .vgt-wrap__footer .footer__row-count__label {\\\\n  color: #8290A7;\\\\n}\\\\n.vgt-wrap.nocturnal .vgt-wrap__footer .footer__row-count__select {\\\\n  color: #C7CED8;\\\\n  background: #232d3f;\\\\n  border: none;\\\\n  -webkit-appearance: none;\\\\n  -moz-appearance: none;\\\\n  appearance: none;\\\\n  padding-right: 15px;\\\\n  padding-left: 10px;\\\\n  border-radius: 3px;\\\\n  text-align: center;\\\\n}\\\\n.vgt-wrap.nocturnal .vgt-wrap__footer .footer__row-count__select:focus {\\\\n  border-color: #409eff;\\\\n}\\\\n.vgt-wrap.nocturnal .vgt-wrap__footer .footer__row-count::after {\\\\n  content: \\\\\"\\\\\";\\\\n  display: block;\\\\n  position: absolute;\\\\n  height: 0px;\\\\n  width: 0px;\\\\n  right: 6px;\\\\n  top: 50%;\\\\n  margin-top: -1px;\\\\n  border-top: 6px solid #C7CED8;\\\\n  border-left: 6px solid transparent;\\\\n  border-right: 6px solid transparent;\\\\n  border-bottom: none;\\\\n  pointer-events: none;\\\\n}\\\\n.vgt-wrap.nocturnal .vgt-wrap__footer .footer__navigation__page-btn {\\\\n  color: #C7CED8;\\\\n}\\\\n.vgt-wrap.nocturnal .vgt-wrap__footer .footer__navigation__page-btn.disabled .chevron.left:after, .vgt-wrap.nocturnal .vgt-wrap__footer .footer__navigation__page-btn.disabled:hover .chevron.left:after {\\\\n  border-right-color: #C7CED8;\\\\n}\\\\n.vgt-wrap.nocturnal .vgt-wrap__footer .footer__navigation__page-btn.disabled .chevron.right:after, .vgt-wrap.nocturnal .vgt-wrap__footer .footer__navigation__page-btn.disabled:hover .chevron.right:after {\\\\n  border-left-color: #C7CED8;\\\\n}\\\\n.vgt-wrap.nocturnal .vgt-wrap__footer .footer__navigation__info, .vgt-wrap.nocturnal .vgt-wrap__footer .footer__navigation__page-info {\\\\n  color: #8290A7;\\\\n}\\\\n.vgt-wrap.nocturnal .vgt-global-search {\\\\n  border: 1px solid #435169;\\\\n  background: linear-gradient(#2C394F, #2C394F);\\\\n}\\\\n.vgt-wrap.nocturnal .vgt-global-search__input .input__icon .magnifying-glass {\\\\n  border: 2px solid #3f4c63;\\\\n}\\\\n.vgt-wrap.nocturnal .vgt-global-search__input .input__icon .magnifying-glass:before {\\\\n  background: #3f4c63;\\\\n}\\\\n.vgt-wrap.nocturnal .vgt-global-search__input .vgt-input, .vgt-wrap.nocturnal .vgt-global-search__input .vgt-select {\\\\n  color: #C7CED8;\\\\n  background-color: #232d3f;\\\\n  border: 1px solid #435169;\\\\n}\\\\n.vgt-wrap.nocturnal .vgt-global-search__input .vgt-input::-moz-placeholder, .vgt-wrap.nocturnal .vgt-global-search__input .vgt-select::-moz-placeholder {\\\\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\\\\n  color: #C7CED8;\\\\n  opacity: 0.3;\\\\n  /* Firefox */\\\\n}\\\\n.vgt-wrap.nocturnal .vgt-global-search__input .vgt-input:-ms-input-placeholder, .vgt-wrap.nocturnal .vgt-global-search__input .vgt-select:-ms-input-placeholder {\\\\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\\\\n  color: #C7CED8;\\\\n  opacity: 0.3;\\\\n  /* Firefox */\\\\n}\\\\n.vgt-wrap.nocturnal .vgt-global-search__input .vgt-input::placeholder, .vgt-wrap.nocturnal .vgt-global-search__input .vgt-select::placeholder {\\\\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\\\\n  color: #C7CED8;\\\\n  opacity: 0.3;\\\\n  /* Firefox */\\\\n}\\\\n\\\\n.vgt-table.black-rhino {\\\\n  border: 1px solid #435169;\\\\n  background-color: #dfe5ee;\\\\n}\\\\n.vgt-table.black-rhino tr.clickable:hover {\\\\n  background-color: #fff;\\\\n}\\\\n.vgt-table.black-rhino td {\\\\n  border-bottom: 1px solid #bbc5d6;\\\\n  color: #49515e;\\\\n}\\\\n.vgt-table.black-rhino th.line-numbers, .vgt-table.black-rhino th.vgt-checkbox-col {\\\\n  color: #dae2f0;\\\\n  border-right: 1px solid #435169;\\\\n  background: linear-gradient(#4c5c79, #4e5d7c);\\\\n}\\\\n.vgt-table.black-rhino thead th {\\\\n  color: #dae2f0;\\\\n  text-shadow: 1px 1px #3e5170;\\\\n  border-bottom: 1px solid #435169;\\\\n  background: linear-gradient(#4c5c79, #4e5d7c);\\\\n}\\\\n.vgt-table.black-rhino thead th.sortable:before {\\\\n  border-top-color: #607498;\\\\n}\\\\n.vgt-table.black-rhino thead th.sortable:after {\\\\n  border-bottom-color: #607498;\\\\n}\\\\n.vgt-table.black-rhino thead th.sortable.sorting-asc {\\\\n  color: white;\\\\n}\\\\n.vgt-table.black-rhino thead th.sortable.sorting-asc:after {\\\\n  border-bottom-color: #409eff;\\\\n}\\\\n.vgt-table.black-rhino thead th.sortable.sorting-desc:before {\\\\n  border-top-color: #409eff;\\\\n}\\\\n.vgt-table.black-rhino.bordered td {\\\\n  border: 1px solid #bbc5d6;\\\\n}\\\\n.vgt-table.black-rhino.bordered th {\\\\n  border: 1px solid #435169;\\\\n}\\\\n.vgt-table.black-rhino .vgt-input, .vgt-table.black-rhino .vgt-select {\\\\n  color: #dae2f0;\\\\n  background-color: #34445f;\\\\n  border: 1px solid transparent;\\\\n}\\\\n.vgt-table.black-rhino .vgt-input::-moz-placeholder, .vgt-table.black-rhino .vgt-select::-moz-placeholder {\\\\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\\\\n  color: #dae2f0;\\\\n  opacity: 0.3;\\\\n  /* Firefox */\\\\n}\\\\n.vgt-table.black-rhino .vgt-input:-ms-input-placeholder, .vgt-table.black-rhino .vgt-select:-ms-input-placeholder {\\\\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\\\\n  color: #dae2f0;\\\\n  opacity: 0.3;\\\\n  /* Firefox */\\\\n}\\\\n.vgt-table.black-rhino .vgt-input::placeholder, .vgt-table.black-rhino .vgt-select::placeholder {\\\\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\\\\n  color: #dae2f0;\\\\n  opacity: 0.3;\\\\n  /* Firefox */\\\\n}\\\\n\\\\n.vgt-wrap.black-rhino .vgt-wrap__footer {\\\\n  color: #dae2f0;\\\\n  border: 1px solid #435169;\\\\n  background: linear-gradient(#4c5c79, #4e5d7c);\\\\n}\\\\n.vgt-wrap.black-rhino .vgt-wrap__footer .footer__row-count {\\\\n  position: relative;\\\\n  padding-right: 3px;\\\\n}\\\\n.vgt-wrap.black-rhino .vgt-wrap__footer .footer__row-count__label {\\\\n  color: #98a5b9;\\\\n}\\\\n.vgt-wrap.black-rhino .vgt-wrap__footer .footer__row-count__select {\\\\n  color: #49515e;\\\\n  background: #34445f;\\\\n  border: none;\\\\n  -webkit-appearance: none;\\\\n  -moz-appearance: none;\\\\n  appearance: none;\\\\n  padding-right: 15px;\\\\n  padding-left: 5px;\\\\n  border-radius: 3px;\\\\n}\\\\n.vgt-wrap.black-rhino .vgt-wrap__footer .footer__row-count__select::-ms-expand {\\\\n  display: none;\\\\n}\\\\n.vgt-wrap.black-rhino .vgt-wrap__footer .footer__row-count__select:focus {\\\\n  border-color: #409eff;\\\\n}\\\\n.vgt-wrap.black-rhino .vgt-wrap__footer .footer__row-count::after {\\\\n  content: \\\\\"\\\\\";\\\\n  display: block;\\\\n  position: absolute;\\\\n  height: 0px;\\\\n  width: 0px;\\\\n  right: 6px;\\\\n  top: 50%;\\\\n  margin-top: -1px;\\\\n  border-top: 6px solid #49515e;\\\\n  border-left: 6px solid transparent;\\\\n  border-right: 6px solid transparent;\\\\n  border-bottom: none;\\\\n  pointer-events: none;\\\\n}\\\\n.vgt-wrap.black-rhino .vgt-wrap__footer .footer__navigation__page-btn {\\\\n  color: #dae2f0;\\\\n}\\\\n.vgt-wrap.black-rhino .vgt-wrap__footer .footer__navigation__page-btn.disabled .chevron.left:after, .vgt-wrap.black-rhino .vgt-wrap__footer .footer__navigation__page-btn.disabled:hover .chevron.left:after {\\\\n  border-right-color: #dae2f0;\\\\n}\\\\n.vgt-wrap.black-rhino .vgt-wrap__footer .footer__navigation__page-btn.disabled .chevron.right:after, .vgt-wrap.black-rhino .vgt-wrap__footer .footer__navigation__page-btn.disabled:hover .chevron.right:after {\\\\n  border-left-color: #dae2f0;\\\\n}\\\\n.vgt-wrap.black-rhino .vgt-wrap__footer .footer__navigation__info, .vgt-wrap.black-rhino .vgt-wrap__footer .footer__navigation__page-info {\\\\n  color: #dae2f0;\\\\n}\\\\n.vgt-wrap.black-rhino .vgt-global-search {\\\\n  border: 1px solid #435169;\\\\n  background: linear-gradient(#4c5c79, #4e5d7c);\\\\n}\\\\n.vgt-wrap.black-rhino .vgt-global-search__input .input__icon .magnifying-glass {\\\\n  border: 2px solid #3f4c63;\\\\n}\\\\n.vgt-wrap.black-rhino .vgt-global-search__input .input__icon .magnifying-glass:before {\\\\n  background: #3f4c63;\\\\n}\\\\n.vgt-wrap.black-rhino .vgt-global-search__input .vgt-input, .vgt-wrap.black-rhino .vgt-global-search__input .vgt-select {\\\\n  color: #dae2f0;\\\\n  background-color: #44516c;\\\\n  border: 1px solid transparent;\\\\n}\\\\n.vgt-wrap.black-rhino .vgt-global-search__input .vgt-input::-moz-placeholder, .vgt-wrap.black-rhino .vgt-global-search__input .vgt-select::-moz-placeholder {\\\\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\\\\n  color: #dae2f0;\\\\n  opacity: 0.3;\\\\n  /* Firefox */\\\\n}\\\\n.vgt-wrap.black-rhino .vgt-global-search__input .vgt-input:-ms-input-placeholder, .vgt-wrap.black-rhino .vgt-global-search__input .vgt-select:-ms-input-placeholder {\\\\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\\\\n  color: #dae2f0;\\\\n  opacity: 0.3;\\\\n  /* Firefox */\\\\n}\\\\n.vgt-wrap.black-rhino .vgt-global-search__input .vgt-input::placeholder, .vgt-wrap.black-rhino .vgt-global-search__input .vgt-select::placeholder {\\\\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\\\\n  color: #dae2f0;\\\\n  opacity: 0.3;\\\\n  /* Firefox */\\\\n}\\\\n\\\\n.vgt-inner-wrap {\\\\n  border-radius: 0.25rem;\\\\n  box-shadow: 0 1px 3px 0 rgba(50, 50, 93, 0.1), 0 1px 2px 0 rgba(50, 50, 93, 0.06);\\\\n}\\\\n\\\\n.vgt-table.polar-bear {\\\\n  border-spacing: 0;\\\\n  border-collapse: separate;\\\\n  font-size: 1rem;\\\\n  background-color: #FFFFFF;\\\\n  border: 1px solid #e3e8ee;\\\\n  border-bottom: none;\\\\n  border-radius: 0.25rem;\\\\n}\\\\n.vgt-table.polar-bear td {\\\\n  padding: 1em 0.75em 1em 0.75em;\\\\n  border-bottom: 1px solid #E4EBF3;\\\\n  color: #525f7f;\\\\n}\\\\n.vgt-table.polar-bear td.vgt-right-align {\\\\n  text-align: right;\\\\n}\\\\n.vgt-table.polar-bear th.line-numbers, .vgt-table.polar-bear th.vgt-checkbox-col {\\\\n  color: #394567;\\\\n  border-right: 1px solid #e3e8ee;\\\\n  background: #f7fafc;\\\\n}\\\\n.vgt-table.polar-bear thead th {\\\\n  color: #667b94;\\\\n  font-weight: 600;\\\\n  border-bottom: 1px solid #e3e8ee;\\\\n  background: #f7fafc;\\\\n}\\\\n.vgt-table.polar-bear thead th.sorting-asc, .vgt-table.polar-bear thead th.sorting-desc {\\\\n  color: #5e72e4;\\\\n}\\\\n.vgt-table.polar-bear thead th.sorting-desc:before {\\\\n  border-top: 5px solid #7485e8;\\\\n}\\\\n.vgt-table.polar-bear thead th.sorting-asc:after {\\\\n  border-bottom: 5px solid #7485e8;\\\\n}\\\\n.vgt-table.polar-bear thead th .vgt-input, .vgt-table.polar-bear thead th .vgt-select {\\\\n  height: 2.75em;\\\\n  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);\\\\n  border: 1px solid #E4EBF3;\\\\n}\\\\n.vgt-table.polar-bear thead th .vgt-input:focus, .vgt-table.polar-bear thead th .vgt-select:focus {\\\\n  outline: 0;\\\\n  border-color: #cae0fe;\\\\n}\\\\n.vgt-table.polar-bear thead tr:first-child th:first-child {\\\\n  border-top-left-radius: 0.25rem;\\\\n}\\\\n.vgt-table.polar-bear thead tr:first-child th:last-child {\\\\n  border-top-right-radius: 0.25rem;\\\\n}\\\\n.vgt-table.polar-bear.bordered td {\\\\n  border: 1px solid #e3e8ee;\\\\n  background: #FFFFFF;\\\\n}\\\\n.vgt-table.polar-bear.bordered th {\\\\n  border: 1px solid #e3e8ee;\\\\n}\\\\n\\\\n.vgt-wrap.polar-bear .vgt-wrap__footer {\\\\n  color: #394567;\\\\n  border: 1px solid #e3e8ee;\\\\n  border-bottom: 0px;\\\\n  border-top: 0px;\\\\n  background: linear-gradient(#f7fafc, #f7fafc);\\\\n}\\\\n.vgt-wrap.polar-bear .vgt-wrap__footer .footer__row-count {\\\\n  position: relative;\\\\n  padding-right: 3px;\\\\n}\\\\n.vgt-wrap.polar-bear .vgt-wrap__footer .footer__row-count__label {\\\\n  color: #98a5b9;\\\\n}\\\\n.vgt-wrap.polar-bear .vgt-wrap__footer .footer__row-count__select {\\\\n  text-align: center;\\\\n  color: #525f7f;\\\\n  background: #FFFFFF;\\\\n  border: none;\\\\n  -webkit-appearance: none;\\\\n  -moz-appearance: none;\\\\n  appearance: none;\\\\n  padding: 5px;\\\\n  padding-right: 30px;\\\\n  border-radius: 3px;\\\\n  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);\\\\n  border: 1px solid #E4EBF3;\\\\n}\\\\n.vgt-wrap.polar-bear .vgt-wrap__footer .footer__row-count__select::-ms-expand {\\\\n  display: none;\\\\n}\\\\n.vgt-wrap.polar-bear .vgt-wrap__footer .footer__row-count__select:focus {\\\\n  border-color: #5e72e4;\\\\n}\\\\n.vgt-wrap.polar-bear .vgt-wrap__footer .footer__row-count::after {\\\\n  content: \\\\\"\\\\\";\\\\n  display: block;\\\\n  position: absolute;\\\\n  height: 0px;\\\\n  width: 0px;\\\\n  right: 15px;\\\\n  top: 50%;\\\\n  margin-top: -3px;\\\\n  border-top: 6px solid #525f7f;\\\\n  border-left: 6px solid transparent;\\\\n  border-right: 6px solid transparent;\\\\n  border-bottom: none;\\\\n  pointer-events: none;\\\\n}\\\\n.vgt-wrap.polar-bear .vgt-wrap__footer .footer__navigation__page-btn {\\\\n  color: #394567;\\\\n}\\\\n.vgt-wrap.polar-bear .vgt-wrap__footer .footer__navigation__page-btn.disabled .chevron.left:after, .vgt-wrap.polar-bear .vgt-wrap__footer .footer__navigation__page-btn.disabled:hover .chevron.left:after {\\\\n  border-right-color: #394567;\\\\n}\\\\n.vgt-wrap.polar-bear .vgt-wrap__footer .footer__navigation__page-btn.disabled .chevron.right:after, .vgt-wrap.polar-bear .vgt-wrap__footer .footer__navigation__page-btn.disabled:hover .chevron.right:after {\\\\n  border-left-color: #394567;\\\\n}\\\\n.vgt-wrap.polar-bear .vgt-wrap__footer .footer__navigation__info, .vgt-wrap.polar-bear .vgt-wrap__footer .footer__navigation__page-info {\\\\n  color: #394567;\\\\n}\\\\n.vgt-wrap.polar-bear .vgt-global-search {\\\\n  border: 1px solid #e3e8ee;\\\\n  border-bottom: 0px;\\\\n  border-top-left-radius: 3px;\\\\n  border-top-right-radius: 3px;\\\\n  background: #f7fafc;\\\\n}\\\\n.vgt-wrap.polar-bear .vgt-global-search__input .input__icon .magnifying-glass {\\\\n  border: 2px solid #dde3ea;\\\\n}\\\\n.vgt-wrap.polar-bear .vgt-global-search__input .input__icon .magnifying-glass:before {\\\\n  background: #dde3ea;\\\\n}\\\\n.vgt-wrap.polar-bear .vgt-global-search__input .vgt-input, .vgt-wrap.polar-bear .vgt-global-search__input .vgt-select {\\\\n  height: 2.75em;\\\\n  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);\\\\n  border: 1px solid #E4EBF3;\\\\n}\\\\n.vgt-wrap.polar-bear .vgt-global-search__input .vgt-input::-moz-placeholder, .vgt-wrap.polar-bear .vgt-global-search__input .vgt-select::-moz-placeholder {\\\\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\\\\n  color: #394567;\\\\n  opacity: 0.3;\\\\n  /* Firefox */\\\\n}\\\\n.vgt-wrap.polar-bear .vgt-global-search__input .vgt-input:-ms-input-placeholder, .vgt-wrap.polar-bear .vgt-global-search__input .vgt-select:-ms-input-placeholder {\\\\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\\\\n  color: #394567;\\\\n  opacity: 0.3;\\\\n  /* Firefox */\\\\n}\\\\n.vgt-wrap.polar-bear .vgt-global-search__input .vgt-input::placeholder, .vgt-wrap.polar-bear .vgt-global-search__input .vgt-select::placeholder {\\\\n  /* Chrome, Firefox, Opera, Safari 10.1+ */\\\\n  color: #394567;\\\\n  opacity: 0.3;\\\\n  /* Firefox */\\\\n}\", \"\"]);\\n// Exports\\nmodule.exports = exports;\\n\\n\\n//# sourceURL=webpack:///./node_modules/vue-good-table-next/dist/vue-good-table-next.css?./node_modules/css-loader/dist/cjs.js??ref--7-oneOf-3-1!./node_modules/postcss-loader/src??ref--7-oneOf-3-2')},\"./node_modules/vue-good-table-next/dist/vue-good-table-next.css\":\n/*!***********************************************************************!*\\\n  !*** ./node_modules/vue-good-table-next/dist/vue-good-table-next.css ***!\n  \\***********************************************************************/\n/*! no static exports found */function(module,exports,__webpack_require__){eval('// style-loader: Adds some css to the DOM by adding a <style> tag\\n\\n// load the styles\\nvar content = __webpack_require__(/*! !../../css-loader/dist/cjs.js??ref--7-oneOf-3-1!../../postcss-loader/src??ref--7-oneOf-3-2!./vue-good-table-next.css */ \"./node_modules/css-loader/dist/cjs.js?!./node_modules/postcss-loader/src/index.js?!./node_modules/vue-good-table-next/dist/vue-good-table-next.css\");\\nif(content.__esModule) content = content.default;\\nif(typeof content === \\'string\\') content = [[module.i, content, \\'\\']];\\nif(content.locals) module.exports = content.locals;\\n// add the styles to the DOM\\nvar add = __webpack_require__(/*! ../../vue-style-loader/lib/addStylesClient.js */ \"./node_modules/vue-style-loader/lib/addStylesClient.js\").default\\nvar update = add(\"0db90542\", content, false, {\"sourceMap\":false,\"shadowMode\":false});\\n// Hot Module Replacement\\nif(false) {}\\n\\n//# sourceURL=webpack:///./node_modules/vue-good-table-next/dist/vue-good-table-next.css?')},\"./node_modules/vue-good-table-next/dist/vue-good-table.esm.js\":\n/*!*********************************************************************!*\\\n  !*** ./node_modules/vue-good-table-next/dist/vue-good-table.esm.js ***!\n  \\*********************************************************************/\n/*! exports provided: VueGoodTable, default */function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval(\"__webpack_require__.r(__webpack_exports__);\\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"VueGoodTable\\\", function() { return VueGoodTable; });\\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \\\"default\\\", function() { return index; });\\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ \\\"./node_modules/vue/dist/vue.runtime.esm-bundler.js\\\");\\n/*!\\n  * vue-good-table-next v0.0.1\\n  * (c) 2021-present Boris Flesch <boris@singlequote.net>\\n  * (c) 2017-2021 xaksis <shay@crayonbits.com>\\n  * @license MIT\\n  */\\n\\n\\nconst DEFAULT_SORT_TYPE = 'asc';\\nconst SORT_TYPES = {\\n  Ascending: 'asc',\\n  Descending: 'desc',\\n  None: 'none',\\n};\\n\\nconst PAGINATION_MODES = {\\n  Pages: 'pages',\\n  Records: 'records',\\n};\\nconst DEFAULT_ROWS_PER_PAGE_DROPDOWN = [10, 20, 30, 40, 50];\\n\\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\\n\\nvar lodash_isequal = {exports: {}};\\n\\n/**\\n * Lodash (Custom Build) <https://lodash.com/>\\n * Build: `lodash modularize exports=\\\"npm\\\" -o ./`\\n * Copyright JS Foundation and other contributors <https://js.foundation/>\\n * Released under MIT license <https://lodash.com/license>\\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\\n */\\n\\n(function (module, exports) {\\n/** Used as the size to enable large array optimizations. */\\nvar LARGE_ARRAY_SIZE = 200;\\n\\n/** Used to stand-in for `undefined` hash values. */\\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\\n\\n/** Used to compose bitmasks for value comparisons. */\\nvar COMPARE_PARTIAL_FLAG = 1,\\n    COMPARE_UNORDERED_FLAG = 2;\\n\\n/** Used as references for various `Number` constants. */\\nvar MAX_SAFE_INTEGER = 9007199254740991;\\n\\n/** `Object#toString` result references. */\\nvar argsTag = '[object Arguments]',\\n    arrayTag = '[object Array]',\\n    asyncTag = '[object AsyncFunction]',\\n    boolTag = '[object Boolean]',\\n    dateTag = '[object Date]',\\n    errorTag = '[object Error]',\\n    funcTag = '[object Function]',\\n    genTag = '[object GeneratorFunction]',\\n    mapTag = '[object Map]',\\n    numberTag = '[object Number]',\\n    nullTag = '[object Null]',\\n    objectTag = '[object Object]',\\n    promiseTag = '[object Promise]',\\n    proxyTag = '[object Proxy]',\\n    regexpTag = '[object RegExp]',\\n    setTag = '[object Set]',\\n    stringTag = '[object String]',\\n    symbolTag = '[object Symbol]',\\n    undefinedTag = '[object Undefined]',\\n    weakMapTag = '[object WeakMap]';\\n\\nvar arrayBufferTag = '[object ArrayBuffer]',\\n    dataViewTag = '[object DataView]',\\n    float32Tag = '[object Float32Array]',\\n    float64Tag = '[object Float64Array]',\\n    int8Tag = '[object Int8Array]',\\n    int16Tag = '[object Int16Array]',\\n    int32Tag = '[object Int32Array]',\\n    uint8Tag = '[object Uint8Array]',\\n    uint8ClampedTag = '[object Uint8ClampedArray]',\\n    uint16Tag = '[object Uint16Array]',\\n    uint32Tag = '[object Uint32Array]';\\n\\n/**\\n * Used to match `RegExp`\\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\\n */\\nvar reRegExpChar = /[\\\\\\\\^$.*+?()[\\\\]{}|]/g;\\n\\n/** Used to detect host constructors (Safari). */\\nvar reIsHostCtor = /^\\\\[object .+?Constructor\\\\]$/;\\n\\n/** Used to detect unsigned integer values. */\\nvar reIsUint = /^(?:0|[1-9]\\\\d*)$/;\\n\\n/** Used to identify `toStringTag` values of typed arrays. */\\nvar typedArrayTags = {};\\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\\ntypedArrayTags[uint32Tag] = true;\\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\\ntypedArrayTags[weakMapTag] = false;\\n\\n/** Detect free variable `global` from Node.js. */\\nvar freeGlobal = typeof commonjsGlobal == 'object' && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;\\n\\n/** Detect free variable `self`. */\\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\\n\\n/** Used as a reference to the global object. */\\nvar root = freeGlobal || freeSelf || Function('return this')();\\n\\n/** Detect free variable `exports`. */\\nvar freeExports = exports && !exports.nodeType && exports;\\n\\n/** Detect free variable `module`. */\\nvar freeModule = freeExports && 'object' == 'object' && module && !module.nodeType && module;\\n\\n/** Detect the popular CommonJS extension `module.exports`. */\\nvar moduleExports = freeModule && freeModule.exports === freeExports;\\n\\n/** Detect free variable `process` from Node.js. */\\nvar freeProcess = moduleExports && freeGlobal.process;\\n\\n/** Used to access faster Node.js helpers. */\\nvar nodeUtil = (function() {\\n  try {\\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\\n  } catch (e) {}\\n}());\\n\\n/* Node.js helper references. */\\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\\n\\n/**\\n * A specialized version of `_.filter` for arrays without support for\\n * iteratee shorthands.\\n *\\n * @private\\n * @param {Array} [array] The array to iterate over.\\n * @param {Function} predicate The function invoked per iteration.\\n * @returns {Array} Returns the new filtered array.\\n */\\nfunction arrayFilter(array, predicate) {\\n  var index = -1,\\n      length = array == null ? 0 : array.length,\\n      resIndex = 0,\\n      result = [];\\n\\n  while (++index < length) {\\n    var value = array[index];\\n    if (predicate(value, index, array)) {\\n      result[resIndex++] = value;\\n    }\\n  }\\n  return result;\\n}\\n\\n/**\\n * Appends the elements of `values` to `array`.\\n *\\n * @private\\n * @param {Array} array The array to modify.\\n * @param {Array} values The values to append.\\n * @returns {Array} Returns `array`.\\n */\\nfunction arrayPush(array, values) {\\n  var index = -1,\\n      length = values.length,\\n      offset = array.length;\\n\\n  while (++index < length) {\\n    array[offset + index] = values[index];\\n  }\\n  return array;\\n}\\n\\n/**\\n * A specialized version of `_.some` for arrays without support for iteratee\\n * shorthands.\\n *\\n * @private\\n * @param {Array} [array] The array to iterate over.\\n * @param {Function} predicate The function invoked per iteration.\\n * @returns {boolean} Returns `true` if any element passes the predicate check,\\n *  else `false`.\\n */\\nfunction arraySome(array, predicate) {\\n  var index = -1,\\n      length = array == null ? 0 : array.length;\\n\\n  while (++index < length) {\\n    if (predicate(array[index], index, array)) {\\n      return true;\\n    }\\n  }\\n  return false;\\n}\\n\\n/**\\n * The base implementation of `_.times` without support for iteratee shorthands\\n * or max array length checks.\\n *\\n * @private\\n * @param {number} n The number of times to invoke `iteratee`.\\n * @param {Function} iteratee The function invoked per iteration.\\n * @returns {Array} Returns the array of results.\\n */\\nfunction baseTimes(n, iteratee) {\\n  var index = -1,\\n      result = Array(n);\\n\\n  while (++index < n) {\\n    result[index] = iteratee(index);\\n  }\\n  return result;\\n}\\n\\n/**\\n * The base implementation of `_.unary` without support for storing metadata.\\n *\\n * @private\\n * @param {Function} func The function to cap arguments for.\\n * @returns {Function} Returns the new capped function.\\n */\\nfunction baseUnary(func) {\\n  return function(value) {\\n    return func(value);\\n  };\\n}\\n\\n/**\\n * Checks if a `cache` value for `key` exists.\\n *\\n * @private\\n * @param {Object} cache The cache to query.\\n * @param {string} key The key of the entry to check.\\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\\n */\\nfunction cacheHas(cache, key) {\\n  return cache.has(key);\\n}\\n\\n/**\\n * Gets the value at `key` of `object`.\\n *\\n * @private\\n * @param {Object} [object] The object to query.\\n * @param {string} key The key of the property to get.\\n * @returns {*} Returns the property value.\\n */\\nfunction getValue(object, key) {\\n  return object == null ? undefined : object[key];\\n}\\n\\n/**\\n * Converts `map` to its key-value pairs.\\n *\\n * @private\\n * @param {Object} map The map to convert.\\n * @returns {Array} Returns the key-value pairs.\\n */\\nfunction mapToArray(map) {\\n  var index = -1,\\n      result = Array(map.size);\\n\\n  map.forEach(function(value, key) {\\n    result[++index] = [key, value];\\n  });\\n  return result;\\n}\\n\\n/**\\n * Creates a unary function that invokes `func` with its argument transformed.\\n *\\n * @private\\n * @param {Function} func The function to wrap.\\n * @param {Function} transform The argument transform.\\n * @returns {Function} Returns the new function.\\n */\\nfunction overArg(func, transform) {\\n  return function(arg) {\\n    return func(transform(arg));\\n  };\\n}\\n\\n/**\\n * Converts `set` to an array of its values.\\n *\\n * @private\\n * @param {Object} set The set to convert.\\n * @returns {Array} Returns the values.\\n */\\nfunction setToArray(set) {\\n  var index = -1,\\n      result = Array(set.size);\\n\\n  set.forEach(function(value) {\\n    result[++index] = value;\\n  });\\n  return result;\\n}\\n\\n/** Used for built-in method references. */\\nvar arrayProto = Array.prototype,\\n    funcProto = Function.prototype,\\n    objectProto = Object.prototype;\\n\\n/** Used to detect overreaching core-js shims. */\\nvar coreJsData = root['__core-js_shared__'];\\n\\n/** Used to resolve the decompiled source of functions. */\\nvar funcToString = funcProto.toString;\\n\\n/** Used to check objects for own properties. */\\nvar hasOwnProperty = objectProto.hasOwnProperty;\\n\\n/** Used to detect methods masquerading as native. */\\nvar maskSrcKey = (function() {\\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\\n  return uid ? ('Symbol(src)_1.' + uid) : '';\\n}());\\n\\n/**\\n * Used to resolve the\\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\\n * of values.\\n */\\nvar nativeObjectToString = objectProto.toString;\\n\\n/** Used to detect if a method is native. */\\nvar reIsNative = RegExp('^' +\\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\\\\\$&')\\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\\\\\\\()| for .+?(?=\\\\\\\\\\\\])/g, '$1.*?') + '$'\\n);\\n\\n/** Built-in value references. */\\nvar Buffer = moduleExports ? root.Buffer : undefined,\\n    Symbol = root.Symbol,\\n    Uint8Array = root.Uint8Array,\\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\\n    splice = arrayProto.splice,\\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\\n\\n/* Built-in method references for those with the same name as other `lodash` methods. */\\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\\n    nativeKeys = overArg(Object.keys, Object);\\n\\n/* Built-in method references that are verified to be native. */\\nvar DataView = getNative(root, 'DataView'),\\n    Map = getNative(root, 'Map'),\\n    Promise = getNative(root, 'Promise'),\\n    Set = getNative(root, 'Set'),\\n    WeakMap = getNative(root, 'WeakMap'),\\n    nativeCreate = getNative(Object, 'create');\\n\\n/** Used to detect maps, sets, and weakmaps. */\\nvar dataViewCtorString = toSource(DataView),\\n    mapCtorString = toSource(Map),\\n    promiseCtorString = toSource(Promise),\\n    setCtorString = toSource(Set),\\n    weakMapCtorString = toSource(WeakMap);\\n\\n/** Used to convert symbols to primitives and strings. */\\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\\n\\n/**\\n * Creates a hash object.\\n *\\n * @private\\n * @constructor\\n * @param {Array} [entries] The key-value pairs to cache.\\n */\\nfunction Hash(entries) {\\n  var index = -1,\\n      length = entries == null ? 0 : entries.length;\\n\\n  this.clear();\\n  while (++index < length) {\\n    var entry = entries[index];\\n    this.set(entry[0], entry[1]);\\n  }\\n}\\n\\n/**\\n * Removes all key-value entries from the hash.\\n *\\n * @private\\n * @name clear\\n * @memberOf Hash\\n */\\nfunction hashClear() {\\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\\n  this.size = 0;\\n}\\n\\n/**\\n * Removes `key` and its value from the hash.\\n *\\n * @private\\n * @name delete\\n * @memberOf Hash\\n * @param {Object} hash The hash to modify.\\n * @param {string} key The key of the value to remove.\\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\\n */\\nfunction hashDelete(key) {\\n  var result = this.has(key) && delete this.__data__[key];\\n  this.size -= result ? 1 : 0;\\n  return result;\\n}\\n\\n/**\\n * Gets the hash value for `key`.\\n *\\n * @private\\n * @name get\\n * @memberOf Hash\\n * @param {string} key The key of the value to get.\\n * @returns {*} Returns the entry value.\\n */\\nfunction hashGet(key) {\\n  var data = this.__data__;\\n  if (nativeCreate) {\\n    var result = data[key];\\n    return result === HASH_UNDEFINED ? undefined : result;\\n  }\\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\\n}\\n\\n/**\\n * Checks if a hash value for `key` exists.\\n *\\n * @private\\n * @name has\\n * @memberOf Hash\\n * @param {string} key The key of the entry to check.\\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\\n */\\nfunction hashHas(key) {\\n  var data = this.__data__;\\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\\n}\\n\\n/**\\n * Sets the hash `key` to `value`.\\n *\\n * @private\\n * @name set\\n * @memberOf Hash\\n * @param {string} key The key of the value to set.\\n * @param {*} value The value to set.\\n * @returns {Object} Returns the hash instance.\\n */\\nfunction hashSet(key, value) {\\n  var data = this.__data__;\\n  this.size += this.has(key) ? 0 : 1;\\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\\n  return this;\\n}\\n\\n// Add methods to `Hash`.\\nHash.prototype.clear = hashClear;\\nHash.prototype['delete'] = hashDelete;\\nHash.prototype.get = hashGet;\\nHash.prototype.has = hashHas;\\nHash.prototype.set = hashSet;\\n\\n/**\\n * Creates an list cache object.\\n *\\n * @private\\n * @constructor\\n * @param {Array} [entries] The key-value pairs to cache.\\n */\\nfunction ListCache(entries) {\\n  var index = -1,\\n      length = entries == null ? 0 : entries.length;\\n\\n  this.clear();\\n  while (++index < length) {\\n    var entry = entries[index];\\n    this.set(entry[0], entry[1]);\\n  }\\n}\\n\\n/**\\n * Removes all key-value entries from the list cache.\\n *\\n * @private\\n * @name clear\\n * @memberOf ListCache\\n */\\nfunction listCacheClear() {\\n  this.__data__ = [];\\n  this.size = 0;\\n}\\n\\n/**\\n * Removes `key` and its value from the list cache.\\n *\\n * @private\\n * @name delete\\n * @memberOf ListCache\\n * @param {string} key The key of the value to remove.\\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\\n */\\nfunction listCacheDelete(key) {\\n  var data = this.__data__,\\n      index = assocIndexOf(data, key);\\n\\n  if (index < 0) {\\n    return false;\\n  }\\n  var lastIndex = data.length - 1;\\n  if (index == lastIndex) {\\n    data.pop();\\n  } else {\\n    splice.call(data, index, 1);\\n  }\\n  --this.size;\\n  return true;\\n}\\n\\n/**\\n * Gets the list cache value for `key`.\\n *\\n * @private\\n * @name get\\n * @memberOf ListCache\\n * @param {string} key The key of the value to get.\\n * @returns {*} Returns the entry value.\\n */\\nfunction listCacheGet(key) {\\n  var data = this.__data__,\\n      index = assocIndexOf(data, key);\\n\\n  return index < 0 ? undefined : data[index][1];\\n}\\n\\n/**\\n * Checks if a list cache value for `key` exists.\\n *\\n * @private\\n * @name has\\n * @memberOf ListCache\\n * @param {string} key The key of the entry to check.\\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\\n */\\nfunction listCacheHas(key) {\\n  return assocIndexOf(this.__data__, key) > -1;\\n}\\n\\n/**\\n * Sets the list cache `key` to `value`.\\n *\\n * @private\\n * @name set\\n * @memberOf ListCache\\n * @param {string} key The key of the value to set.\\n * @param {*} value The value to set.\\n * @returns {Object} Returns the list cache instance.\\n */\\nfunction listCacheSet(key, value) {\\n  var data = this.__data__,\\n      index = assocIndexOf(data, key);\\n\\n  if (index < 0) {\\n    ++this.size;\\n    data.push([key, value]);\\n  } else {\\n    data[index][1] = value;\\n  }\\n  return this;\\n}\\n\\n// Add methods to `ListCache`.\\nListCache.prototype.clear = listCacheClear;\\nListCache.prototype['delete'] = listCacheDelete;\\nListCache.prototype.get = listCacheGet;\\nListCache.prototype.has = listCacheHas;\\nListCache.prototype.set = listCacheSet;\\n\\n/**\\n * Creates a map cache object to store key-value pairs.\\n *\\n * @private\\n * @constructor\\n * @param {Array} [entries] The key-value pairs to cache.\\n */\\nfunction MapCache(entries) {\\n  var index = -1,\\n      length = entries == null ? 0 : entries.length;\\n\\n  this.clear();\\n  while (++index < length) {\\n    var entry = entries[index];\\n    this.set(entry[0], entry[1]);\\n  }\\n}\\n\\n/**\\n * Removes all key-value entries from the map.\\n *\\n * @private\\n * @name clear\\n * @memberOf MapCache\\n */\\nfunction mapCacheClear() {\\n  this.size = 0;\\n  this.__data__ = {\\n    'hash': new Hash,\\n    'map': new (Map || ListCache),\\n    'string': new Hash\\n  };\\n}\\n\\n/**\\n * Removes `key` and its value from the map.\\n *\\n * @private\\n * @name delete\\n * @memberOf MapCache\\n * @param {string} key The key of the value to remove.\\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\\n */\\nfunction mapCacheDelete(key) {\\n  var result = getMapData(this, key)['delete'](key);\\n  this.size -= result ? 1 : 0;\\n  return result;\\n}\\n\\n/**\\n * Gets the map value for `key`.\\n *\\n * @private\\n * @name get\\n * @memberOf MapCache\\n * @param {string} key The key of the value to get.\\n * @returns {*} Returns the entry value.\\n */\\nfunction mapCacheGet(key) {\\n  return getMapData(this, key).get(key);\\n}\\n\\n/**\\n * Checks if a map value for `key` exists.\\n *\\n * @private\\n * @name has\\n * @memberOf MapCache\\n * @param {string} key The key of the entry to check.\\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\\n */\\nfunction mapCacheHas(key) {\\n  return getMapData(this, key).has(key);\\n}\\n\\n/**\\n * Sets the map `key` to `value`.\\n *\\n * @private\\n * @name set\\n * @memberOf MapCache\\n * @param {string} key The key of the value to set.\\n * @param {*} value The value to set.\\n * @returns {Object} Returns the map cache instance.\\n */\\nfunction mapCacheSet(key, value) {\\n  var data = getMapData(this, key),\\n      size = data.size;\\n\\n  data.set(key, value);\\n  this.size += data.size == size ? 0 : 1;\\n  return this;\\n}\\n\\n// Add methods to `MapCache`.\\nMapCache.prototype.clear = mapCacheClear;\\nMapCache.prototype['delete'] = mapCacheDelete;\\nMapCache.prototype.get = mapCacheGet;\\nMapCache.prototype.has = mapCacheHas;\\nMapCache.prototype.set = mapCacheSet;\\n\\n/**\\n *\\n * Creates an array cache object to store unique values.\\n *\\n * @private\\n * @constructor\\n * @param {Array} [values] The values to cache.\\n */\\nfunction SetCache(values) {\\n  var index = -1,\\n      length = values == null ? 0 : values.length;\\n\\n  this.__data__ = new MapCache;\\n  while (++index < length) {\\n    this.add(values[index]);\\n  }\\n}\\n\\n/**\\n * Adds `value` to the array cache.\\n *\\n * @private\\n * @name add\\n * @memberOf SetCache\\n * @alias push\\n * @param {*} value The value to cache.\\n * @returns {Object} Returns the cache instance.\\n */\\nfunction setCacheAdd(value) {\\n  this.__data__.set(value, HASH_UNDEFINED);\\n  return this;\\n}\\n\\n/**\\n * Checks if `value` is in the array cache.\\n *\\n * @private\\n * @name has\\n * @memberOf SetCache\\n * @param {*} value The value to search for.\\n * @returns {number} Returns `true` if `value` is found, else `false`.\\n */\\nfunction setCacheHas(value) {\\n  return this.__data__.has(value);\\n}\\n\\n// Add methods to `SetCache`.\\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\\nSetCache.prototype.has = setCacheHas;\\n\\n/**\\n * Creates a stack cache object to store key-value pairs.\\n *\\n * @private\\n * @constructor\\n * @param {Array} [entries] The key-value pairs to cache.\\n */\\nfunction Stack(entries) {\\n  var data = this.__data__ = new ListCache(entries);\\n  this.size = data.size;\\n}\\n\\n/**\\n * Removes all key-value entries from the stack.\\n *\\n * @private\\n * @name clear\\n * @memberOf Stack\\n */\\nfunction stackClear() {\\n  this.__data__ = new ListCache;\\n  this.size = 0;\\n}\\n\\n/**\\n * Removes `key` and its value from the stack.\\n *\\n * @private\\n * @name delete\\n * @memberOf Stack\\n * @param {string} key The key of the value to remove.\\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\\n */\\nfunction stackDelete(key) {\\n  var data = this.__data__,\\n      result = data['delete'](key);\\n\\n  this.size = data.size;\\n  return result;\\n}\\n\\n/**\\n * Gets the stack value for `key`.\\n *\\n * @private\\n * @name get\\n * @memberOf Stack\\n * @param {string} key The key of the value to get.\\n * @returns {*} Returns the entry value.\\n */\\nfunction stackGet(key) {\\n  return this.__data__.get(key);\\n}\\n\\n/**\\n * Checks if a stack value for `key` exists.\\n *\\n * @private\\n * @name has\\n * @memberOf Stack\\n * @param {string} key The key of the entry to check.\\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\\n */\\nfunction stackHas(key) {\\n  return this.__data__.has(key);\\n}\\n\\n/**\\n * Sets the stack `key` to `value`.\\n *\\n * @private\\n * @name set\\n * @memberOf Stack\\n * @param {string} key The key of the value to set.\\n * @param {*} value The value to set.\\n * @returns {Object} Returns the stack cache instance.\\n */\\nfunction stackSet(key, value) {\\n  var data = this.__data__;\\n  if (data instanceof ListCache) {\\n    var pairs = data.__data__;\\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\\n      pairs.push([key, value]);\\n      this.size = ++data.size;\\n      return this;\\n    }\\n    data = this.__data__ = new MapCache(pairs);\\n  }\\n  data.set(key, value);\\n  this.size = data.size;\\n  return this;\\n}\\n\\n// Add methods to `Stack`.\\nStack.prototype.clear = stackClear;\\nStack.prototype['delete'] = stackDelete;\\nStack.prototype.get = stackGet;\\nStack.prototype.has = stackHas;\\nStack.prototype.set = stackSet;\\n\\n/**\\n * Creates an array of the enumerable property names of the array-like `value`.\\n *\\n * @private\\n * @param {*} value The value to query.\\n * @param {boolean} inherited Specify returning inherited property names.\\n * @returns {Array} Returns the array of property names.\\n */\\nfunction arrayLikeKeys(value, inherited) {\\n  var isArr = isArray(value),\\n      isArg = !isArr && isArguments(value),\\n      isBuff = !isArr && !isArg && isBuffer(value),\\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\\n      skipIndexes = isArr || isArg || isBuff || isType,\\n      result = skipIndexes ? baseTimes(value.length, String) : [],\\n      length = result.length;\\n\\n  for (var key in value) {\\n    if ((inherited || hasOwnProperty.call(value, key)) &&\\n        !(skipIndexes && (\\n           // Safari 9 has enumerable `arguments.length` in strict mode.\\n           key == 'length' ||\\n           // Node.js 0.10 has enumerable non-index properties on buffers.\\n           (isBuff && (key == 'offset' || key == 'parent')) ||\\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\\n           // Skip index properties.\\n           isIndex(key, length)\\n        ))) {\\n      result.push(key);\\n    }\\n  }\\n  return result;\\n}\\n\\n/**\\n * Gets the index at which the `key` is found in `array` of key-value pairs.\\n *\\n * @private\\n * @param {Array} array The array to inspect.\\n * @param {*} key The key to search for.\\n * @returns {number} Returns the index of the matched value, else `-1`.\\n */\\nfunction assocIndexOf(array, key) {\\n  var length = array.length;\\n  while (length--) {\\n    if (eq(array[length][0], key)) {\\n      return length;\\n    }\\n  }\\n  return -1;\\n}\\n\\n/**\\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\\n * symbols of `object`.\\n *\\n * @private\\n * @param {Object} object The object to query.\\n * @param {Function} keysFunc The function to get the keys of `object`.\\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\\n * @returns {Array} Returns the array of property names and symbols.\\n */\\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\\n  var result = keysFunc(object);\\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\\n}\\n\\n/**\\n * The base implementation of `getTag` without fallbacks for buggy environments.\\n *\\n * @private\\n * @param {*} value The value to query.\\n * @returns {string} Returns the `toStringTag`.\\n */\\nfunction baseGetTag(value) {\\n  if (value == null) {\\n    return value === undefined ? undefinedTag : nullTag;\\n  }\\n  return (symToStringTag && symToStringTag in Object(value))\\n    ? getRawTag(value)\\n    : objectToString(value);\\n}\\n\\n/**\\n * The base implementation of `_.isArguments`.\\n *\\n * @private\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\\n */\\nfunction baseIsArguments(value) {\\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\\n}\\n\\n/**\\n * The base implementation of `_.isEqual` which supports partial comparisons\\n * and tracks traversed objects.\\n *\\n * @private\\n * @param {*} value The value to compare.\\n * @param {*} other The other value to compare.\\n * @param {boolean} bitmask The bitmask flags.\\n *  1 - Unordered comparison\\n *  2 - Partial comparison\\n * @param {Function} [customizer] The function to customize comparisons.\\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\\n */\\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\\n  if (value === other) {\\n    return true;\\n  }\\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\\n    return value !== value && other !== other;\\n  }\\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\\n}\\n\\n/**\\n * A specialized version of `baseIsEqual` for arrays and objects which performs\\n * deep comparisons and tracks traversed objects enabling objects with circular\\n * references to be compared.\\n *\\n * @private\\n * @param {Object} object The object to compare.\\n * @param {Object} other The other object to compare.\\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\\n * @param {Function} customizer The function to customize comparisons.\\n * @param {Function} equalFunc The function to determine equivalents of values.\\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\\n */\\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\\n  var objIsArr = isArray(object),\\n      othIsArr = isArray(other),\\n      objTag = objIsArr ? arrayTag : getTag(object),\\n      othTag = othIsArr ? arrayTag : getTag(other);\\n\\n  objTag = objTag == argsTag ? objectTag : objTag;\\n  othTag = othTag == argsTag ? objectTag : othTag;\\n\\n  var objIsObj = objTag == objectTag,\\n      othIsObj = othTag == objectTag,\\n      isSameTag = objTag == othTag;\\n\\n  if (isSameTag && isBuffer(object)) {\\n    if (!isBuffer(other)) {\\n      return false;\\n    }\\n    objIsArr = true;\\n    objIsObj = false;\\n  }\\n  if (isSameTag && !objIsObj) {\\n    stack || (stack = new Stack);\\n    return (objIsArr || isTypedArray(object))\\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\\n  }\\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\\n\\n    if (objIsWrapped || othIsWrapped) {\\n      var objUnwrapped = objIsWrapped ? object.value() : object,\\n          othUnwrapped = othIsWrapped ? other.value() : other;\\n\\n      stack || (stack = new Stack);\\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\\n    }\\n  }\\n  if (!isSameTag) {\\n    return false;\\n  }\\n  stack || (stack = new Stack);\\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\\n}\\n\\n/**\\n * The base implementation of `_.isNative` without bad shim checks.\\n *\\n * @private\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is a native function,\\n *  else `false`.\\n */\\nfunction baseIsNative(value) {\\n  if (!isObject(value) || isMasked(value)) {\\n    return false;\\n  }\\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\\n  return pattern.test(toSource(value));\\n}\\n\\n/**\\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\\n *\\n * @private\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\\n */\\nfunction baseIsTypedArray(value) {\\n  return isObjectLike(value) &&\\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\\n}\\n\\n/**\\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\\n *\\n * @private\\n * @param {Object} object The object to query.\\n * @returns {Array} Returns the array of property names.\\n */\\nfunction baseKeys(object) {\\n  if (!isPrototype(object)) {\\n    return nativeKeys(object);\\n  }\\n  var result = [];\\n  for (var key in Object(object)) {\\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\\n      result.push(key);\\n    }\\n  }\\n  return result;\\n}\\n\\n/**\\n * A specialized version of `baseIsEqualDeep` for arrays with support for\\n * partial deep comparisons.\\n *\\n * @private\\n * @param {Array} array The array to compare.\\n * @param {Array} other The other array to compare.\\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\\n * @param {Function} customizer The function to customize comparisons.\\n * @param {Function} equalFunc The function to determine equivalents of values.\\n * @param {Object} stack Tracks traversed `array` and `other` objects.\\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\\n */\\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\\n      arrLength = array.length,\\n      othLength = other.length;\\n\\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\\n    return false;\\n  }\\n  // Assume cyclic values are equal.\\n  var stacked = stack.get(array);\\n  if (stacked && stack.get(other)) {\\n    return stacked == other;\\n  }\\n  var index = -1,\\n      result = true,\\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\\n\\n  stack.set(array, other);\\n  stack.set(other, array);\\n\\n  // Ignore non-index properties.\\n  while (++index < arrLength) {\\n    var arrValue = array[index],\\n        othValue = other[index];\\n\\n    if (customizer) {\\n      var compared = isPartial\\n        ? customizer(othValue, arrValue, index, other, array, stack)\\n        : customizer(arrValue, othValue, index, array, other, stack);\\n    }\\n    if (compared !== undefined) {\\n      if (compared) {\\n        continue;\\n      }\\n      result = false;\\n      break;\\n    }\\n    // Recursively compare arrays (susceptible to call stack limits).\\n    if (seen) {\\n      if (!arraySome(other, function(othValue, othIndex) {\\n            if (!cacheHas(seen, othIndex) &&\\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\\n              return seen.push(othIndex);\\n            }\\n          })) {\\n        result = false;\\n        break;\\n      }\\n    } else if (!(\\n          arrValue === othValue ||\\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\\n        )) {\\n      result = false;\\n      break;\\n    }\\n  }\\n  stack['delete'](array);\\n  stack['delete'](other);\\n  return result;\\n}\\n\\n/**\\n * A specialized version of `baseIsEqualDeep` for comparing objects of\\n * the same `toStringTag`.\\n *\\n * **Note:** This function only supports comparing values with tags of\\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\\n *\\n * @private\\n * @param {Object} object The object to compare.\\n * @param {Object} other The other object to compare.\\n * @param {string} tag The `toStringTag` of the objects to compare.\\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\\n * @param {Function} customizer The function to customize comparisons.\\n * @param {Function} equalFunc The function to determine equivalents of values.\\n * @param {Object} stack Tracks traversed `object` and `other` objects.\\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\\n */\\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\\n  switch (tag) {\\n    case dataViewTag:\\n      if ((object.byteLength != other.byteLength) ||\\n          (object.byteOffset != other.byteOffset)) {\\n        return false;\\n      }\\n      object = object.buffer;\\n      other = other.buffer;\\n\\n    case arrayBufferTag:\\n      if ((object.byteLength != other.byteLength) ||\\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\\n        return false;\\n      }\\n      return true;\\n\\n    case boolTag:\\n    case dateTag:\\n    case numberTag:\\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\\n      // Invalid dates are coerced to `NaN`.\\n      return eq(+object, +other);\\n\\n    case errorTag:\\n      return object.name == other.name && object.message == other.message;\\n\\n    case regexpTag:\\n    case stringTag:\\n      // Coerce regexes to strings and treat strings, primitives and objects,\\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\\n      // for more details.\\n      return object == (other + '');\\n\\n    case mapTag:\\n      var convert = mapToArray;\\n\\n    case setTag:\\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\\n      convert || (convert = setToArray);\\n\\n      if (object.size != other.size && !isPartial) {\\n        return false;\\n      }\\n      // Assume cyclic values are equal.\\n      var stacked = stack.get(object);\\n      if (stacked) {\\n        return stacked == other;\\n      }\\n      bitmask |= COMPARE_UNORDERED_FLAG;\\n\\n      // Recursively compare objects (susceptible to call stack limits).\\n      stack.set(object, other);\\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\\n      stack['delete'](object);\\n      return result;\\n\\n    case symbolTag:\\n      if (symbolValueOf) {\\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\\n      }\\n  }\\n  return false;\\n}\\n\\n/**\\n * A specialized version of `baseIsEqualDeep` for objects with support for\\n * partial deep comparisons.\\n *\\n * @private\\n * @param {Object} object The object to compare.\\n * @param {Object} other The other object to compare.\\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\\n * @param {Function} customizer The function to customize comparisons.\\n * @param {Function} equalFunc The function to determine equivalents of values.\\n * @param {Object} stack Tracks traversed `object` and `other` objects.\\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\\n */\\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\\n      objProps = getAllKeys(object),\\n      objLength = objProps.length,\\n      othProps = getAllKeys(other),\\n      othLength = othProps.length;\\n\\n  if (objLength != othLength && !isPartial) {\\n    return false;\\n  }\\n  var index = objLength;\\n  while (index--) {\\n    var key = objProps[index];\\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\\n      return false;\\n    }\\n  }\\n  // Assume cyclic values are equal.\\n  var stacked = stack.get(object);\\n  if (stacked && stack.get(other)) {\\n    return stacked == other;\\n  }\\n  var result = true;\\n  stack.set(object, other);\\n  stack.set(other, object);\\n\\n  var skipCtor = isPartial;\\n  while (++index < objLength) {\\n    key = objProps[index];\\n    var objValue = object[key],\\n        othValue = other[key];\\n\\n    if (customizer) {\\n      var compared = isPartial\\n        ? customizer(othValue, objValue, key, other, object, stack)\\n        : customizer(objValue, othValue, key, object, other, stack);\\n    }\\n    // Recursively compare objects (susceptible to call stack limits).\\n    if (!(compared === undefined\\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\\n          : compared\\n        )) {\\n      result = false;\\n      break;\\n    }\\n    skipCtor || (skipCtor = key == 'constructor');\\n  }\\n  if (result && !skipCtor) {\\n    var objCtor = object.constructor,\\n        othCtor = other.constructor;\\n\\n    // Non `Object` object instances with different constructors are not equal.\\n    if (objCtor != othCtor &&\\n        ('constructor' in object && 'constructor' in other) &&\\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\\n      result = false;\\n    }\\n  }\\n  stack['delete'](object);\\n  stack['delete'](other);\\n  return result;\\n}\\n\\n/**\\n * Creates an array of own enumerable property names and symbols of `object`.\\n *\\n * @private\\n * @param {Object} object The object to query.\\n * @returns {Array} Returns the array of property names and symbols.\\n */\\nfunction getAllKeys(object) {\\n  return baseGetAllKeys(object, keys, getSymbols);\\n}\\n\\n/**\\n * Gets the data for `map`.\\n *\\n * @private\\n * @param {Object} map The map to query.\\n * @param {string} key The reference key.\\n * @returns {*} Returns the map data.\\n */\\nfunction getMapData(map, key) {\\n  var data = map.__data__;\\n  return isKeyable(key)\\n    ? data[typeof key == 'string' ? 'string' : 'hash']\\n    : data.map;\\n}\\n\\n/**\\n * Gets the native function at `key` of `object`.\\n *\\n * @private\\n * @param {Object} object The object to query.\\n * @param {string} key The key of the method to get.\\n * @returns {*} Returns the function if it's native, else `undefined`.\\n */\\nfunction getNative(object, key) {\\n  var value = getValue(object, key);\\n  return baseIsNative(value) ? value : undefined;\\n}\\n\\n/**\\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\\n *\\n * @private\\n * @param {*} value The value to query.\\n * @returns {string} Returns the raw `toStringTag`.\\n */\\nfunction getRawTag(value) {\\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\\n      tag = value[symToStringTag];\\n\\n  try {\\n    value[symToStringTag] = undefined;\\n    var unmasked = true;\\n  } catch (e) {}\\n\\n  var result = nativeObjectToString.call(value);\\n  if (unmasked) {\\n    if (isOwn) {\\n      value[symToStringTag] = tag;\\n    } else {\\n      delete value[symToStringTag];\\n    }\\n  }\\n  return result;\\n}\\n\\n/**\\n * Creates an array of the own enumerable symbols of `object`.\\n *\\n * @private\\n * @param {Object} object The object to query.\\n * @returns {Array} Returns the array of symbols.\\n */\\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\\n  if (object == null) {\\n    return [];\\n  }\\n  object = Object(object);\\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\\n    return propertyIsEnumerable.call(object, symbol);\\n  });\\n};\\n\\n/**\\n * Gets the `toStringTag` of `value`.\\n *\\n * @private\\n * @param {*} value The value to query.\\n * @returns {string} Returns the `toStringTag`.\\n */\\nvar getTag = baseGetTag;\\n\\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\\n    (Map && getTag(new Map) != mapTag) ||\\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\\n    (Set && getTag(new Set) != setTag) ||\\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\\n  getTag = function(value) {\\n    var result = baseGetTag(value),\\n        Ctor = result == objectTag ? value.constructor : undefined,\\n        ctorString = Ctor ? toSource(Ctor) : '';\\n\\n    if (ctorString) {\\n      switch (ctorString) {\\n        case dataViewCtorString: return dataViewTag;\\n        case mapCtorString: return mapTag;\\n        case promiseCtorString: return promiseTag;\\n        case setCtorString: return setTag;\\n        case weakMapCtorString: return weakMapTag;\\n      }\\n    }\\n    return result;\\n  };\\n}\\n\\n/**\\n * Checks if `value` is a valid array-like index.\\n *\\n * @private\\n * @param {*} value The value to check.\\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\\n */\\nfunction isIndex(value, length) {\\n  length = length == null ? MAX_SAFE_INTEGER : length;\\n  return !!length &&\\n    (typeof value == 'number' || reIsUint.test(value)) &&\\n    (value > -1 && value % 1 == 0 && value < length);\\n}\\n\\n/**\\n * Checks if `value` is suitable for use as unique object key.\\n *\\n * @private\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\\n */\\nfunction isKeyable(value) {\\n  var type = typeof value;\\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\\n    ? (value !== '__proto__')\\n    : (value === null);\\n}\\n\\n/**\\n * Checks if `func` has its source masked.\\n *\\n * @private\\n * @param {Function} func The function to check.\\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\\n */\\nfunction isMasked(func) {\\n  return !!maskSrcKey && (maskSrcKey in func);\\n}\\n\\n/**\\n * Checks if `value` is likely a prototype object.\\n *\\n * @private\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\\n */\\nfunction isPrototype(value) {\\n  var Ctor = value && value.constructor,\\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\\n\\n  return value === proto;\\n}\\n\\n/**\\n * Converts `value` to a string using `Object.prototype.toString`.\\n *\\n * @private\\n * @param {*} value The value to convert.\\n * @returns {string} Returns the converted string.\\n */\\nfunction objectToString(value) {\\n  return nativeObjectToString.call(value);\\n}\\n\\n/**\\n * Converts `func` to its source code.\\n *\\n * @private\\n * @param {Function} func The function to convert.\\n * @returns {string} Returns the source code.\\n */\\nfunction toSource(func) {\\n  if (func != null) {\\n    try {\\n      return funcToString.call(func);\\n    } catch (e) {}\\n    try {\\n      return (func + '');\\n    } catch (e) {}\\n  }\\n  return '';\\n}\\n\\n/**\\n * Performs a\\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\\n * comparison between two values to determine if they are equivalent.\\n *\\n * @static\\n * @memberOf _\\n * @since 4.0.0\\n * @category Lang\\n * @param {*} value The value to compare.\\n * @param {*} other The other value to compare.\\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\\n * @example\\n *\\n * var object = { 'a': 1 };\\n * var other = { 'a': 1 };\\n *\\n * _.eq(object, object);\\n * // => true\\n *\\n * _.eq(object, other);\\n * // => false\\n *\\n * _.eq('a', 'a');\\n * // => true\\n *\\n * _.eq('a', Object('a'));\\n * // => false\\n *\\n * _.eq(NaN, NaN);\\n * // => true\\n */\\nfunction eq(value, other) {\\n  return value === other || (value !== value && other !== other);\\n}\\n\\n/**\\n * Checks if `value` is likely an `arguments` object.\\n *\\n * @static\\n * @memberOf _\\n * @since 0.1.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\\n *  else `false`.\\n * @example\\n *\\n * _.isArguments(function() { return arguments; }());\\n * // => true\\n *\\n * _.isArguments([1, 2, 3]);\\n * // => false\\n */\\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\\n    !propertyIsEnumerable.call(value, 'callee');\\n};\\n\\n/**\\n * Checks if `value` is classified as an `Array` object.\\n *\\n * @static\\n * @memberOf _\\n * @since 0.1.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\\n * @example\\n *\\n * _.isArray([1, 2, 3]);\\n * // => true\\n *\\n * _.isArray(document.body.children);\\n * // => false\\n *\\n * _.isArray('abc');\\n * // => false\\n *\\n * _.isArray(_.noop);\\n * // => false\\n */\\nvar isArray = Array.isArray;\\n\\n/**\\n * Checks if `value` is array-like. A value is considered array-like if it's\\n * not a function and has a `value.length` that's an integer greater than or\\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\\n *\\n * @static\\n * @memberOf _\\n * @since 4.0.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\\n * @example\\n *\\n * _.isArrayLike([1, 2, 3]);\\n * // => true\\n *\\n * _.isArrayLike(document.body.children);\\n * // => true\\n *\\n * _.isArrayLike('abc');\\n * // => true\\n *\\n * _.isArrayLike(_.noop);\\n * // => false\\n */\\nfunction isArrayLike(value) {\\n  return value != null && isLength(value.length) && !isFunction(value);\\n}\\n\\n/**\\n * Checks if `value` is a buffer.\\n *\\n * @static\\n * @memberOf _\\n * @since 4.3.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\\n * @example\\n *\\n * _.isBuffer(new Buffer(2));\\n * // => true\\n *\\n * _.isBuffer(new Uint8Array(2));\\n * // => false\\n */\\nvar isBuffer = nativeIsBuffer || stubFalse;\\n\\n/**\\n * Performs a deep comparison between two values to determine if they are\\n * equivalent.\\n *\\n * **Note:** This method supports comparing arrays, array buffers, booleans,\\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\\n * by their own, not inherited, enumerable properties. Functions and DOM\\n * nodes are compared by strict equality, i.e. `===`.\\n *\\n * @static\\n * @memberOf _\\n * @since 0.1.0\\n * @category Lang\\n * @param {*} value The value to compare.\\n * @param {*} other The other value to compare.\\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\\n * @example\\n *\\n * var object = { 'a': 1 };\\n * var other = { 'a': 1 };\\n *\\n * _.isEqual(object, other);\\n * // => true\\n *\\n * object === other;\\n * // => false\\n */\\nfunction isEqual(value, other) {\\n  return baseIsEqual(value, other);\\n}\\n\\n/**\\n * Checks if `value` is classified as a `Function` object.\\n *\\n * @static\\n * @memberOf _\\n * @since 0.1.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\\n * @example\\n *\\n * _.isFunction(_);\\n * // => true\\n *\\n * _.isFunction(/abc/);\\n * // => false\\n */\\nfunction isFunction(value) {\\n  if (!isObject(value)) {\\n    return false;\\n  }\\n  // The use of `Object#toString` avoids issues with the `typeof` operator\\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\\n  var tag = baseGetTag(value);\\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\\n}\\n\\n/**\\n * Checks if `value` is a valid array-like length.\\n *\\n * **Note:** This method is loosely based on\\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\\n *\\n * @static\\n * @memberOf _\\n * @since 4.0.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\\n * @example\\n *\\n * _.isLength(3);\\n * // => true\\n *\\n * _.isLength(Number.MIN_VALUE);\\n * // => false\\n *\\n * _.isLength(Infinity);\\n * // => false\\n *\\n * _.isLength('3');\\n * // => false\\n */\\nfunction isLength(value) {\\n  return typeof value == 'number' &&\\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\\n}\\n\\n/**\\n * Checks if `value` is the\\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\\n *\\n * @static\\n * @memberOf _\\n * @since 0.1.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\\n * @example\\n *\\n * _.isObject({});\\n * // => true\\n *\\n * _.isObject([1, 2, 3]);\\n * // => true\\n *\\n * _.isObject(_.noop);\\n * // => true\\n *\\n * _.isObject(null);\\n * // => false\\n */\\nfunction isObject(value) {\\n  var type = typeof value;\\n  return value != null && (type == 'object' || type == 'function');\\n}\\n\\n/**\\n * Checks if `value` is object-like. A value is object-like if it's not `null`\\n * and has a `typeof` result of \\\"object\\\".\\n *\\n * @static\\n * @memberOf _\\n * @since 4.0.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\\n * @example\\n *\\n * _.isObjectLike({});\\n * // => true\\n *\\n * _.isObjectLike([1, 2, 3]);\\n * // => true\\n *\\n * _.isObjectLike(_.noop);\\n * // => false\\n *\\n * _.isObjectLike(null);\\n * // => false\\n */\\nfunction isObjectLike(value) {\\n  return value != null && typeof value == 'object';\\n}\\n\\n/**\\n * Checks if `value` is classified as a typed array.\\n *\\n * @static\\n * @memberOf _\\n * @since 3.0.0\\n * @category Lang\\n * @param {*} value The value to check.\\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\\n * @example\\n *\\n * _.isTypedArray(new Uint8Array);\\n * // => true\\n *\\n * _.isTypedArray([]);\\n * // => false\\n */\\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\\n\\n/**\\n * Creates an array of the own enumerable property names of `object`.\\n *\\n * **Note:** Non-object values are coerced to objects. See the\\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\\n * for more details.\\n *\\n * @static\\n * @since 0.1.0\\n * @memberOf _\\n * @category Object\\n * @param {Object} object The object to query.\\n * @returns {Array} Returns the array of property names.\\n * @example\\n *\\n * function Foo() {\\n *   this.a = 1;\\n *   this.b = 2;\\n * }\\n *\\n * Foo.prototype.c = 3;\\n *\\n * _.keys(new Foo);\\n * // => ['a', 'b'] (iteration order is not guaranteed)\\n *\\n * _.keys('hi');\\n * // => ['0', '1']\\n */\\nfunction keys(object) {\\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\\n}\\n\\n/**\\n * This method returns a new empty array.\\n *\\n * @static\\n * @memberOf _\\n * @since 4.13.0\\n * @category Util\\n * @returns {Array} Returns the new empty array.\\n * @example\\n *\\n * var arrays = _.times(2, _.stubArray);\\n *\\n * console.log(arrays);\\n * // => [[], []]\\n *\\n * console.log(arrays[0] === arrays[1]);\\n * // => false\\n */\\nfunction stubArray() {\\n  return [];\\n}\\n\\n/**\\n * This method returns `false`.\\n *\\n * @static\\n * @memberOf _\\n * @since 4.13.0\\n * @category Util\\n * @returns {boolean} Returns `false`.\\n * @example\\n *\\n * _.times(2, _.stubFalse);\\n * // => [false, false]\\n */\\nfunction stubFalse() {\\n  return false;\\n}\\n\\nmodule.exports = isEqual;\\n}(lodash_isequal, lodash_isequal.exports));\\n\\nvar isEqual = lodash_isequal.exports;\\n\\n// all diacritics\\nlet diacritics = {\\n  a: [\\n    \\\"a\\\",\\n    \\\"à\\\",\\n    \\\"á\\\",\\n    \\\"â\\\",\\n    \\\"ã\\\",\\n    \\\"ä\\\",\\n    \\\"å\\\",\\n    \\\"æ\\\",\\n    \\\"ā\\\",\\n    \\\"ă\\\",\\n    \\\"ą\\\",\\n    \\\"ǎ\\\",\\n    \\\"ǟ\\\",\\n    \\\"ǡ\\\",\\n    \\\"ǻ\\\",\\n    \\\"ȁ\\\",\\n    \\\"ȃ\\\",\\n    \\\"ȧ\\\",\\n    \\\"ɐ\\\",\\n    \\\"ɑ\\\",\\n    \\\"ɒ\\\",\\n    \\\"ͣ\\\",\\n    \\\"а\\\",\\n    \\\"ӑ\\\",\\n    \\\"ӓ\\\",\\n    \\\"ᵃ\\\",\\n    \\\"ᵄ\\\",\\n    \\\"ᶏ\\\",\\n    \\\"ḁ\\\",\\n    \\\"ẚ\\\",\\n    \\\"ạ\\\",\\n    \\\"ả\\\",\\n    \\\"ấ\\\",\\n    \\\"ầ\\\",\\n    \\\"ẩ\\\",\\n    \\\"ẫ\\\",\\n    \\\"ậ\\\",\\n    \\\"ắ\\\",\\n    \\\"ằ\\\",\\n    \\\"ẳ\\\",\\n    \\\"ẵ\\\",\\n    \\\"ặ\\\",\\n    \\\"ₐ\\\",\\n    \\\"ⱥ\\\",\\n    \\\"ａ\\\",\\n  ],\\n  b: [\\\"b\\\", \\\"ƀ\\\", \\\"ƃ\\\", \\\"ɓ\\\", \\\"ᖯ\\\", \\\"ᵇ\\\", \\\"ᵬ\\\", \\\"ᶀ\\\", \\\"ḃ\\\", \\\"ḅ\\\", \\\"ḇ\\\", \\\"ｂ\\\"],\\n  c: [\\\"c\\\", \\\"ç\\\", \\\"ć\\\", \\\"ĉ\\\", \\\"ċ\\\", \\\"č\\\", \\\"ƈ\\\", \\\"ȼ\\\", \\\"ɕ\\\", \\\"ͨ\\\", \\\"ᴄ\\\", \\\"ᶜ\\\", \\\"ḉ\\\", \\\"ↄ\\\", \\\"ｃ\\\"],\\n  d: [\\n    \\\"d\\\",\\n    \\\"ď\\\",\\n    \\\"đ\\\",\\n    \\\"Ƌ\\\",\\n    \\\"ƌ\\\",\\n    \\\"ȡ\\\",\\n    \\\"ɖ\\\",\\n    \\\"ɗ\\\",\\n    \\\"ͩ\\\",\\n    \\\"ᵈ\\\",\\n    \\\"ᵭ\\\",\\n    \\\"ᶁ\\\",\\n    \\\"ᶑ\\\",\\n    \\\"ḋ\\\",\\n    \\\"ḍ\\\",\\n    \\\"ḏ\\\",\\n    \\\"ḑ\\\",\\n    \\\"ḓ\\\",\\n    \\\"ｄ\\\",\\n  ],\\n  e: [\\n    \\\"e\\\",\\n    \\\"è\\\",\\n    \\\"é\\\",\\n    \\\"ê\\\",\\n    \\\"ë\\\",\\n    \\\"ē\\\",\\n    \\\"ĕ\\\",\\n    \\\"ė\\\",\\n    \\\"ę\\\",\\n    \\\"ě\\\",\\n    \\\"ǝ\\\",\\n    \\\"ȅ\\\",\\n    \\\"ȇ\\\",\\n    \\\"ȩ\\\",\\n    \\\"ɇ\\\",\\n    \\\"ɘ\\\",\\n    \\\"ͤ\\\",\\n    \\\"ᵉ\\\",\\n    \\\"ᶒ\\\",\\n    \\\"ḕ\\\",\\n    \\\"ḗ\\\",\\n    \\\"ḙ\\\",\\n    \\\"ḛ\\\",\\n    \\\"ḝ\\\",\\n    \\\"ẹ\\\",\\n    \\\"ẻ\\\",\\n    \\\"ẽ\\\",\\n    \\\"ế\\\",\\n    \\\"ề\\\",\\n    \\\"ể\\\",\\n    \\\"ễ\\\",\\n    \\\"ệ\\\",\\n    \\\"ₑ\\\",\\n    \\\"ｅ\\\",\\n  ],\\n  f: [\\\"f\\\", \\\"ƒ\\\", \\\"ᵮ\\\", \\\"ᶂ\\\", \\\"ᶠ\\\", \\\"ḟ\\\", \\\"ｆ\\\"],\\n  g: [\\\"g\\\", \\\"ĝ\\\", \\\"ğ\\\", \\\"ġ\\\", \\\"ģ\\\", \\\"ǥ\\\", \\\"ǧ\\\", \\\"ǵ\\\", \\\"ɠ\\\", \\\"ɡ\\\", \\\"ᵍ\\\", \\\"ᵷ\\\", \\\"ᵹ\\\", \\\"ᶃ\\\", \\\"ᶢ\\\", \\\"ḡ\\\", \\\"ｇ\\\"],\\n  h: [\\n    \\\"h\\\",\\n    \\\"ĥ\\\",\\n    \\\"ħ\\\",\\n    \\\"ƕ\\\",\\n    \\\"ȟ\\\",\\n    \\\"ɥ\\\",\\n    \\\"ɦ\\\",\\n    \\\"ʮ\\\",\\n    \\\"ʯ\\\",\\n    \\\"ʰ\\\",\\n    \\\"ʱ\\\",\\n    \\\"ͪ\\\",\\n    \\\"Һ\\\",\\n    \\\"һ\\\",\\n    \\\"ᑋ\\\",\\n    \\\"ᶣ\\\",\\n    \\\"ḣ\\\",\\n    \\\"ḥ\\\",\\n    \\\"ḧ\\\",\\n    \\\"ḩ\\\",\\n    \\\"ḫ\\\",\\n    \\\"ⱨ\\\",\\n    \\\"ｈ\\\",\\n  ],\\n  i: [\\n    \\\"i\\\",\\n    \\\"ì\\\",\\n    \\\"í\\\",\\n    \\\"î\\\",\\n    \\\"ï\\\",\\n    \\\"ĩ\\\",\\n    \\\"ī\\\",\\n    \\\"ĭ\\\",\\n    \\\"į\\\",\\n    \\\"ǐ\\\",\\n    \\\"ȉ\\\",\\n    \\\"ȋ\\\",\\n    \\\"ɨ\\\",\\n    \\\"ͥ\\\",\\n    \\\"ᴉ\\\",\\n    \\\"ᵎ\\\",\\n    \\\"ᵢ\\\",\\n    \\\"ᶖ\\\",\\n    \\\"ᶤ\\\",\\n    \\\"ḭ\\\",\\n    \\\"ḯ\\\",\\n    \\\"ỉ\\\",\\n    \\\"ị\\\",\\n    \\\"ｉ\\\",\\n  ],\\n  j: [\\\"j\\\", \\\"ĵ\\\", \\\"ǰ\\\", \\\"ɉ\\\", \\\"ʝ\\\", \\\"ʲ\\\", \\\"ᶡ\\\", \\\"ᶨ\\\", \\\"ｊ\\\"],\\n  k: [\\\"k\\\", \\\"ķ\\\", \\\"ƙ\\\", \\\"ǩ\\\", \\\"ʞ\\\", \\\"ᵏ\\\", \\\"ᶄ\\\", \\\"ḱ\\\", \\\"ḳ\\\", \\\"ḵ\\\", \\\"ⱪ\\\", \\\"ｋ\\\"],\\n  l: [\\n    \\\"l\\\",\\n    \\\"ĺ\\\",\\n    \\\"ļ\\\",\\n    \\\"ľ\\\",\\n    \\\"ŀ\\\",\\n    \\\"ł\\\",\\n    \\\"ƚ\\\",\\n    \\\"ȴ\\\",\\n    \\\"ɫ\\\",\\n    \\\"ɬ\\\",\\n    \\\"ɭ\\\",\\n    \\\"ˡ\\\",\\n    \\\"ᶅ\\\",\\n    \\\"ᶩ\\\",\\n    \\\"ᶪ\\\",\\n    \\\"ḷ\\\",\\n    \\\"ḹ\\\",\\n    \\\"ḻ\\\",\\n    \\\"ḽ\\\",\\n    \\\"ℓ\\\",\\n    \\\"ⱡ\\\",\\n  ],\\n  m: [\\\"m\\\", \\\"ɯ\\\", \\\"ɰ\\\", \\\"ɱ\\\", \\\"ͫ\\\", \\\"ᴟ\\\", \\\"ᵐ\\\", \\\"ᵚ\\\", \\\"ᵯ\\\", \\\"ᶆ\\\", \\\"ᶬ\\\", \\\"ᶭ\\\", \\\"ḿ\\\", \\\"ṁ\\\", \\\"ṃ\\\", \\\"㎡\\\", \\\"㎥\\\", \\\"ｍ\\\"],\\n  n: [\\n    \\\"n\\\",\\n    \\\"ñ\\\",\\n    \\\"ń\\\",\\n    \\\"ņ\\\",\\n    \\\"ň\\\",\\n    \\\"ŉ\\\",\\n    \\\"ƞ\\\",\\n    \\\"ǹ\\\",\\n    \\\"ȵ\\\",\\n    \\\"ɲ\\\",\\n    \\\"ɳ\\\",\\n    \\\"ᵰ\\\",\\n    \\\"ᶇ\\\",\\n    \\\"ᶮ\\\",\\n    \\\"ᶯ\\\",\\n    \\\"ṅ\\\",\\n    \\\"ṇ\\\",\\n    \\\"ṉ\\\",\\n    \\\"ṋ\\\",\\n    \\\"ⁿ\\\",\\n    \\\"ｎ\\\",\\n  ],\\n  o: [\\n    \\\"o\\\",\\n    \\\"ò\\\",\\n    \\\"ó\\\",\\n    \\\"ô\\\",\\n    \\\"õ\\\",\\n    \\\"ö\\\",\\n    \\\"ø\\\",\\n    \\\"ō\\\",\\n    \\\"ŏ\\\",\\n    \\\"ő\\\",\\n    \\\"ơ\\\",\\n    \\\"ǒ\\\",\\n    \\\"ǫ\\\",\\n    \\\"ǭ\\\",\\n    \\\"ǿ\\\",\\n    \\\"ȍ\\\",\\n    \\\"ȏ\\\",\\n    \\\"ȫ\\\",\\n    \\\"ȭ\\\",\\n    \\\"ȯ\\\",\\n    \\\"ȱ\\\",\\n    \\\"ɵ\\\",\\n    \\\"ͦ\\\",\\n    \\\"о\\\",\\n    \\\"ӧ\\\",\\n    \\\"ө\\\",\\n    \\\"ᴏ\\\",\\n    \\\"ᴑ\\\",\\n    \\\"ᴓ\\\",\\n    \\\"ᴼ\\\",\\n    \\\"ᵒ\\\",\\n    \\\"ᶱ\\\",\\n    \\\"ṍ\\\",\\n    \\\"ṏ\\\",\\n    \\\"ṑ\\\",\\n    \\\"ṓ\\\",\\n    \\\"ọ\\\",\\n    \\\"ỏ\\\",\\n    \\\"ố\\\",\\n    \\\"ồ\\\",\\n    \\\"ổ\\\",\\n    \\\"ỗ\\\",\\n    \\\"ộ\\\",\\n    \\\"ớ\\\",\\n    \\\"ờ\\\",\\n    \\\"ở\\\",\\n    \\\"ỡ\\\",\\n    \\\"ợ\\\",\\n    \\\"ₒ\\\",\\n    \\\"ｏ\\\",\\n    \\\"𐐬\\\",\\n  ],\\n  p: [\\\"p\\\", \\\"ᵖ\\\", \\\"ᵱ\\\", \\\"ᵽ\\\", \\\"ᶈ\\\", \\\"ṕ\\\", \\\"ṗ\\\", \\\"ｐ\\\"],\\n  q: [\\\"q\\\", \\\"ɋ\\\", \\\"ʠ\\\", \\\"ᛩ\\\", \\\"ｑ\\\"],\\n  r: [\\n    \\\"r\\\",\\n    \\\"ŕ\\\",\\n    \\\"ŗ\\\",\\n    \\\"ř\\\",\\n    \\\"ȑ\\\",\\n    \\\"ȓ\\\",\\n    \\\"ɍ\\\",\\n    \\\"ɹ\\\",\\n    \\\"ɻ\\\",\\n    \\\"ʳ\\\",\\n    \\\"ʴ\\\",\\n    \\\"ʵ\\\",\\n    \\\"ͬ\\\",\\n    \\\"ᵣ\\\",\\n    \\\"ᵲ\\\",\\n    \\\"ᶉ\\\",\\n    \\\"ṙ\\\",\\n    \\\"ṛ\\\",\\n    \\\"ṝ\\\",\\n    \\\"ṟ\\\",\\n  ],\\n  s: [\\\"s\\\", \\\"ś\\\", \\\"ŝ\\\", \\\"ş\\\", \\\"š\\\", \\\"ș\\\", \\\"ʂ\\\", \\\"ᔆ\\\", \\\"ᶊ\\\", \\\"ṡ\\\", \\\"ṣ\\\", \\\"ṥ\\\", \\\"ṧ\\\", \\\"ṩ\\\", \\\"ｓ\\\"],\\n  t: [\\n    \\\"t\\\",\\n    \\\"ţ\\\",\\n    \\\"ť\\\",\\n    \\\"ŧ\\\",\\n    \\\"ƫ\\\",\\n    \\\"ƭ\\\",\\n    \\\"ț\\\",\\n    \\\"ʇ\\\",\\n    \\\"ͭ\\\",\\n    \\\"ᵀ\\\",\\n    \\\"ᵗ\\\",\\n    \\\"ᵵ\\\",\\n    \\\"ᶵ\\\",\\n    \\\"ṫ\\\",\\n    \\\"ṭ\\\",\\n    \\\"ṯ\\\",\\n    \\\"ṱ\\\",\\n    \\\"ẗ\\\",\\n    \\\"ｔ\\\",\\n  ],\\n  u: [\\n    \\\"u\\\",\\n    \\\"ù\\\",\\n    \\\"ú\\\",\\n    \\\"û\\\",\\n    \\\"ü\\\",\\n    \\\"ũ\\\",\\n    \\\"ū\\\",\\n    \\\"ŭ\\\",\\n    \\\"ů\\\",\\n    \\\"ű\\\",\\n    \\\"ų\\\",\\n    \\\"ư\\\",\\n    \\\"ǔ\\\",\\n    \\\"ǖ\\\",\\n    \\\"ǘ\\\",\\n    \\\"ǚ\\\",\\n    \\\"ǜ\\\",\\n    \\\"ȕ\\\",\\n    \\\"ȗ\\\",\\n    \\\"ͧ\\\",\\n    \\\"ߎ\\\",\\n    \\\"ᵘ\\\",\\n    \\\"ᵤ\\\",\\n    \\\"ṳ\\\",\\n    \\\"ṵ\\\",\\n    \\\"ṷ\\\",\\n    \\\"ṹ\\\",\\n    \\\"ṻ\\\",\\n    \\\"ụ\\\",\\n    \\\"ủ\\\",\\n    \\\"ứ\\\",\\n    \\\"ừ\\\",\\n    \\\"ử\\\",\\n    \\\"ữ\\\",\\n    \\\"ự\\\",\\n    \\\"ｕ\\\",\\n  ],\\n  v: [\\\"v\\\", \\\"ʋ\\\", \\\"ͮ\\\", \\\"ᵛ\\\", \\\"ᵥ\\\", \\\"ᶹ\\\", \\\"ṽ\\\", \\\"ṿ\\\", \\\"ⱱ\\\", \\\"ｖ\\\", \\\"ⱴ\\\"],\\n  w: [\\\"w\\\", \\\"ŵ\\\", \\\"ʷ\\\", \\\"ᵂ\\\", \\\"ẁ\\\", \\\"ẃ\\\", \\\"ẅ\\\", \\\"ẇ\\\", \\\"ẉ\\\", \\\"ẘ\\\", \\\"ⱳ\\\", \\\"ｗ\\\"],\\n  x: [\\\"x\\\", \\\"̽\\\", \\\"͓\\\", \\\"ᶍ\\\", \\\"ͯ\\\", \\\"ẋ\\\", \\\"ẍ\\\", \\\"ₓ\\\", \\\"ｘ\\\"],\\n  y: [\\\"y\\\", \\\"ý\\\", \\\"ÿ\\\", \\\"ŷ\\\", \\\"ȳ\\\", \\\"ɏ\\\", \\\"ʸ\\\", \\\"ẏ\\\", \\\"ỳ\\\", \\\"ỵ\\\", \\\"ỷ\\\", \\\"ỹ\\\", \\\"ｙ\\\"],\\n  z: [\\n    \\\"z\\\",\\n    \\\"ź\\\",\\n    \\\"ż\\\",\\n    \\\"ž\\\",\\n    \\\"ƶ\\\",\\n    \\\"ȥ\\\",\\n    \\\"ɀ\\\",\\n    \\\"ʐ\\\",\\n    \\\"ʑ\\\",\\n    \\\"ᙆ\\\",\\n    \\\"ᙇ\\\",\\n    \\\"ᶻ\\\",\\n    \\\"ᶼ\\\",\\n    \\\"ᶽ\\\",\\n    \\\"ẑ\\\",\\n    \\\"ẓ\\\",\\n    \\\"ẕ\\\",\\n    \\\"ⱬ\\\",\\n    \\\"ｚ\\\",\\n  ],\\n};\\n\\n// Precompiled Object with { key = Diacritic, value = real-Character }\\nconst compiledDiactitics = (function() {\\n  let x = {};\\n\\n  for (let key in diacritics) {\\n    let ok = diacritics[key];\\n\\n    for (let rval in ok) {\\n      let val = ok[rval];\\n\\n      // Do not replace the char with itself\\n      if (val !== key) {\\n        x[val] = key;\\n      }\\n    }\\n  }\\n\\n  return x;\\n})();\\n\\n// Regex for detecting non-ASCII-Characters in String\\nconst regexNonASCII = /[^a-z0-9\\\\s,.-]/;\\n\\n/*\\n * Main function of the module which removes all diacritics from the received text\\n */\\nconst diacriticless = (text) => {\\n  // When there are only ascii-Characters in the string, skip processing and return text right away\\n  if (text.search(regexNonASCII) === -1) {\\n    return text;\\n  }\\n\\n  let result = \\\"\\\";\\n\\n  let len = text.length;\\n  for (var i = 0; i < len; i++) {\\n    let searchChar = text.charAt(i);\\n\\n    // If applicable replace the diacritic character with the real one or use the original value\\n    result += searchChar in compiledDiactitics ? compiledDiactitics[searchChar] : searchChar;\\n  }\\n\\n  return result;\\n};\\n\\nconst escapeRegExp = str => str.replace(/[\\\\\\\\^$*+?.()|[\\\\]{}]/g, '\\\\\\\\$&');\\n\\nvar defaultType = {\\n  format(x) {\\n    return x;\\n  },\\n  filterPredicate(rowval, filter, skipDiacritics = false, fromDropdown = false) {\\n    // take care of nulls\\n    if (typeof rowval === 'undefined' || rowval === null) {\\n      return false;\\n    }\\n\\n    // row value\\n    const rowValue = skipDiacritics\\n      ? String(rowval).toLowerCase()\\n      : diacriticless(escapeRegExp(String(rowval)).toLowerCase());\\n\\n    // search term\\n    const searchTerm = skipDiacritics\\n      ? filter.toLowerCase()\\n      : diacriticless(escapeRegExp(filter).toLowerCase());\\n\\n    // comparison\\n    return fromDropdown ? rowValue === searchTerm : (rowValue.indexOf(searchTerm) > -1);\\n  },\\n\\n  compare(x, y) {\\n    function cook(d) {\\n      if (typeof d === 'undefined' || d === null) return '';\\n      return diacriticless(String(d).toLowerCase());\\n    }\\n    x = cook(x);\\n    y = cook(y);\\n    if (x < y) return -1;\\n    if (x > y) return 1;\\n    return 0;\\n  },\\n};\\n\\nvar _export_sfc = (sfc, props) => {\\n  for (const [key, val] of props) {\\n    sfc[key] = val;\\n  }\\n  return sfc\\n};\\n\\nconst _sfc_main$6 = {\\n  name: 'VgtPaginationPageInfo',\\n  props: {\\n    currentPage: {\\n      default: 1,\\n    },\\n    lastPage: {\\n      default: 1,\\n    },\\n    totalRecords: {\\n      default: 0,\\n    },\\n    ofText: {\\n      default: 'of',\\n      type: String,\\n    },\\n    pageText: {\\n      default: 'page',\\n      type: String,\\n    },\\n    currentPerPage: {},\\n    mode: {\\n      default: PAGINATION_MODES.Records,\\n    },\\n    infoFn: { default: null },\\n  },\\n  data() {\\n    return {\\n      id: this.getId(),\\n    };\\n  },\\n  computed: {\\n    pageInfo() {\\n      return `${this.ofText} ${this.lastPage}`;\\n    },\\n    firstRecordOnPage() {\\n      return ((this.currentPage - 1) * this.currentPerPage) + 1;\\n    },\\n    lastRecordOnPage() {\\n      return Math.min(this.totalRecords, this.currentPage * this.currentPerPage);\\n    },\\n    recordInfo() {\\n      let first = this.firstRecordOnPage;\\n      const last = this.lastRecordOnPage;\\n\\n      if (last === 0) {\\n        first = 0;\\n      }\\n\\n      return `${first} - ${last} ${this.ofText} ${this.totalRecords}`;\\n    },\\n    infoParams() {\\n      let first = this.firstRecordOnPage;\\n      const last = this.lastRecordOnPage;\\n      if (last === 0) {\\n        first = 0;\\n      }\\n      return {\\n        firstRecordOnPage: first,\\n        lastRecordOnPage: last,\\n        totalRecords: this.totalRecords,\\n        currentPage: this.currentPage,\\n        totalPages: this.lastPage,\\n      };\\n    },\\n  },\\n  methods: {\\n    getId() {\\n      return `vgt-page-input-${Math.floor(Math.random() * Date.now())}`;\\n    },\\n    changePage(event) {\\n      const value = parseInt(event.target.value, 10);\\n\\n      //! invalid number\\n      if (Number.isNaN(value)\\n        || value > this.lastPage\\n        || value < 1) {\\n        event.target.value = this.currentPage;\\n        return false;\\n      }\\n\\n      //* valid number\\n      event.target.value = value;\\n      this.$emit('page-changed', value);\\n    },\\n  },\\n  mounted() {\\n  },\\n  components: {\\n  },\\n};\\n\\nconst _hoisted_1$6 = { class: \\\"footer__navigation__page-info\\\" };\\nconst _hoisted_2$6 = { key: 0 };\\nconst _hoisted_3$6 = [\\\"for\\\"];\\nconst _hoisted_4$6 = [\\\"id\\\", \\\"value\\\"];\\nconst _hoisted_5$6 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"span\\\", {\\n  id: \\\"change-page-hint\\\",\\n  style: {\\\"display\\\":\\\"none\\\"}\\n}, \\\" Type a page number and press Enter to change the page. \\\", -1 /* HOISTED */);\\nconst _hoisted_6$6 = { key: 2 };\\n\\nfunction _sfc_render$6(_ctx, _cache, $props, $setup, $data, $options) {\\n  return (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"div\\\", _hoisted_1$6, [\\n    ($props.infoFn)\\n      ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"div\\\", _hoisted_2$6, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"toDisplayString\\\"])($props.infoFn($options.infoParams)), 1 /* TEXT */))\\n      : ($props.mode === 'pages')\\n        ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"form\\\", {\\n            key: 1,\\n            onSubmit: _cache[1] || (_cache[1] = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"withModifiers\\\"])(() => {}, [\\\"prevent\\\"]))\\n          }, [\\n            Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"label\\\", {\\n              for: $data.id,\\n              class: \\\"page-info__label\\\"\\n            }, [\\n              Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"span\\\", null, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"toDisplayString\\\"])($props.pageText), 1 /* TEXT */),\\n              Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"input\\\", {\\n                id: $data.id,\\n                \\\"aria-describedby\\\": \\\"change-page-hint\\\",\\n                \\\"aria-controls\\\": \\\"vgb-table\\\",\\n                class: \\\"footer__navigation__page-info__current-entry\\\",\\n                type: \\\"text\\\",\\n                onKeyup: _cache[0] || (_cache[0] = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"withKeys\\\"])(Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"withModifiers\\\"])((...args) => ($options.changePage && $options.changePage(...args)), [\\\"stop\\\"]), [\\\"enter\\\"])),\\n                value: $props.currentPage\\n              }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_4$6),\\n              Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"span\\\", null, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"toDisplayString\\\"])($options.pageInfo), 1 /* TEXT */)\\n            ], 8 /* PROPS */, _hoisted_3$6),\\n            _hoisted_5$6\\n          ], 32 /* HYDRATE_EVENTS */))\\n        : (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"div\\\", _hoisted_6$6, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"toDisplayString\\\"])($options.recordInfo), 1 /* TEXT */))\\n  ]))\\n}\\nvar VgtPaginationPageInfo = /*#__PURE__*/_export_sfc(_sfc_main$6, [['render',_sfc_render$6]]);\\n\\nconst _sfc_main$5 = {\\n  name: 'VgtPagination',\\n  props: {\\n    styleClass: { default: 'table table-bordered' },\\n    total: { default: null },\\n    perPage: {},\\n    rtl: { default: false },\\n    perPageDropdownEnabled: { default: true },\\n    customRowsPerPageDropdown: { default() { return []; } },\\n    paginateDropdownAllowAll: { default: true },\\n    mode: { default: PAGINATION_MODES.Records },\\n\\n    // text options\\n    nextText: { default: 'Next' },\\n    prevText: { default: 'Prev' },\\n    rowsPerPageText: { default: 'Rows per page:' },\\n    ofText: { default: 'of' },\\n    pageText: { default: 'page' },\\n    allText: { default: 'All' },\\n    infoFn: { default: null },\\n  },\\n\\n  data() {\\n    return {\\n      id: this.getId(),\\n      currentPage: 1,\\n      prevPage: 0,\\n      currentPerPage: 10,\\n      rowsPerPageOptions: [],\\n    };\\n  },\\n  watch: {\\n    perPage: {\\n      handler(newValue, oldValue) {\\n        this.handlePerPage();\\n        this.perPageChanged(oldValue);\\n      },\\n      immediate: true,\\n    },\\n\\n    customRowsPerPageDropdown() {\\n      this.handlePerPage();\\n    },\\n\\n    total: {\\n      handler(newValue, oldValue) {\\n        if(this.rowsPerPageOptions.indexOf(this.currentPerPage) === -1) {\\n          this.currentPerPage = newValue;\\n        }\\n      }\\n    }\\n  },\\n\\n  computed: {\\n    // Number of pages\\n    pagesCount() {\\n      const quotient = Math.floor(this.total / this.currentPerPage);\\n      const remainder = this.total % this.currentPerPage;\\n\\n      return remainder === 0 ? quotient : quotient + 1;\\n    },\\n\\n    // Can go to next page\\n    nextIsPossible() {\\n      return this.currentPage < this.pagesCount;\\n    },\\n\\n    // Can go to previous page\\n    prevIsPossible() {\\n      return this.currentPage > 1;\\n    },\\n  },\\n\\n  methods: {\\n    getId() {\\n      return `vgt-select-rpp-${Math.floor(Math.random() * Date.now())}`;\\n    },\\n    // Change current page\\n    changePage(pageNumber, emit = true) {\\n      if (pageNumber > 0 && this.total > this.currentPerPage * (pageNumber - 1)) {\\n        this.prevPage = this.currentPage;\\n        this.currentPage = pageNumber;\\n        this.pageChanged(emit);\\n      }\\n    },\\n\\n    // Go to next page\\n    nextPage() {\\n      if (this.nextIsPossible) {\\n        this.prevPage = this.currentPage;\\n        ++this.currentPage;\\n        this.pageChanged();\\n      }\\n    },\\n\\n    // Go to previous page\\n    previousPage() {\\n      if (this.prevIsPossible) {\\n        this.prevPage = this.currentPage;\\n        --this.currentPage;\\n        this.pageChanged();\\n      }\\n    },\\n\\n    // Indicate page changing\\n    pageChanged(emit = true) {\\n      const payload = {\\n        currentPage: this.currentPage,\\n        prevPage: this.prevPage,\\n      };\\n      if (!emit) payload.noEmit = true;\\n      this.$emit('page-changed', payload);\\n    },\\n\\n    // Indicate per page changing\\n    perPageChanged(oldValue) {\\n      // go back to first page\\n      if (oldValue) {\\n        //* only emit if this isn't first initialization\\n        this.$emit('per-page-changed', { currentPerPage: this.currentPerPage });\\n      }\\n      this.changePage(1, false);\\n    },\\n\\n    // Handle per page changing\\n    handlePerPage() {\\n      //* if there's a custom dropdown then we use that\\n      if (this.customRowsPerPageDropdown !== null\\n        && (Array.isArray(this.customRowsPerPageDropdown)\\n        && this.customRowsPerPageDropdown.length !== 0)) {\\n        this.rowsPerPageOptions = JSON.parse(JSON.stringify(this.customRowsPerPageDropdown));\\n      } else {\\n        //* otherwise we use the default rows per page dropdown\\n        this.rowsPerPageOptions = JSON.parse(JSON.stringify(DEFAULT_ROWS_PER_PAGE_DROPDOWN));\\n      }\\n\\n      if (this.perPage) {\\n        this.currentPerPage = this.perPage;\\n        // if perPage doesn't already exist, we add it\\n        let found = false;\\n        for (let i = 0; i < this.rowsPerPageOptions.length; i++) {\\n          if (this.rowsPerPageOptions[i] === this.perPage) {\\n            found = true;\\n          }\\n        }\\n        if (!found && this.perPage !== -1) {\\n          this.rowsPerPageOptions.unshift(this.perPage);\\n        }\\n      } else {\\n        // reset to default\\n        this.currentPerPage = 10;\\n      }\\n    },\\n  },\\n\\n  mounted() {\\n  },\\n\\n  components: {\\n    'pagination-page-info': VgtPaginationPageInfo,\\n  },\\n};\\n\\nconst _hoisted_1$5 = { class: \\\"vgt-wrap__footer vgt-clearfix\\\" };\\nconst _hoisted_2$5 = {\\n  key: 0,\\n  class: \\\"footer__row-count vgt-pull-left\\\"\\n};\\nconst _hoisted_3$5 = [\\\"for\\\"];\\nconst _hoisted_4$5 = [\\\"id\\\"];\\nconst _hoisted_5$5 = [\\\"value\\\"];\\nconst _hoisted_6$5 = [\\\"value\\\"];\\nconst _hoisted_7$4 = { class: \\\"footer__navigation vgt-pull-right\\\" };\\n\\nfunction _sfc_render$5(_ctx, _cache, $props, $setup, $data, $options) {\\n  const _component_pagination_page_info = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"resolveComponent\\\"])(\\\"pagination-page-info\\\");\\n\\n  return (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"div\\\", _hoisted_1$5, [\\n    ($props.perPageDropdownEnabled)\\n      ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"div\\\", _hoisted_2$5, [\\n          Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"form\\\", null, [\\n            Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"label\\\", {\\n              for: $data.id,\\n              class: \\\"footer__row-count__label\\\"\\n            }, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"toDisplayString\\\"])($props.rowsPerPageText) + \\\":\\\", 9 /* TEXT, PROPS */, _hoisted_3$5),\\n            Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"withDirectives\\\"])(Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"select\\\", {\\n              id: $data.id,\\n              autocomplete: \\\"off\\\",\\n              name: \\\"perPageSelect\\\",\\n              class: \\\"footer__row-count__select\\\",\\n              \\\"onUpdate:modelValue\\\": _cache[0] || (_cache[0] = $event => (($data.currentPerPage) = $event)),\\n              onChange: _cache[1] || (_cache[1] = (...args) => ($options.perPageChanged && $options.perPageChanged(...args))),\\n              \\\"aria-controls\\\": \\\"vgt-table\\\"\\n            }, [\\n              (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(true), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"Fragment\\\"], null, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"renderList\\\"])($data.rowsPerPageOptions, (option, idx) => {\\n                return (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"option\\\", {\\n                  key: idx,\\n                  value: option\\n                }, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"toDisplayString\\\"])(option), 9 /* TEXT, PROPS */, _hoisted_5$5))\\n              }), 128 /* KEYED_FRAGMENT */)),\\n              ($props.paginateDropdownAllowAll)\\n                ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"option\\\", {\\n                    key: 0,\\n                    value: $props.total\\n                  }, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"toDisplayString\\\"])($props.allText), 9 /* TEXT, PROPS */, _hoisted_6$5))\\n                : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true)\\n            ], 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_4$5), [\\n              [vue__WEBPACK_IMPORTED_MODULE_0__[\\\"vModelSelect\\\"], $data.currentPerPage]\\n            ])\\n          ])\\n        ]))\\n      : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true),\\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"div\\\", _hoisted_7$4, [\\n      Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createVNode\\\"])(_component_pagination_page_info, {\\n        onPageChanged: $options.changePage,\\n        \\\"total-records\\\": $props.total,\\n        \\\"last-page\\\": $options.pagesCount,\\n        \\\"current-page\\\": $data.currentPage,\\n        \\\"current-per-page\\\": $data.currentPerPage,\\n        \\\"of-text\\\": $props.ofText,\\n        \\\"page-text\\\": $props.pageText,\\n        \\\"info-fn\\\": $props.infoFn,\\n        mode: $props.mode\\n      }, null, 8 /* PROPS */, [\\\"onPageChanged\\\", \\\"total-records\\\", \\\"last-page\\\", \\\"current-page\\\", \\\"current-per-page\\\", \\\"of-text\\\", \\\"page-text\\\", \\\"info-fn\\\", \\\"mode\\\"]),\\n      Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"button\\\", {\\n        type: \\\"button\\\",\\n        \\\"aria-controls\\\": \\\"vgt-table\\\",\\n        class: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"normalizeClass\\\"])([\\\"footer__navigation__page-btn\\\", { disabled: !$options.prevIsPossible }]),\\n        onClick: _cache[2] || (_cache[2] = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"withModifiers\\\"])((...args) => ($options.previousPage && $options.previousPage(...args)), [\\\"prevent\\\",\\\"stop\\\"]))\\n      }, [\\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"span\\\", {\\n          \\\"aria-hidden\\\": \\\"true\\\",\\n          class: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"normalizeClass\\\"])([\\\"chevron\\\", { 'left': !$props.rtl, 'right': $props.rtl }])\\n        }, null, 2 /* CLASS */),\\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"span\\\", null, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"toDisplayString\\\"])($props.prevText), 1 /* TEXT */)\\n      ], 2 /* CLASS */),\\n      Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"button\\\", {\\n        type: \\\"button\\\",\\n        \\\"aria-controls\\\": \\\"vgt-table\\\",\\n        class: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"normalizeClass\\\"])([\\\"footer__navigation__page-btn\\\", { disabled: !$options.nextIsPossible }]),\\n        onClick: _cache[3] || (_cache[3] = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"withModifiers\\\"])((...args) => ($options.nextPage && $options.nextPage(...args)), [\\\"prevent\\\",\\\"stop\\\"]))\\n      }, [\\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"span\\\", null, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"toDisplayString\\\"])($props.nextText), 1 /* TEXT */),\\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"span\\\", {\\n          \\\"aria-hidden\\\": \\\"true\\\",\\n          class: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"normalizeClass\\\"])([\\\"chevron\\\", { 'right': !$props.rtl, 'left': $props.rtl }])\\n        }, null, 2 /* CLASS */)\\n      ], 2 /* CLASS */)\\n    ])\\n  ]))\\n}\\nvar VgtPagination = /*#__PURE__*/_export_sfc(_sfc_main$5, [['render',_sfc_render$5]]);\\n\\nconst _sfc_main$4 = {\\n  name: 'VgtGlobalSearch',\\n  props: [\\n    'value',\\n    'searchEnabled',\\n    'globalSearchPlaceholder',\\n  ],\\n  emits: [\\n    'input',\\n    'keyup',\\n    'enter',\\n  ],\\n  data() {\\n    return {\\n      globalSearchTerm: null,\\n      id: this.getId(),\\n    };\\n  },\\n  computed: {\\n    showControlBar() {\\n      if (this.searchEnabled) return true;\\n      if (this.$slots && this.$slots['internal-table-actions']) return true;\\n      return false;\\n    },\\n  },\\n  methods: {\\n    updateValue(value) {\\n      this.$emit('input', value);\\n      this.$emit('keyup', value);\\n    },\\n    entered(value) {\\n      this.$emit('enter', value);\\n    },\\n    getId() {\\n      return `vgt-search-${Math.floor(Math.random() * Date.now())}`;\\n    },\\n  },\\n};\\n\\nconst _hoisted_1$4 = {\\n  key: 0,\\n  class: \\\"vgt-global-search vgt-clearfix\\\"\\n};\\nconst _hoisted_2$4 = { class: \\\"vgt-global-search__input vgt-pull-left\\\" };\\nconst _hoisted_3$4 = [\\\"for\\\"];\\nconst _hoisted_4$4 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"span\\\", {\\n  \\\"aria-hidden\\\": \\\"true\\\",\\n  class: \\\"input__icon\\\"\\n}, [\\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"div\\\", { class: \\\"magnifying-glass\\\" })\\n], -1 /* HOISTED */);\\nconst _hoisted_5$4 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"span\\\", { class: \\\"sr-only\\\" }, \\\"Search\\\", -1 /* HOISTED */);\\nconst _hoisted_6$4 = [\\n  _hoisted_4$4,\\n  _hoisted_5$4\\n];\\nconst _hoisted_7$3 = [\\\"id\\\", \\\"placeholder\\\", \\\"value\\\"];\\nconst _hoisted_8$3 = { class: \\\"vgt-global-search__actions vgt-pull-right\\\" };\\n\\nfunction _sfc_render$4(_ctx, _cache, $props, $setup, $data, $options) {\\n  return ($options.showControlBar)\\n    ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"div\\\", _hoisted_1$4, [\\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"div\\\", _hoisted_2$4, [\\n          ($props.searchEnabled)\\n            ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"form\\\", {\\n                key: 0,\\n                onSubmit: _cache[2] || (_cache[2] = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"withModifiers\\\"])(() => {}, [\\\"prevent\\\"])),\\n                role: \\\"search\\\"\\n              }, [\\n                Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"label\\\", { for: $data.id }, _hoisted_6$4, 8 /* PROPS */, _hoisted_3$4),\\n                Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"input\\\", {\\n                  id: $data.id,\\n                  type: \\\"text\\\",\\n                  class: \\\"vgt-input vgt-pull-left\\\",\\n                  placeholder: $props.globalSearchPlaceholder,\\n                  value: $props.value,\\n                  onInput: _cache[0] || (_cache[0] = $event => ($options.updateValue($event.target.value))),\\n                  onKeyup: _cache[1] || (_cache[1] = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"withKeys\\\"])($event => ($options.entered($event.target.value)), [\\\"enter\\\"]))\\n                }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_7$3)\\n              ], 32 /* HYDRATE_EVENTS */))\\n            : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true)\\n        ]),\\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"div\\\", _hoisted_8$3, [\\n          Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"renderSlot\\\"])(_ctx.$slots, \\\"internal-table-actions\\\")\\n        ])\\n      ]))\\n    : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true)\\n}\\nvar VgtGlobalSearch = /*#__PURE__*/_export_sfc(_sfc_main$4, [['render',_sfc_render$4]]);\\n\\nconst _sfc_main$3 = {\\n  name: 'VgtFilterRow',\\n  props: [\\n    'lineNumbers',\\n    'columns',\\n    'typedColumns',\\n    'globalSearchEnabled',\\n    'selectable',\\n    'mode',\\n  ],\\n  emits: ['filter-changed'],\\n  watch: {\\n    columns: {\\n      handler(newValue, oldValue) {\\n        this.populateInitialFilters();\\n      },\\n      deep: true,\\n      immediate: true,\\n    },\\n  },\\n  data() {\\n    return {\\n      columnFilters: {},\\n      timer: null,\\n    };\\n  },\\n  computed: {\\n\\n    // to create a filter row, we need to\\n    // make sure that there is atleast 1 column\\n    // that requires filtering\\n    hasFilterRow() {\\n      // if (this.mode === 'remote' || !this.globalSearchEnabled) {\\n      for (let i = 0; i < this.columns.length; i++) {\\n        const col = this.columns[i];\\n        if (col.filterOptions && col.filterOptions.enabled) {\\n          return true;\\n        }\\n      }\\n      // }\\n      return false;\\n    },\\n  },\\n  methods: {\\n\\n    fieldKey(field) {\\n      if (typeof(field) === 'function' && field.name) {\\n        return field.name;\\n      }\\n      return field;\\n    },\\n\\n    reset(emitEvent = false) {\\n      this.columnFilters = {};\\n\\n      if (emitEvent) {\\n        this.$emit('filter-changed', this.columnFilters);\\n      }\\n    },\\n\\n    isFilterable(column) {\\n      return column.filterOptions\\n        && column.filterOptions.enabled;\\n    },\\n\\n    isDropdown(column) {\\n      return this.isFilterable(column)\\n        && column.filterOptions.filterDropdownItems\\n        && column.filterOptions.filterDropdownItems.length;\\n    },\\n\\n    isDropdownObjects(column) {\\n      return this.isDropdown(column)\\n        && typeof column.filterOptions.filterDropdownItems[0] === 'object';\\n    },\\n\\n    isDropdownArray(column) {\\n      return this.isDropdown(column)\\n        && typeof column.filterOptions.filterDropdownItems[0] !== 'object';\\n    },\\n\\n    getClasses(column) {\\n      const firstClass = 'filter-th';\\n      return (column.filterOptions && column.filterOptions.styleClass) ? [firstClass, ...column.filterOptions.styleClass.split(' ')].join(' ') : firstClass;\\n    },\\n\\n    // get column's defined placeholder or default one\\n    getPlaceholder(column) {\\n      const placeholder = (this.isFilterable(column) && column.filterOptions.placeholder) || `Filter ${column.label}`;\\n      return placeholder;\\n    },\\n\\n    getName(column) {\\n      return `vgt-${this.fieldKey(column.field)}`;\\n    },\\n\\n    updateFiltersOnEnter(column, value) {\\n      if (this.timer) clearTimeout(this.timer);\\n      this.updateFiltersImmediately(column.field, value);\\n    },\\n\\n    updateFiltersOnKeyup(column, value) {\\n      // if the trigger is enter, we don't filter on keyup\\n      if (column.filterOptions.trigger === 'enter') return;\\n      this.updateFilters(column, value);\\n    },\\n\\n    updateSlotFilter(column, value) {\\n      let fieldToFilter = column.filterOptions.slotFilterField || column.field;\\n      if (typeof column.filterOptions.formatValue === 'function') {\\n        value = column.filterOptions.formatValue(value);\\n      }\\n      this.updateFiltersImmediately(fieldToFilter, value);\\n    },\\n\\n    // since vue doesn't detect property addition and deletion, we\\n    // need to create helper function to set property etc\\n    updateFilters(column, value) {\\n      if (this.timer) clearTimeout(this.timer);\\n      this.timer = setTimeout(() => {\\n        this.updateFiltersImmediately(column.field, value);\\n      }, 400);\\n    },\\n\\n    updateFiltersImmediately(field, value) {\\n      this.columnFilters[this.fieldKey(field)] = value;\\n      this.$emit('filter-changed', this.columnFilters);\\n    },\\n\\n    populateInitialFilters() {\\n      for (let i = 0; i < this.columns.length; i++) {\\n        const col = this.columns[i];\\n        // lets see if there are initial\\n        // filters supplied by user\\n        if (this.isFilterable(col)\\n          && typeof col.filterOptions.filterValue !== 'undefined'\\n          && col.filterOptions.filterValue !== null) {\\n          this.columnFilters[this.fieldKey(col.field)] = col.filterOptions.filterValue;\\n          // this.updateFilters(col, col.filterOptions.filterValue);\\n          // this.$set(col.filterOptions, 'filterValue', undefined);\\n        }\\n      }\\n      //* lets emit event once all filters are set\\n      this.$emit('filter-changed', this.columnFilters);\\n    },\\n  },\\n};\\n\\nconst _hoisted_1$3 = { key: 0 };\\nconst _hoisted_2$3 = { key: 0 };\\nconst _hoisted_3$3 = { key: 1 };\\nconst _hoisted_4$3 = { key: 0 };\\nconst _hoisted_5$3 = [\\\"name\\\", \\\"placeholder\\\", \\\"value\\\", \\\"onKeyup\\\", \\\"onInput\\\"];\\nconst _hoisted_6$3 = [\\\"name\\\", \\\"value\\\", \\\"onChange\\\"];\\nconst _hoisted_7$2 = {\\n  value: \\\"\\\",\\n  key: \\\"-1\\\"\\n};\\nconst _hoisted_8$2 = [\\\"value\\\"];\\nconst _hoisted_9$2 = [\\\"name\\\", \\\"value\\\", \\\"onChange\\\"];\\nconst _hoisted_10$2 = {\\n  value: \\\"\\\",\\n  key: \\\"-1\\\"\\n};\\nconst _hoisted_11$1 = [\\\"value\\\"];\\n\\nfunction _sfc_render$3(_ctx, _cache, $props, $setup, $data, $options) {\\n  return ($options.hasFilterRow)\\n    ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"tr\\\", _hoisted_1$3, [\\n        ($props.lineNumbers)\\n          ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"th\\\", _hoisted_2$3))\\n          : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true),\\n        ($props.selectable)\\n          ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"th\\\", _hoisted_3$3))\\n          : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true),\\n        (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(true), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"Fragment\\\"], null, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"renderList\\\"])($props.columns, (column, index) => {\\n          return (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"Fragment\\\"], { key: index }, [\\n            (!column.hidden)\\n              ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"th\\\", {\\n                  key: 0,\\n                  class: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"normalizeClass\\\"])($options.getClasses(column))\\n                }, [\\n                  Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"renderSlot\\\"])(_ctx.$slots, \\\"column-filter\\\", {\\n                    column: column,\\n                    updateFilters: $options.updateSlotFilter\\n                  }, () => [\\n                    ($options.isFilterable(column))\\n                      ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"div\\\", _hoisted_4$3, [\\n                          (!$options.isDropdown(column))\\n                            ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"input\\\", {\\n                                key: 0,\\n                                name: $options.getName(column),\\n                                type: \\\"text\\\",\\n                                class: \\\"vgt-input\\\",\\n                                placeholder: $options.getPlaceholder(column),\\n                                value: $data.columnFilters[$options.fieldKey(column.field)],\\n                                onKeyup: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"withKeys\\\"])($event => ($options.updateFiltersOnEnter(column, $event.target.value)), [\\\"enter\\\"]),\\n                                onInput: $event => ($options.updateFiltersOnKeyup(column, $event.target.value))\\n                              }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_5$3))\\n                            : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true),\\n                          Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\" options are a list of primitives \\\"),\\n                          ($options.isDropdownArray(column))\\n                            ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"select\\\", {\\n                                key: 1,\\n                                name: $options.getName(column),\\n                                class: \\\"vgt-select\\\",\\n                                value: $data.columnFilters[$options.fieldKey(column.field)],\\n                                onChange: $event => ($options.updateFiltersImmediately(column.field, $event.target.value))\\n                              }, [\\n                                Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"option\\\", _hoisted_7$2, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"toDisplayString\\\"])($options.getPlaceholder(column)), 1 /* TEXT */),\\n                                (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(true), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"Fragment\\\"], null, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"renderList\\\"])(column.filterOptions.filterDropdownItems, (option, i) => {\\n                                  return (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"option\\\", {\\n                                    key: i,\\n                                    value: option\\n                                  }, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"toDisplayString\\\"])(option), 9 /* TEXT, PROPS */, _hoisted_8$2))\\n                                }), 128 /* KEYED_FRAGMENT */))\\n                              ], 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_6$3))\\n                            : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true),\\n                          Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\" options are a list of objects with text and value \\\"),\\n                          ($options.isDropdownObjects(column))\\n                            ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"select\\\", {\\n                                key: 2,\\n                                name: $options.getName(column),\\n                                class: \\\"vgt-select\\\",\\n                                value: $data.columnFilters[$options.fieldKey(column.field)],\\n                                onChange: $event => ($options.updateFiltersImmediately(column.field, $event.target.value))\\n                              }, [\\n                                Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"option\\\", _hoisted_10$2, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"toDisplayString\\\"])($options.getPlaceholder(column)), 1 /* TEXT */),\\n                                (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(true), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"Fragment\\\"], null, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"renderList\\\"])(column.filterOptions.filterDropdownItems, (option, i) => {\\n                                  return (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"option\\\", {\\n                                    key: i,\\n                                    value: option.value\\n                                  }, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"toDisplayString\\\"])(option.text), 9 /* TEXT, PROPS */, _hoisted_11$1))\\n                                }), 128 /* KEYED_FRAGMENT */))\\n                              ], 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_9$2))\\n                            : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true)\\n                        ]))\\n                      : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true)\\n                  ])\\n                ], 2 /* CLASS */))\\n              : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true)\\n          ], 64 /* STABLE_FRAGMENT */))\\n        }), 128 /* KEYED_FRAGMENT */))\\n      ]))\\n    : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true)\\n}\\nvar VgtFilterRow = /*#__PURE__*/_export_sfc(_sfc_main$3, [['render',_sfc_render$3]]);\\n\\nfunction getColumnFirstSortType(column) {\\n  return column.firstSortType || DEFAULT_SORT_TYPE;\\n}\\n\\nfunction getCurrentPrimarySort(sortArray, column) {\\n  return ( sortArray.length === 1 && sortArray[0].field === column.field )\\n  ? sortArray[0].type\\n  : undefined;\\n}\\n\\nfunction getNextSort(currentSort, column) {\\n  if (SORT_TYPES.Descending === getColumnFirstSortType(column)\\n    && currentSort === SORT_TYPES.Ascending) {\\n    return SORT_TYPES.None\\n  } else if (currentSort === SORT_TYPES.Ascending) {\\n    return SORT_TYPES.Descending;\\n  }\\n  if (SORT_TYPES.Descending === getColumnFirstSortType(column)\\n    && currentSort === SORT_TYPES.Descending) {\\n    return SORT_TYPES.Ascending;\\n  } else if (currentSort === SORT_TYPES.Descending) {\\n    return SORT_TYPES.None;\\n  }\\n\\n  if (SORT_TYPES.Descending === getColumnFirstSortType(column)\\n    && currentSort === SORT_TYPES.None) {\\n    return SORT_TYPES.Descending;\\n  } else {\\n    return SORT_TYPES.Ascending;\\n  }\\n\\n}\\n\\nfunction getIndex(sortArray, column) {\\n  for (let i = 0; i < sortArray.length; i++) {\\n    if (column.field === sortArray[i].field) return i;\\n  }\\n  return -1;\\n}\\n\\nconst primarySort = (sortArray, column) => {\\n  const currentPrimarySort = getCurrentPrimarySort(sortArray, column);\\n  const nextPrimarySort = getNextSort(currentPrimarySort, column);\\n  return [{\\n    field: column.field,\\n    type: currentPrimarySort ? nextPrimarySort : getColumnFirstSortType(column),\\n  }];\\n};\\n\\nconst secondarySort = (sortArray, column) => {\\n  const index = getIndex(sortArray, column);\\n  if (index === -1) {\\n    sortArray.push({\\n      field: column.field,\\n      type: getColumnFirstSortType(column),\\n    });\\n  } else {\\n    sortArray[index].type = getNextSort(sortArray[index].type, column);\\n  }\\n  return sortArray;\\n};\\n\\nconst _sfc_main$2 = {\\n  name: 'VgtTableHeader',\\n  props: {\\n    lineNumbers: {\\n      default: false,\\n      type: Boolean,\\n    },\\n    selectable: {\\n      default: false,\\n      type: Boolean,\\n    },\\n    allSelected: {\\n      default: false,\\n      type: Boolean,\\n    },\\n    allSelectedIndeterminate: {\\n      default: false,\\n      type: Boolean,\\n    },\\n    columns: {\\n      type: Array,\\n    },\\n    mode: {\\n      type: String,\\n    },\\n    typedColumns: {},\\n\\n    //* Sort related\\n    sortable: {\\n      type: Boolean,\\n    },\\n    multipleColumnSort: {\\n      type: Boolean,\\n      default: true,\\n    },\\n\\n    getClasses: {\\n      type: Function,\\n    },\\n\\n    //* search related\\n    searchEnabled: {\\n      type: Boolean,\\n    },\\n\\n    tableRef: {},\\n\\n    paginated: {},\\n  },\\n  emits: [\\n    'toggle-select-all',\\n    'sort-change',\\n    'filter-changed',\\n  ],\\n  watch: {\\n    columns: {\\n      handler() {\\n        this.setColumnStyles();\\n      },\\n      immediate: true,\\n    },\\n    tableRef: {\\n      handler() {\\n        this.setColumnStyles();\\n      },\\n      immediate: true,\\n    },\\n    paginated: {\\n      handler() {\\n        if (this.tableRef) {\\n          this.setColumnStyles();\\n        }\\n      },\\n      deep: true,\\n    },\\n  },\\n  data() {\\n    return {\\n      checkBoxThStyle: {},\\n      lineNumberThStyle: {},\\n      columnStyles: [],\\n      sorts: [],\\n      ro: null\\n    };\\n  },\\n  computed: {\\n\\n  },\\n  methods: {\\n    reset() {\\n      this.$refs['filter-row'].reset(true);\\n    },\\n    toggleSelectAll() {\\n      this.$emit('toggle-select-all');\\n    },\\n    isSortableColumn(column) {\\n      const { sortable } = column;\\n      const isSortable = typeof sortable === 'boolean' ? sortable : this.sortable;\\n      return isSortable;\\n    },\\n    sort(e, column) {\\n      //* if column is not sortable, return right here\\n      if (!this.isSortableColumn(column)) return;\\n\\n      if (e.shiftKey && this.multipleColumnSort) {\\n        this.sorts = secondarySort(this.sorts, column);\\n      } else {\\n        this.sorts = primarySort(this.sorts, column);\\n      }\\n      this.$emit('sort-change', this.sorts);\\n    },\\n\\n    setInitialSort(sorts) {\\n      this.sorts = sorts;\\n      this.$emit('sort-change', this.sorts);\\n    },\\n\\n    getColumnSort(column) {\\n      for (let i = 0; i < this.sorts.length; i += 1) {\\n        if (this.sorts[i].field === column.field) {\\n          return this.sorts[i].type || 'asc';\\n        }\\n      }\\n      return null;\\n    },\\n\\n    getColumnSortLong(column) {\\n      return this.getColumnSort(column) === 'asc'\\n        ? 'ascending'\\n        : 'descending'\\n    },\\n\\n    getHeaderClasses(column, index) {\\n      const classes = Object.assign({}, this.getClasses(index, 'th'), {\\n        sortable: this.isSortableColumn(column),\\n        'sorting sorting-desc': this.getColumnSort(column) === 'desc',\\n        'sorting sorting-asc': this.getColumnSort(column) === 'asc',\\n      });\\n      return classes;\\n    },\\n\\n    filterRows(columnFilters) {\\n      this.$emit('filter-changed', columnFilters);\\n    },\\n\\n    getWidthStyle(dom) {\\n      if (window && window.getComputedStyle && dom) {\\n        const cellStyle = window.getComputedStyle(dom, null);\\n        return {\\n          width: cellStyle.width,\\n        };\\n      }\\n      return {\\n        width: 'auto',\\n      };\\n    },\\n\\n    setColumnStyles() {\\n      const colStyles = [];\\n      for (let i = 0; i < this.columns.length; i++) {\\n        if (this.tableRef) {\\n          let skip = 0;\\n          if (this.selectable) skip++;\\n          if (this.lineNumbers) skip++;\\n          const cell = this.tableRef.rows[0].cells[i + skip];\\n          colStyles.push(this.getWidthStyle(cell));\\n        } else {\\n          colStyles.push({\\n            minWidth: this.columns[i].width ? this.columns[i].width : 'auto',\\n            maxWidth: this.columns[i].width ? this.columns[i].width : 'auto',\\n            width: this.columns[i].width ? this.columns[i].width : 'auto',\\n          });\\n        }\\n      }\\n      this.columnStyles = colStyles;\\n    },\\n\\n    getColumnStyle(column, index) {\\n      const styleObject = {\\n        minWidth: column.width ? column.width : 'auto',\\n        maxWidth: column.width ? column.width : 'auto',\\n        width: column.width ? column.width : 'auto',\\n      };\\n      //* if fixed header we need to get width from original table\\n      if (this.tableRef) {\\n        if (this.selectable) index++;\\n        if (this.lineNumbers) index++;\\n\\n        const cell = this.tableRef.rows[0].cells[index];\\n        const cellStyle = window.getComputedStyle(cell, null);\\n        styleObject.width = cellStyle.width;\\n      }\\n      return styleObject;\\n    },\\n  },\\n  mounted() {\\n    this.$nextTick(() => {\\n      // We're going to watch the parent element for resize events, and calculate column widths if it changes\\n      if ('ResizeObserver' in window) {\\n        this.ro = new ResizeObserver(() => {\\n            this.setColumnStyles();\\n        });\\n        this.ro.observe(this.$parent.$el);\\n\\n        // If this is a fixed-header table, we want to observe each column header from the non-fixed header.\\n        // You can imagine two columns swapping widths, which wouldn't cause the above to trigger.\\n        // This gets the first tr element of the primary table header, and iterates through its children (the th elements)\\n        if (this.tableRef) {\\n          Array.from(this.$parent.$refs['table-header-primary'].$el.children[0].children).forEach((header) => {\\n            this.ro.observe(header);\\n          });\\n        }\\n      }\\n    });\\n  },\\n  beforeDestroy() {\\n    if (this.ro) {\\n      this.ro.disconnect();\\n    }\\n  },\\n  components: {\\n    'vgt-filter-row': VgtFilterRow,\\n  },\\n};\\n\\nconst _hoisted_1$2 = {\\n  key: 0,\\n  scope: \\\"col\\\",\\n  class: \\\"line-numbers\\\"\\n};\\nconst _hoisted_2$2 = {\\n  key: 1,\\n  scope: \\\"col\\\",\\n  class: \\\"vgt-checkbox-col\\\"\\n};\\nconst _hoisted_3$2 = [\\\"checked\\\", \\\".indeterminate\\\"];\\nconst _hoisted_4$2 = [\\\"title\\\", \\\"aria-sort\\\", \\\"aria-controls\\\"];\\nconst _hoisted_5$2 = [\\\"onClick\\\"];\\nconst _hoisted_6$2 = { class: \\\"sr-only\\\" };\\n\\nfunction _sfc_render$2(_ctx, _cache, $props, $setup, $data, $options) {\\n  const _component_vgt_filter_row = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"resolveComponent\\\"])(\\\"vgt-filter-row\\\");\\n\\n  return (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"thead\\\", null, [\\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"tr\\\", null, [\\n      ($props.lineNumbers)\\n        ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"th\\\", _hoisted_1$2))\\n        : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true),\\n      ($props.selectable)\\n        ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"th\\\", _hoisted_2$2, [\\n            Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"input\\\", {\\n              type: \\\"checkbox\\\",\\n              checked: $props.allSelected,\\n              \\\".indeterminate\\\": $props.allSelectedIndeterminate,\\n              onChange: _cache[0] || (_cache[0] = (...args) => ($options.toggleSelectAll && $options.toggleSelectAll(...args)))\\n            }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_3$2)\\n          ]))\\n        : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true),\\n      (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(true), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"Fragment\\\"], null, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"renderList\\\"])($props.columns, (column, index) => {\\n        return (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"Fragment\\\"], { key: index }, [\\n          (!column.hidden)\\n            ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"th\\\", {\\n                key: 0,\\n                scope: \\\"col\\\",\\n                title: column.tooltip,\\n                class: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"normalizeClass\\\"])($options.getHeaderClasses(column, index)),\\n                style: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"normalizeStyle\\\"])($data.columnStyles[index]),\\n                \\\"aria-sort\\\": $options.getColumnSortLong(column),\\n                \\\"aria-controls\\\": `col-${index}`\\n              }, [\\n                Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"renderSlot\\\"])(_ctx.$slots, \\\"table-column\\\", { column: column }, () => [\\n                  Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createTextVNode\\\"])(Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"toDisplayString\\\"])(column.label), 1 /* TEXT */)\\n                ]),\\n                ($options.isSortableColumn(column))\\n                  ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"button\\\", {\\n                      key: 0,\\n                      onClick: $event => ($options.sort($event, column))\\n                    }, [\\n                      Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"span\\\", _hoisted_6$2, \\\" Sort table by \\\" + Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"toDisplayString\\\"])(column.label) + \\\" in \\\" + Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"toDisplayString\\\"])($options.getColumnSortLong(column)) + \\\" order \\\", 1 /* TEXT */)\\n                    ], 8 /* PROPS */, _hoisted_5$2))\\n                  : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true)\\n              ], 14 /* CLASS, STYLE, PROPS */, _hoisted_4$2))\\n            : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true)\\n        ], 64 /* STABLE_FRAGMENT */))\\n      }), 128 /* KEYED_FRAGMENT */))\\n    ]),\\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createVNode\\\"])(_component_vgt_filter_row, {\\n      ref: \\\"filter-row\\\",\\n      onFilterChanged: $options.filterRows,\\n      \\\"global-search-enabled\\\": $props.searchEnabled,\\n      \\\"line-numbers\\\": $props.lineNumbers,\\n      selectable: $props.selectable,\\n      columns: $props.columns,\\n      mode: $props.mode,\\n      \\\"typed-columns\\\": $props.typedColumns\\n    }, {\\n      \\\"column-filter\\\": Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"withCtx\\\"])((slotProps) => [\\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"renderSlot\\\"])(_ctx.$slots, \\\"column-filter\\\", {\\n          column: slotProps.column,\\n          updateFilters: slotProps.updateFilters\\n        })\\n      ]),\\n      _: 3 /* FORWARDED */\\n    }, 8 /* PROPS */, [\\\"onFilterChanged\\\", \\\"global-search-enabled\\\", \\\"line-numbers\\\", \\\"selectable\\\", \\\"columns\\\", \\\"mode\\\", \\\"typed-columns\\\"])\\n  ]))\\n}\\nvar VgtTableHeader = /*#__PURE__*/_export_sfc(_sfc_main$2, [['render',_sfc_render$2]]);\\n\\nconst _sfc_main$1 = {\\n  name: 'VgtHeaderRow',\\n  props: {\\n    headerRow: {\\n      type: Object,\\n    },\\n    columns: {\\n      type: Array,\\n    },\\n    lineNumbers: {\\n      type: Boolean,\\n    },\\n    selectable: {\\n      type: Boolean,\\n    },\\n    selectAllByGroup: {\\n      type: Boolean\\n    },\\n    collapsable: {\\n      type: [Boolean, Number],\\n      default: false,\\n    },\\n    collectFormatted: {\\n      type: Function,\\n    },\\n    formattedRow: {\\n      type: Function,\\n    },\\n    getClasses: {\\n      type: Function,\\n    },\\n    fullColspan: {\\n      type: Number,\\n    },\\n    groupIndex: {\\n      type: Number\\n    },\\n  },\\n  emits: [\\n    'vgtExpand',\\n    'select-group-change',\\n  ],\\n  data() {\\n    return {\\n    };\\n  },\\n  computed: {\\n    allSelected() {\\n      const { headerRow } = this;\\n      return headerRow.children.filter((row) => row.vgtSelected).length === headerRow.children.length;\\n    }\\n  },\\n  methods: {\\n    columnCollapsable(currentIndex) {\\n      if (this.collapsable === true) {\\n        return currentIndex === 0;\\n      }\\n      return currentIndex === this.collapsable;\\n    },\\n    toggleSelectGroup(event) {\\n      this.$emit('select-group-change', {\\n        groupIndex: this.groupIndex, checked: event.target.checked\\n      });\\n    }\\n  },\\n\\n  mounted() {\\n  },\\n  components: {\\n  },\\n};\\n\\nconst _hoisted_1$1 = [\\\"colspan\\\"];\\nconst _hoisted_2$1 = [\\\"checked\\\"];\\nconst _hoisted_3$1 = [\\\"innerHTML\\\"];\\nconst _hoisted_4$1 = { key: 1 };\\nconst _hoisted_5$1 = {\\n  key: 1,\\n  class: \\\"vgt-row-header\\\"\\n};\\nconst _hoisted_6$1 = {\\n  key: 2,\\n  class: \\\"vgt-row-header\\\"\\n};\\nconst _hoisted_7$1 = [\\\"checked\\\"];\\nconst _hoisted_8$1 = [\\\"onClick\\\"];\\nconst _hoisted_9$1 = { key: 0 };\\nconst _hoisted_10$1 = [\\\"innerHTML\\\"];\\n\\nfunction _sfc_render$1(_ctx, _cache, $props, $setup, $data, $options) {\\n  return (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"tr\\\", null, [\\n    ($props.headerRow.mode === 'span')\\n      ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"th\\\", {\\n          key: 0,\\n          class: \\\"vgt-left-align vgt-row-header\\\",\\n          colspan: $props.fullColspan\\n        }, [\\n          ($props.selectAllByGroup)\\n            ? Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"renderSlot\\\"])(_ctx.$slots, \\\"table-header-group-select\\\", {\\n                key: 0,\\n                columns: $props.columns,\\n                row: $props.headerRow\\n              }, () => [\\n                Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"input\\\", {\\n                  type: \\\"checkbox\\\",\\n                  checked: $options.allSelected,\\n                  onChange: _cache[0] || (_cache[0] = $event => ($options.toggleSelectGroup($event)))\\n                }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_2$1)\\n              ])\\n            : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true),\\n          Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"span\\\", {\\n            onClick: _cache[1] || (_cache[1] = $event => ($props.collapsable ? _ctx.$emit('vgtExpand', !$props.headerRow.vgtIsExpanded) : () => {}))\\n          }, [\\n            ($props.collapsable)\\n              ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"span\\\", {\\n                  key: 0,\\n                  class: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"normalizeClass\\\"])([\\\"triangle\\\", { 'expand': $props.headerRow.vgtIsExpanded }])\\n                }, null, 2 /* CLASS */))\\n              : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true),\\n            Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"renderSlot\\\"])(_ctx.$slots, \\\"table-header-row\\\", { row: $props.headerRow }, () => [\\n              ($props.headerRow.html)\\n                ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"span\\\", {\\n                    key: 0,\\n                    innerHTML: $props.headerRow.label\\n                  }, null, 8 /* PROPS */, _hoisted_3$1))\\n                : (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"span\\\", _hoisted_4$1, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"toDisplayString\\\"])($props.headerRow.label), 1 /* TEXT */))\\n            ])\\n          ])\\n        ], 8 /* PROPS */, _hoisted_1$1))\\n      : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true),\\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\" if the mode is not span, we display every column \\\"),\\n    ($props.headerRow.mode !== 'span' && $props.lineNumbers)\\n      ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"th\\\", _hoisted_5$1))\\n      : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true),\\n    ($props.headerRow.mode !== 'span' && $props.selectable)\\n      ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"th\\\", _hoisted_6$1, [\\n          ($props.selectAllByGroup)\\n            ? Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"renderSlot\\\"])(_ctx.$slots, \\\"table-header-group-select\\\", {\\n                key: 0,\\n                columns: $props.columns,\\n                row: $props.headerRow\\n              }, () => [\\n                Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"input\\\", {\\n                  type: \\\"checkbox\\\",\\n                  checked: $options.allSelected,\\n                  onChange: _cache[2] || (_cache[2] = $event => ($options.toggleSelectGroup($event)))\\n                }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_7$1)\\n              ])\\n            : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true)\\n        ]))\\n      : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true),\\n    (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(true), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"Fragment\\\"], null, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"renderList\\\"])($props.columns, (column, i) => {\\n      return (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"Fragment\\\"], { key: i }, [\\n        ($props.headerRow.mode !== 'span' && !column.hidden)\\n          ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"th\\\", {\\n              key: 0,\\n              class: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"normalizeClass\\\"])([\\\"vgt-row-header\\\", $props.getClasses(i, 'td')]),\\n              onClick: $event => ($options.columnCollapsable(i) ? _ctx.$emit('vgtExpand', !$props.headerRow.vgtIsExpanded) : () => {})\\n            }, [\\n              ($options.columnCollapsable(i))\\n                ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"span\\\", {\\n                    key: 0,\\n                    class: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"normalizeClass\\\"])([\\\"triangle\\\", { 'expand': $props.headerRow.vgtIsExpanded }])\\n                  }, null, 2 /* CLASS */))\\n                : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true),\\n              Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"renderSlot\\\"])(_ctx.$slots, \\\"table-header-row\\\", {\\n                row: $props.headerRow,\\n                column: column,\\n                formattedRow: $props.formattedRow($props.headerRow, true)\\n              }, () => [\\n                (!column.html)\\n                  ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"span\\\", _hoisted_9$1, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"toDisplayString\\\"])($props.collectFormatted($props.headerRow, column, true)), 1 /* TEXT */))\\n                  : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true),\\n                (column.html)\\n                  ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"span\\\", {\\n                      key: 1,\\n                      innerHTML: $props.collectFormatted($props.headerRow, column, true)\\n                    }, null, 8 /* PROPS */, _hoisted_10$1))\\n                  : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true)\\n              ])\\n            ], 10 /* CLASS, PROPS */, _hoisted_8$1))\\n          : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true)\\n      ], 64 /* STABLE_FRAGMENT */))\\n    }), 128 /* KEYED_FRAGMENT */))\\n  ]))\\n}\\nvar VgtHeaderRow = /*#__PURE__*/_export_sfc(_sfc_main$1, [['render',_sfc_render$1]]);\\n\\nfunction toInteger(dirtyNumber) {\\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\\n    return NaN;\\n  }\\n\\n  var number = Number(dirtyNumber);\\n\\n  if (isNaN(number)) {\\n    return number;\\n  }\\n\\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\\n}\\n\\nfunction requiredArgs(required, args) {\\n  if (args.length < required) {\\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\\n  }\\n}\\n\\n/**\\n * @name toDate\\n * @category Common Helpers\\n * @summary Convert the given argument to an instance of Date.\\n *\\n * @description\\n * Convert the given argument to an instance of Date.\\n *\\n * If the argument is an instance of Date, the function returns its clone.\\n *\\n * If the argument is a number, it is treated as a timestamp.\\n *\\n * If the argument is none of the above, the function returns Invalid Date.\\n *\\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\\n *\\n * @param {Date|Number} argument - the value to convert\\n * @returns {Date} the parsed date in the local time zone\\n * @throws {TypeError} 1 argument required\\n *\\n * @example\\n * // Clone the date:\\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\\n * //=> Tue Feb 11 2014 11:30:30\\n *\\n * @example\\n * // Convert the timestamp to date:\\n * const result = toDate(1392098430000)\\n * //=> Tue Feb 11 2014 11:30:30\\n */\\n\\nfunction toDate(argument) {\\n  requiredArgs(1, arguments);\\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\\n\\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\\n    return new Date(argument.getTime());\\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\\n    return new Date(argument);\\n  } else {\\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\\n      // eslint-disable-next-line no-console\\n      console.warn(\\\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\\\"); // eslint-disable-next-line no-console\\n\\n      console.warn(new Error().stack);\\n    }\\n\\n    return new Date(NaN);\\n  }\\n}\\n\\n/**\\n * @name addMilliseconds\\n * @category Millisecond Helpers\\n * @summary Add the specified number of milliseconds to the given date.\\n *\\n * @description\\n * Add the specified number of milliseconds to the given date.\\n *\\n * ### v2.0.0 breaking changes:\\n *\\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\\n *\\n * @param {Date|Number} date - the date to be changed\\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\\n * @returns {Date} the new date with the milliseconds added\\n * @throws {TypeError} 2 arguments required\\n *\\n * @example\\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\\n * //=> Thu Jul 10 2014 12:45:30.750\\n */\\n\\nfunction addMilliseconds(dirtyDate, dirtyAmount) {\\n  requiredArgs(2, arguments);\\n  var timestamp = toDate(dirtyDate).getTime();\\n  var amount = toInteger(dirtyAmount);\\n  return new Date(timestamp + amount);\\n}\\n\\n/**\\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\\n * They usually appear for dates that denote time before the timezones were introduced\\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\\n * and GMT+01:00:00 after that date)\\n *\\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\\n * which would lead to incorrect calculations.\\n *\\n * This function returns the timezone offset in milliseconds that takes seconds in account.\\n */\\nfunction getTimezoneOffsetInMilliseconds(date) {\\n  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\\n  utcDate.setUTCFullYear(date.getFullYear());\\n  return date.getTime() - utcDate.getTime();\\n}\\n\\n/**\\n * @name compareAsc\\n * @category Common Helpers\\n * @summary Compare the two dates and return -1, 0 or 1.\\n *\\n * @description\\n * Compare the two dates and return 1 if the first date is after the second,\\n * -1 if the first date is before the second or 0 if dates are equal.\\n *\\n * ### v2.0.0 breaking changes:\\n *\\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\\n *\\n * @param {Date|Number} dateLeft - the first date to compare\\n * @param {Date|Number} dateRight - the second date to compare\\n * @returns {Number} the result of the comparison\\n * @throws {TypeError} 2 arguments required\\n *\\n * @example\\n * // Compare 11 February 1987 and 10 July 1989:\\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\\n * //=> -1\\n *\\n * @example\\n * // Sort the array of dates:\\n * const result = [\\n *   new Date(1995, 6, 2),\\n *   new Date(1987, 1, 11),\\n *   new Date(1989, 6, 10)\\n * ].sort(compareAsc)\\n * //=> [\\n * //   Wed Feb 11 1987 00:00:00,\\n * //   Mon Jul 10 1989 00:00:00,\\n * //   Sun Jul 02 1995 00:00:00\\n * // ]\\n */\\n\\nfunction compareAsc(dirtyDateLeft, dirtyDateRight) {\\n  requiredArgs(2, arguments);\\n  var dateLeft = toDate(dirtyDateLeft);\\n  var dateRight = toDate(dirtyDateRight);\\n  var diff = dateLeft.getTime() - dateRight.getTime();\\n\\n  if (diff < 0) {\\n    return -1;\\n  } else if (diff > 0) {\\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\\n  } else {\\n    return diff;\\n  }\\n}\\n\\n/**\\n * @name isDate\\n * @category Common Helpers\\n * @summary Is the given value a date?\\n *\\n * @description\\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\\n *\\n * ### v2.0.0 breaking changes:\\n *\\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\\n *\\n * @param {*} value - the value to check\\n * @returns {boolean} true if the given value is a date\\n * @throws {TypeError} 1 arguments required\\n *\\n * @example\\n * // For a valid date:\\n * const result = isDate(new Date())\\n * //=> true\\n *\\n * @example\\n * // For an invalid date:\\n * const result = isDate(new Date(NaN))\\n * //=> true\\n *\\n * @example\\n * // For some value:\\n * const result = isDate('2014-02-31')\\n * //=> false\\n *\\n * @example\\n * // For an object:\\n * const result = isDate({})\\n * //=> false\\n */\\n\\nfunction isDate(value) {\\n  requiredArgs(1, arguments);\\n  return value instanceof Date || typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]';\\n}\\n\\n/**\\n * @name isValid\\n * @category Common Helpers\\n * @summary Is the given date valid?\\n *\\n * @description\\n * Returns false if argument is Invalid Date and true otherwise.\\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\\n * Invalid Date is a Date, whose time value is NaN.\\n *\\n * Time value of Date: http://es5.github.io/#x15.9.1.1\\n *\\n * ### v2.0.0 breaking changes:\\n *\\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\\n *\\n * - Now `isValid` doesn't throw an exception\\n *   if the first argument is not an instance of Date.\\n *   Instead, argument is converted beforehand using `toDate`.\\n *\\n *   Examples:\\n *\\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\\n *   |---------------------------|---------------|---------------|\\n *   | `new Date()`              | `true`        | `true`        |\\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\\n *   | `new Date('')`            | `false`       | `false`       |\\n *   | `new Date(1488370835081)` | `true`        | `true`        |\\n *   | `new Date(NaN)`           | `false`       | `false`       |\\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\\n *   | `''`                      | `TypeError`   | `false`       |\\n *   | `1488370835081`           | `TypeError`   | `true`        |\\n *   | `NaN`                     | `TypeError`   | `false`       |\\n *\\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\\n *   that try to coerce arguments to the expected type\\n *   (which is also the case with other *date-fns* functions).\\n *\\n * @param {*} date - the date to check\\n * @returns {Boolean} the date is valid\\n * @throws {TypeError} 1 argument required\\n *\\n * @example\\n * // For the valid date:\\n * const result = isValid(new Date(2014, 1, 31))\\n * //=> true\\n *\\n * @example\\n * // For the value, convertable into a date:\\n * const result = isValid(1393804800000)\\n * //=> true\\n *\\n * @example\\n * // For the invalid date:\\n * const result = isValid(new Date(''))\\n * //=> false\\n */\\n\\nfunction isValid(dirtyDate) {\\n  requiredArgs(1, arguments);\\n\\n  if (!isDate(dirtyDate) && typeof dirtyDate !== 'number') {\\n    return false;\\n  }\\n\\n  var date = toDate(dirtyDate);\\n  return !isNaN(Number(date));\\n}\\n\\nvar formatDistanceLocale = {\\n  lessThanXSeconds: {\\n    one: 'less than a second',\\n    other: 'less than {{count}} seconds'\\n  },\\n  xSeconds: {\\n    one: '1 second',\\n    other: '{{count}} seconds'\\n  },\\n  halfAMinute: 'half a minute',\\n  lessThanXMinutes: {\\n    one: 'less than a minute',\\n    other: 'less than {{count}} minutes'\\n  },\\n  xMinutes: {\\n    one: '1 minute',\\n    other: '{{count}} minutes'\\n  },\\n  aboutXHours: {\\n    one: 'about 1 hour',\\n    other: 'about {{count}} hours'\\n  },\\n  xHours: {\\n    one: '1 hour',\\n    other: '{{count}} hours'\\n  },\\n  xDays: {\\n    one: '1 day',\\n    other: '{{count}} days'\\n  },\\n  aboutXWeeks: {\\n    one: 'about 1 week',\\n    other: 'about {{count}} weeks'\\n  },\\n  xWeeks: {\\n    one: '1 week',\\n    other: '{{count}} weeks'\\n  },\\n  aboutXMonths: {\\n    one: 'about 1 month',\\n    other: 'about {{count}} months'\\n  },\\n  xMonths: {\\n    one: '1 month',\\n    other: '{{count}} months'\\n  },\\n  aboutXYears: {\\n    one: 'about 1 year',\\n    other: 'about {{count}} years'\\n  },\\n  xYears: {\\n    one: '1 year',\\n    other: '{{count}} years'\\n  },\\n  overXYears: {\\n    one: 'over 1 year',\\n    other: 'over {{count}} years'\\n  },\\n  almostXYears: {\\n    one: 'almost 1 year',\\n    other: 'almost {{count}} years'\\n  }\\n};\\n\\nvar formatDistance = function (token, count, options) {\\n  var result;\\n  var tokenValue = formatDistanceLocale[token];\\n\\n  if (typeof tokenValue === 'string') {\\n    result = tokenValue;\\n  } else if (count === 1) {\\n    result = tokenValue.one;\\n  } else {\\n    result = tokenValue.other.replace('{{count}}', count.toString());\\n  }\\n\\n  if (options !== null && options !== void 0 && options.addSuffix) {\\n    if (options.comparison && options.comparison > 0) {\\n      return 'in ' + result;\\n    } else {\\n      return result + ' ago';\\n    }\\n  }\\n\\n  return result;\\n};\\n\\nvar formatDistance$1 = formatDistance;\\n\\nfunction buildFormatLongFn(args) {\\n  return function () {\\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n    // TODO: Remove String()\\n    var width = options.width ? String(options.width) : args.defaultWidth;\\n    var format = args.formats[width] || args.formats[args.defaultWidth];\\n    return format;\\n  };\\n}\\n\\nvar dateFormats = {\\n  full: 'EEEE, MMMM do, y',\\n  long: 'MMMM do, y',\\n  medium: 'MMM d, y',\\n  short: 'MM/dd/yyyy'\\n};\\nvar timeFormats = {\\n  full: 'h:mm:ss a zzzz',\\n  long: 'h:mm:ss a z',\\n  medium: 'h:mm:ss a',\\n  short: 'h:mm a'\\n};\\nvar dateTimeFormats = {\\n  full: \\\"{{date}} 'at' {{time}}\\\",\\n  long: \\\"{{date}} 'at' {{time}}\\\",\\n  medium: '{{date}}, {{time}}',\\n  short: '{{date}}, {{time}}'\\n};\\nvar formatLong = {\\n  date: buildFormatLongFn({\\n    formats: dateFormats,\\n    defaultWidth: 'full'\\n  }),\\n  time: buildFormatLongFn({\\n    formats: timeFormats,\\n    defaultWidth: 'full'\\n  }),\\n  dateTime: buildFormatLongFn({\\n    formats: dateTimeFormats,\\n    defaultWidth: 'full'\\n  })\\n};\\nvar formatLong$1 = formatLong;\\n\\nvar formatRelativeLocale = {\\n  lastWeek: \\\"'last' eeee 'at' p\\\",\\n  yesterday: \\\"'yesterday at' p\\\",\\n  today: \\\"'today at' p\\\",\\n  tomorrow: \\\"'tomorrow at' p\\\",\\n  nextWeek: \\\"eeee 'at' p\\\",\\n  other: 'P'\\n};\\n\\nvar formatRelative = function (token, _date, _baseDate, _options) {\\n  return formatRelativeLocale[token];\\n};\\n\\nvar formatRelative$1 = formatRelative;\\n\\nfunction buildLocalizeFn(args) {\\n  return function (dirtyIndex, dirtyOptions) {\\n    var options = dirtyOptions || {};\\n    var context = options.context ? String(options.context) : 'standalone';\\n    var valuesArray;\\n\\n    if (context === 'formatting' && args.formattingValues) {\\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\\n      var width = options.width ? String(options.width) : defaultWidth;\\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\\n    } else {\\n      var _defaultWidth = args.defaultWidth;\\n\\n      var _width = options.width ? String(options.width) : args.defaultWidth;\\n\\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\\n    }\\n\\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex; // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challange you to try to remove it!\\n\\n    return valuesArray[index];\\n  };\\n}\\n\\nvar eraValues = {\\n  narrow: ['B', 'A'],\\n  abbreviated: ['BC', 'AD'],\\n  wide: ['Before Christ', 'Anno Domini']\\n};\\nvar quarterValues = {\\n  narrow: ['1', '2', '3', '4'],\\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']\\n}; // Note: in English, the names of days of the week and months are capitalized.\\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\\n// Generally, formatted dates should look like they are in the middle of a sentence,\\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\\n\\nvar monthValues = {\\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\\n};\\nvar dayValues = {\\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\\n};\\nvar dayPeriodValues = {\\n  narrow: {\\n    am: 'a',\\n    pm: 'p',\\n    midnight: 'mi',\\n    noon: 'n',\\n    morning: 'morning',\\n    afternoon: 'afternoon',\\n    evening: 'evening',\\n    night: 'night'\\n  },\\n  abbreviated: {\\n    am: 'AM',\\n    pm: 'PM',\\n    midnight: 'midnight',\\n    noon: 'noon',\\n    morning: 'morning',\\n    afternoon: 'afternoon',\\n    evening: 'evening',\\n    night: 'night'\\n  },\\n  wide: {\\n    am: 'a.m.',\\n    pm: 'p.m.',\\n    midnight: 'midnight',\\n    noon: 'noon',\\n    morning: 'morning',\\n    afternoon: 'afternoon',\\n    evening: 'evening',\\n    night: 'night'\\n  }\\n};\\nvar formattingDayPeriodValues = {\\n  narrow: {\\n    am: 'a',\\n    pm: 'p',\\n    midnight: 'mi',\\n    noon: 'n',\\n    morning: 'in the morning',\\n    afternoon: 'in the afternoon',\\n    evening: 'in the evening',\\n    night: 'at night'\\n  },\\n  abbreviated: {\\n    am: 'AM',\\n    pm: 'PM',\\n    midnight: 'midnight',\\n    noon: 'noon',\\n    morning: 'in the morning',\\n    afternoon: 'in the afternoon',\\n    evening: 'in the evening',\\n    night: 'at night'\\n  },\\n  wide: {\\n    am: 'a.m.',\\n    pm: 'p.m.',\\n    midnight: 'midnight',\\n    noon: 'noon',\\n    morning: 'in the morning',\\n    afternoon: 'in the afternoon',\\n    evening: 'in the evening',\\n    night: 'at night'\\n  }\\n};\\n\\nvar ordinalNumber = function (dirtyNumber, _options) {\\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\\n  // if they are different for different grammatical genders,\\n  // use `options.unit`.\\n  //\\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\\n  // 'day', 'hour', 'minute', 'second'.\\n\\n  var rem100 = number % 100;\\n\\n  if (rem100 > 20 || rem100 < 10) {\\n    switch (rem100 % 10) {\\n      case 1:\\n        return number + 'st';\\n\\n      case 2:\\n        return number + 'nd';\\n\\n      case 3:\\n        return number + 'rd';\\n    }\\n  }\\n\\n  return number + 'th';\\n};\\n\\nvar localize = {\\n  ordinalNumber: ordinalNumber,\\n  era: buildLocalizeFn({\\n    values: eraValues,\\n    defaultWidth: 'wide'\\n  }),\\n  quarter: buildLocalizeFn({\\n    values: quarterValues,\\n    defaultWidth: 'wide',\\n    argumentCallback: function (quarter) {\\n      return quarter - 1;\\n    }\\n  }),\\n  month: buildLocalizeFn({\\n    values: monthValues,\\n    defaultWidth: 'wide'\\n  }),\\n  day: buildLocalizeFn({\\n    values: dayValues,\\n    defaultWidth: 'wide'\\n  }),\\n  dayPeriod: buildLocalizeFn({\\n    values: dayPeriodValues,\\n    defaultWidth: 'wide',\\n    formattingValues: formattingDayPeriodValues,\\n    defaultFormattingWidth: 'wide'\\n  })\\n};\\nvar localize$1 = localize;\\n\\nfunction buildMatchFn(args) {\\n  return function (string) {\\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\n    var width = options.width;\\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\\n    var matchResult = string.match(matchPattern);\\n\\n    if (!matchResult) {\\n      return null;\\n    }\\n\\n    var matchedString = matchResult[0];\\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\\n    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {\\n      return pattern.test(matchedString);\\n    }) : findKey(parsePatterns, function (pattern) {\\n      return pattern.test(matchedString);\\n    });\\n    var value;\\n    value = args.valueCallback ? args.valueCallback(key) : key;\\n    value = options.valueCallback ? options.valueCallback(value) : value;\\n    var rest = string.slice(matchedString.length);\\n    return {\\n      value: value,\\n      rest: rest\\n    };\\n  };\\n}\\n\\nfunction findKey(object, predicate) {\\n  for (var key in object) {\\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\\n      return key;\\n    }\\n  }\\n\\n  return undefined;\\n}\\n\\nfunction findIndex(array, predicate) {\\n  for (var key = 0; key < array.length; key++) {\\n    if (predicate(array[key])) {\\n      return key;\\n    }\\n  }\\n\\n  return undefined;\\n}\\n\\nfunction buildMatchPatternFn(args) {\\n  return function (string) {\\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\n    var matchResult = string.match(args.matchPattern);\\n    if (!matchResult) return null;\\n    var matchedString = matchResult[0];\\n    var parseResult = string.match(args.parsePattern);\\n    if (!parseResult) return null;\\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\\n    value = options.valueCallback ? options.valueCallback(value) : value;\\n    var rest = string.slice(matchedString.length);\\n    return {\\n      value: value,\\n      rest: rest\\n    };\\n  };\\n}\\n\\nvar matchOrdinalNumberPattern = /^(\\\\d+)(th|st|nd|rd)?/i;\\nvar parseOrdinalNumberPattern = /\\\\d+/i;\\nvar matchEraPatterns = {\\n  narrow: /^(b|a)/i,\\n  abbreviated: /^(b\\\\.?\\\\s?c\\\\.?|b\\\\.?\\\\s?c\\\\.?\\\\s?e\\\\.?|a\\\\.?\\\\s?d\\\\.?|c\\\\.?\\\\s?e\\\\.?)/i,\\n  wide: /^(before christ|before common era|anno domini|common era)/i\\n};\\nvar parseEraPatterns = {\\n  any: [/^b/i, /^(a|c)/i]\\n};\\nvar matchQuarterPatterns = {\\n  narrow: /^[1234]/i,\\n  abbreviated: /^q[1234]/i,\\n  wide: /^[1234](th|st|nd|rd)? quarter/i\\n};\\nvar parseQuarterPatterns = {\\n  any: [/1/i, /2/i, /3/i, /4/i]\\n};\\nvar matchMonthPatterns = {\\n  narrow: /^[jfmasond]/i,\\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\\n};\\nvar parseMonthPatterns = {\\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\\n};\\nvar matchDayPatterns = {\\n  narrow: /^[smtwf]/i,\\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\\n};\\nvar parseDayPatterns = {\\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\\n};\\nvar matchDayPeriodPatterns = {\\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\\n  any: /^([ap]\\\\.?\\\\s?m\\\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\\n};\\nvar parseDayPeriodPatterns = {\\n  any: {\\n    am: /^a/i,\\n    pm: /^p/i,\\n    midnight: /^mi/i,\\n    noon: /^no/i,\\n    morning: /morning/i,\\n    afternoon: /afternoon/i,\\n    evening: /evening/i,\\n    night: /night/i\\n  }\\n};\\nvar match = {\\n  ordinalNumber: buildMatchPatternFn({\\n    matchPattern: matchOrdinalNumberPattern,\\n    parsePattern: parseOrdinalNumberPattern,\\n    valueCallback: function (value) {\\n      return parseInt(value, 10);\\n    }\\n  }),\\n  era: buildMatchFn({\\n    matchPatterns: matchEraPatterns,\\n    defaultMatchWidth: 'wide',\\n    parsePatterns: parseEraPatterns,\\n    defaultParseWidth: 'any'\\n  }),\\n  quarter: buildMatchFn({\\n    matchPatterns: matchQuarterPatterns,\\n    defaultMatchWidth: 'wide',\\n    parsePatterns: parseQuarterPatterns,\\n    defaultParseWidth: 'any',\\n    valueCallback: function (index) {\\n      return index + 1;\\n    }\\n  }),\\n  month: buildMatchFn({\\n    matchPatterns: matchMonthPatterns,\\n    defaultMatchWidth: 'wide',\\n    parsePatterns: parseMonthPatterns,\\n    defaultParseWidth: 'any'\\n  }),\\n  day: buildMatchFn({\\n    matchPatterns: matchDayPatterns,\\n    defaultMatchWidth: 'wide',\\n    parsePatterns: parseDayPatterns,\\n    defaultParseWidth: 'any'\\n  }),\\n  dayPeriod: buildMatchFn({\\n    matchPatterns: matchDayPeriodPatterns,\\n    defaultMatchWidth: 'any',\\n    parsePatterns: parseDayPeriodPatterns,\\n    defaultParseWidth: 'any'\\n  })\\n};\\nvar match$1 = match;\\n\\n/**\\n * @type {Locale}\\n * @category Locales\\n * @summary English locale (United States).\\n * @language English\\n * @iso-639-2 eng\\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\\n */\\nvar locale = {\\n  code: 'en-US',\\n  formatDistance: formatDistance$1,\\n  formatLong: formatLong$1,\\n  formatRelative: formatRelative$1,\\n  localize: localize$1,\\n  match: match$1,\\n  options: {\\n    weekStartsOn: 0\\n    /* Sunday */\\n    ,\\n    firstWeekContainsDate: 1\\n  }\\n};\\nvar defaultLocale = locale;\\n\\n/**\\n * @name subMilliseconds\\n * @category Millisecond Helpers\\n * @summary Subtract the specified number of milliseconds from the given date.\\n *\\n * @description\\n * Subtract the specified number of milliseconds from the given date.\\n *\\n * ### v2.0.0 breaking changes:\\n *\\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\\n *\\n * @param {Date|Number} date - the date to be changed\\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\\n * @returns {Date} the new date with the milliseconds subtracted\\n * @throws {TypeError} 2 arguments required\\n *\\n * @example\\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\\n * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\\n * //=> Thu Jul 10 2014 12:45:29.250\\n */\\n\\nfunction subMilliseconds(dirtyDate, dirtyAmount) {\\n  requiredArgs(2, arguments);\\n  var amount = toInteger(dirtyAmount);\\n  return addMilliseconds(dirtyDate, -amount);\\n}\\n\\nfunction addLeadingZeros(number, targetLength) {\\n  var sign = number < 0 ? '-' : '';\\n  var output = Math.abs(number).toString();\\n\\n  while (output.length < targetLength) {\\n    output = '0' + output;\\n  }\\n\\n  return sign + output;\\n}\\n\\n/*\\n * |     | Unit                           |     | Unit                           |\\n * |-----|--------------------------------|-----|--------------------------------|\\n * |  a  | AM, PM                         |  A* |                                |\\n * |  d  | Day of month                   |  D  |                                |\\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\\n * |  m  | Minute                         |  M  | Month                          |\\n * |  s  | Second                         |  S  | Fraction of second             |\\n * |  y  | Year (abs)                     |  Y  |                                |\\n *\\n * Letters marked by * are not implemented but reserved by Unicode standard.\\n */\\n\\nvar formatters$2 = {\\n  // Year\\n  y: function (date, token) {\\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\\n    // |----------|-------|----|-------|-------|-------|\\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\\n\\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\\n  },\\n  // Month\\n  M: function (date, token) {\\n    var month = date.getUTCMonth();\\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\\n  },\\n  // Day of the month\\n  d: function (date, token) {\\n    return addLeadingZeros(date.getUTCDate(), token.length);\\n  },\\n  // AM or PM\\n  a: function (date, token) {\\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\\n\\n    switch (token) {\\n      case 'a':\\n      case 'aa':\\n        return dayPeriodEnumValue.toUpperCase();\\n\\n      case 'aaa':\\n        return dayPeriodEnumValue;\\n\\n      case 'aaaaa':\\n        return dayPeriodEnumValue[0];\\n\\n      case 'aaaa':\\n      default:\\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\\n    }\\n  },\\n  // Hour [1-12]\\n  h: function (date, token) {\\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\\n  },\\n  // Hour [0-23]\\n  H: function (date, token) {\\n    return addLeadingZeros(date.getUTCHours(), token.length);\\n  },\\n  // Minute\\n  m: function (date, token) {\\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\\n  },\\n  // Second\\n  s: function (date, token) {\\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\\n  },\\n  // Fraction of second\\n  S: function (date, token) {\\n    var numberOfDigits = token.length;\\n    var milliseconds = date.getUTCMilliseconds();\\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\\n    return addLeadingZeros(fractionalSeconds, token.length);\\n  }\\n};\\nvar formatters$3 = formatters$2;\\n\\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\\n// See issue: https://github.com/date-fns/date-fns/issues/376\\n\\nfunction getUTCDayOfYear(dirtyDate) {\\n  requiredArgs(1, arguments);\\n  var date = toDate(dirtyDate);\\n  var timestamp = date.getTime();\\n  date.setUTCMonth(0, 1);\\n  date.setUTCHours(0, 0, 0, 0);\\n  var startOfYearTimestamp = date.getTime();\\n  var difference = timestamp - startOfYearTimestamp;\\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\\n}\\n\\n// See issue: https://github.com/date-fns/date-fns/issues/376\\n\\nfunction startOfUTCISOWeek(dirtyDate) {\\n  requiredArgs(1, arguments);\\n  var weekStartsOn = 1;\\n  var date = toDate(dirtyDate);\\n  var day = date.getUTCDay();\\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\\n  date.setUTCDate(date.getUTCDate() - diff);\\n  date.setUTCHours(0, 0, 0, 0);\\n  return date;\\n}\\n\\n// See issue: https://github.com/date-fns/date-fns/issues/376\\n\\nfunction getUTCISOWeekYear(dirtyDate) {\\n  requiredArgs(1, arguments);\\n  var date = toDate(dirtyDate);\\n  var year = date.getUTCFullYear();\\n  var fourthOfJanuaryOfNextYear = new Date(0);\\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\\n  var fourthOfJanuaryOfThisYear = new Date(0);\\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\\n\\n  if (date.getTime() >= startOfNextYear.getTime()) {\\n    return year + 1;\\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\\n    return year;\\n  } else {\\n    return year - 1;\\n  }\\n}\\n\\n// See issue: https://github.com/date-fns/date-fns/issues/376\\n\\nfunction startOfUTCISOWeekYear(dirtyDate) {\\n  requiredArgs(1, arguments);\\n  var year = getUTCISOWeekYear(dirtyDate);\\n  var fourthOfJanuary = new Date(0);\\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\\n  var date = startOfUTCISOWeek(fourthOfJanuary);\\n  return date;\\n}\\n\\nvar MILLISECONDS_IN_WEEK$1 = 604800000; // This function will be a part of public API when UTC function will be implemented.\\n// See issue: https://github.com/date-fns/date-fns/issues/376\\n\\nfunction getUTCISOWeek(dirtyDate) {\\n  requiredArgs(1, arguments);\\n  var date = toDate(dirtyDate);\\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\\n  // because the number of milliseconds in a week is not constant\\n  // (e.g. it's different in the week of the daylight saving time clock shift)\\n\\n  return Math.round(diff / MILLISECONDS_IN_WEEK$1) + 1;\\n}\\n\\n// See issue: https://github.com/date-fns/date-fns/issues/376\\n\\nfunction startOfUTCWeek(dirtyDate, dirtyOptions) {\\n  requiredArgs(1, arguments);\\n  var options = dirtyOptions || {};\\n  var locale = options.locale;\\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\\n\\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\\n  }\\n\\n  var date = toDate(dirtyDate);\\n  var day = date.getUTCDay();\\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\\n  date.setUTCDate(date.getUTCDate() - diff);\\n  date.setUTCHours(0, 0, 0, 0);\\n  return date;\\n}\\n\\n// See issue: https://github.com/date-fns/date-fns/issues/376\\n\\nfunction getUTCWeekYear(dirtyDate, dirtyOptions) {\\n  requiredArgs(1, arguments);\\n  var date = toDate(dirtyDate, dirtyOptions);\\n  var year = date.getUTCFullYear();\\n  var options = dirtyOptions || {};\\n  var locale = options.locale;\\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\\n\\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\\n  }\\n\\n  var firstWeekOfNextYear = new Date(0);\\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\\n  var firstWeekOfThisYear = new Date(0);\\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\\n\\n  if (date.getTime() >= startOfNextYear.getTime()) {\\n    return year + 1;\\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\\n    return year;\\n  } else {\\n    return year - 1;\\n  }\\n}\\n\\n// See issue: https://github.com/date-fns/date-fns/issues/376\\n\\nfunction startOfUTCWeekYear(dirtyDate, dirtyOptions) {\\n  requiredArgs(1, arguments);\\n  var options = dirtyOptions || {};\\n  var locale = options.locale;\\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\\n  var firstWeek = new Date(0);\\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\\n  firstWeek.setUTCHours(0, 0, 0, 0);\\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\\n  return date;\\n}\\n\\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\\n// See issue: https://github.com/date-fns/date-fns/issues/376\\n\\nfunction getUTCWeek(dirtyDate, options) {\\n  requiredArgs(1, arguments);\\n  var date = toDate(dirtyDate);\\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\\n  // because the number of milliseconds in a week is not constant\\n  // (e.g. it's different in the week of the daylight saving time clock shift)\\n\\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\\n}\\n\\nvar dayPeriodEnum = {\\n  am: 'am',\\n  pm: 'pm',\\n  midnight: 'midnight',\\n  noon: 'noon',\\n  morning: 'morning',\\n  afternoon: 'afternoon',\\n  evening: 'evening',\\n  night: 'night'\\n};\\n/*\\n * |     | Unit                           |     | Unit                           |\\n * |-----|--------------------------------|-----|--------------------------------|\\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\\n * |  d  | Day of month                   |  D  | Day of year                    |\\n * |  e  | Local day of week              |  E  | Day of week                    |\\n * |  f  |                                |  F* | Day of week in month           |\\n * |  g* | Modified Julian day            |  G  | Era                            |\\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\\n * |  i! | ISO day of week                |  I! | ISO week of year               |\\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\\n * |  m  | Minute                         |  M  | Month                          |\\n * |  n  |                                |  N  |                                |\\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\\n * |  p! | Long localized time            |  P! | Long localized date            |\\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\\n * |  s  | Second                         |  S  | Fraction of second             |\\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\\n * |  u  | Extended year                  |  U* | Cyclic year                    |\\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\\n * |  w  | Local week of year             |  W* | Week of month                  |\\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\\n *\\n * Letters marked by * are not implemented but reserved by Unicode standard.\\n *\\n * Letters marked by ! are non-standard, but implemented by date-fns:\\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\\n *   i.e. 7 for Sunday, 1 for Monday, etc.\\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\\n *   `R` is supposed to be used in conjunction with `I` and `i`\\n *   for universal ISO week-numbering date, whereas\\n *   `Y` is supposed to be used in conjunction with `w` and `e`\\n *   for week-numbering date specific to the locale.\\n * - `P` is long localized date format\\n * - `p` is long localized time format\\n */\\n\\nvar formatters = {\\n  // Era\\n  G: function (date, token, localize) {\\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\\n\\n    switch (token) {\\n      // AD, BC\\n      case 'G':\\n      case 'GG':\\n      case 'GGG':\\n        return localize.era(era, {\\n          width: 'abbreviated'\\n        });\\n      // A, B\\n\\n      case 'GGGGG':\\n        return localize.era(era, {\\n          width: 'narrow'\\n        });\\n      // Anno Domini, Before Christ\\n\\n      case 'GGGG':\\n      default:\\n        return localize.era(era, {\\n          width: 'wide'\\n        });\\n    }\\n  },\\n  // Year\\n  y: function (date, token, localize) {\\n    // Ordinal number\\n    if (token === 'yo') {\\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\\n\\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\\n      return localize.ordinalNumber(year, {\\n        unit: 'year'\\n      });\\n    }\\n\\n    return formatters$3.y(date, token);\\n  },\\n  // Local week-numbering year\\n  Y: function (date, token, localize, options) {\\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\\n\\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\\n\\n    if (token === 'YY') {\\n      var twoDigitYear = weekYear % 100;\\n      return addLeadingZeros(twoDigitYear, 2);\\n    } // Ordinal number\\n\\n\\n    if (token === 'Yo') {\\n      return localize.ordinalNumber(weekYear, {\\n        unit: 'year'\\n      });\\n    } // Padding\\n\\n\\n    return addLeadingZeros(weekYear, token.length);\\n  },\\n  // ISO week-numbering year\\n  R: function (date, token) {\\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\\n\\n    return addLeadingZeros(isoWeekYear, token.length);\\n  },\\n  // Extended year. This is a single number designating the year of this calendar system.\\n  // The main difference between `y` and `u` localizers are B.C. years:\\n  // | Year | `y` | `u` |\\n  // |------|-----|-----|\\n  // | AC 1 |   1 |   1 |\\n  // | BC 1 |   1 |   0 |\\n  // | BC 2 |   2 |  -1 |\\n  // Also `yy` always returns the last two digits of a year,\\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\\n  u: function (date, token) {\\n    var year = date.getUTCFullYear();\\n    return addLeadingZeros(year, token.length);\\n  },\\n  // Quarter\\n  Q: function (date, token, localize) {\\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\\n\\n    switch (token) {\\n      // 1, 2, 3, 4\\n      case 'Q':\\n        return String(quarter);\\n      // 01, 02, 03, 04\\n\\n      case 'QQ':\\n        return addLeadingZeros(quarter, 2);\\n      // 1st, 2nd, 3rd, 4th\\n\\n      case 'Qo':\\n        return localize.ordinalNumber(quarter, {\\n          unit: 'quarter'\\n        });\\n      // Q1, Q2, Q3, Q4\\n\\n      case 'QQQ':\\n        return localize.quarter(quarter, {\\n          width: 'abbreviated',\\n          context: 'formatting'\\n        });\\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\\n\\n      case 'QQQQQ':\\n        return localize.quarter(quarter, {\\n          width: 'narrow',\\n          context: 'formatting'\\n        });\\n      // 1st quarter, 2nd quarter, ...\\n\\n      case 'QQQQ':\\n      default:\\n        return localize.quarter(quarter, {\\n          width: 'wide',\\n          context: 'formatting'\\n        });\\n    }\\n  },\\n  // Stand-alone quarter\\n  q: function (date, token, localize) {\\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\\n\\n    switch (token) {\\n      // 1, 2, 3, 4\\n      case 'q':\\n        return String(quarter);\\n      // 01, 02, 03, 04\\n\\n      case 'qq':\\n        return addLeadingZeros(quarter, 2);\\n      // 1st, 2nd, 3rd, 4th\\n\\n      case 'qo':\\n        return localize.ordinalNumber(quarter, {\\n          unit: 'quarter'\\n        });\\n      // Q1, Q2, Q3, Q4\\n\\n      case 'qqq':\\n        return localize.quarter(quarter, {\\n          width: 'abbreviated',\\n          context: 'standalone'\\n        });\\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\\n\\n      case 'qqqqq':\\n        return localize.quarter(quarter, {\\n          width: 'narrow',\\n          context: 'standalone'\\n        });\\n      // 1st quarter, 2nd quarter, ...\\n\\n      case 'qqqq':\\n      default:\\n        return localize.quarter(quarter, {\\n          width: 'wide',\\n          context: 'standalone'\\n        });\\n    }\\n  },\\n  // Month\\n  M: function (date, token, localize) {\\n    var month = date.getUTCMonth();\\n\\n    switch (token) {\\n      case 'M':\\n      case 'MM':\\n        return formatters$3.M(date, token);\\n      // 1st, 2nd, ..., 12th\\n\\n      case 'Mo':\\n        return localize.ordinalNumber(month + 1, {\\n          unit: 'month'\\n        });\\n      // Jan, Feb, ..., Dec\\n\\n      case 'MMM':\\n        return localize.month(month, {\\n          width: 'abbreviated',\\n          context: 'formatting'\\n        });\\n      // J, F, ..., D\\n\\n      case 'MMMMM':\\n        return localize.month(month, {\\n          width: 'narrow',\\n          context: 'formatting'\\n        });\\n      // January, February, ..., December\\n\\n      case 'MMMM':\\n      default:\\n        return localize.month(month, {\\n          width: 'wide',\\n          context: 'formatting'\\n        });\\n    }\\n  },\\n  // Stand-alone month\\n  L: function (date, token, localize) {\\n    var month = date.getUTCMonth();\\n\\n    switch (token) {\\n      // 1, 2, ..., 12\\n      case 'L':\\n        return String(month + 1);\\n      // 01, 02, ..., 12\\n\\n      case 'LL':\\n        return addLeadingZeros(month + 1, 2);\\n      // 1st, 2nd, ..., 12th\\n\\n      case 'Lo':\\n        return localize.ordinalNumber(month + 1, {\\n          unit: 'month'\\n        });\\n      // Jan, Feb, ..., Dec\\n\\n      case 'LLL':\\n        return localize.month(month, {\\n          width: 'abbreviated',\\n          context: 'standalone'\\n        });\\n      // J, F, ..., D\\n\\n      case 'LLLLL':\\n        return localize.month(month, {\\n          width: 'narrow',\\n          context: 'standalone'\\n        });\\n      // January, February, ..., December\\n\\n      case 'LLLL':\\n      default:\\n        return localize.month(month, {\\n          width: 'wide',\\n          context: 'standalone'\\n        });\\n    }\\n  },\\n  // Local week of year\\n  w: function (date, token, localize, options) {\\n    var week = getUTCWeek(date, options);\\n\\n    if (token === 'wo') {\\n      return localize.ordinalNumber(week, {\\n        unit: 'week'\\n      });\\n    }\\n\\n    return addLeadingZeros(week, token.length);\\n  },\\n  // ISO week of year\\n  I: function (date, token, localize) {\\n    var isoWeek = getUTCISOWeek(date);\\n\\n    if (token === 'Io') {\\n      return localize.ordinalNumber(isoWeek, {\\n        unit: 'week'\\n      });\\n    }\\n\\n    return addLeadingZeros(isoWeek, token.length);\\n  },\\n  // Day of the month\\n  d: function (date, token, localize) {\\n    if (token === 'do') {\\n      return localize.ordinalNumber(date.getUTCDate(), {\\n        unit: 'date'\\n      });\\n    }\\n\\n    return formatters$3.d(date, token);\\n  },\\n  // Day of year\\n  D: function (date, token, localize) {\\n    var dayOfYear = getUTCDayOfYear(date);\\n\\n    if (token === 'Do') {\\n      return localize.ordinalNumber(dayOfYear, {\\n        unit: 'dayOfYear'\\n      });\\n    }\\n\\n    return addLeadingZeros(dayOfYear, token.length);\\n  },\\n  // Day of week\\n  E: function (date, token, localize) {\\n    var dayOfWeek = date.getUTCDay();\\n\\n    switch (token) {\\n      // Tue\\n      case 'E':\\n      case 'EE':\\n      case 'EEE':\\n        return localize.day(dayOfWeek, {\\n          width: 'abbreviated',\\n          context: 'formatting'\\n        });\\n      // T\\n\\n      case 'EEEEE':\\n        return localize.day(dayOfWeek, {\\n          width: 'narrow',\\n          context: 'formatting'\\n        });\\n      // Tu\\n\\n      case 'EEEEEE':\\n        return localize.day(dayOfWeek, {\\n          width: 'short',\\n          context: 'formatting'\\n        });\\n      // Tuesday\\n\\n      case 'EEEE':\\n      default:\\n        return localize.day(dayOfWeek, {\\n          width: 'wide',\\n          context: 'formatting'\\n        });\\n    }\\n  },\\n  // Local day of week\\n  e: function (date, token, localize, options) {\\n    var dayOfWeek = date.getUTCDay();\\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\\n\\n    switch (token) {\\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\\n      case 'e':\\n        return String(localDayOfWeek);\\n      // Padded numerical value\\n\\n      case 'ee':\\n        return addLeadingZeros(localDayOfWeek, 2);\\n      // 1st, 2nd, ..., 7th\\n\\n      case 'eo':\\n        return localize.ordinalNumber(localDayOfWeek, {\\n          unit: 'day'\\n        });\\n\\n      case 'eee':\\n        return localize.day(dayOfWeek, {\\n          width: 'abbreviated',\\n          context: 'formatting'\\n        });\\n      // T\\n\\n      case 'eeeee':\\n        return localize.day(dayOfWeek, {\\n          width: 'narrow',\\n          context: 'formatting'\\n        });\\n      // Tu\\n\\n      case 'eeeeee':\\n        return localize.day(dayOfWeek, {\\n          width: 'short',\\n          context: 'formatting'\\n        });\\n      // Tuesday\\n\\n      case 'eeee':\\n      default:\\n        return localize.day(dayOfWeek, {\\n          width: 'wide',\\n          context: 'formatting'\\n        });\\n    }\\n  },\\n  // Stand-alone local day of week\\n  c: function (date, token, localize, options) {\\n    var dayOfWeek = date.getUTCDay();\\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\\n\\n    switch (token) {\\n      // Numerical value (same as in `e`)\\n      case 'c':\\n        return String(localDayOfWeek);\\n      // Padded numerical value\\n\\n      case 'cc':\\n        return addLeadingZeros(localDayOfWeek, token.length);\\n      // 1st, 2nd, ..., 7th\\n\\n      case 'co':\\n        return localize.ordinalNumber(localDayOfWeek, {\\n          unit: 'day'\\n        });\\n\\n      case 'ccc':\\n        return localize.day(dayOfWeek, {\\n          width: 'abbreviated',\\n          context: 'standalone'\\n        });\\n      // T\\n\\n      case 'ccccc':\\n        return localize.day(dayOfWeek, {\\n          width: 'narrow',\\n          context: 'standalone'\\n        });\\n      // Tu\\n\\n      case 'cccccc':\\n        return localize.day(dayOfWeek, {\\n          width: 'short',\\n          context: 'standalone'\\n        });\\n      // Tuesday\\n\\n      case 'cccc':\\n      default:\\n        return localize.day(dayOfWeek, {\\n          width: 'wide',\\n          context: 'standalone'\\n        });\\n    }\\n  },\\n  // ISO day of week\\n  i: function (date, token, localize) {\\n    var dayOfWeek = date.getUTCDay();\\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\\n\\n    switch (token) {\\n      // 2\\n      case 'i':\\n        return String(isoDayOfWeek);\\n      // 02\\n\\n      case 'ii':\\n        return addLeadingZeros(isoDayOfWeek, token.length);\\n      // 2nd\\n\\n      case 'io':\\n        return localize.ordinalNumber(isoDayOfWeek, {\\n          unit: 'day'\\n        });\\n      // Tue\\n\\n      case 'iii':\\n        return localize.day(dayOfWeek, {\\n          width: 'abbreviated',\\n          context: 'formatting'\\n        });\\n      // T\\n\\n      case 'iiiii':\\n        return localize.day(dayOfWeek, {\\n          width: 'narrow',\\n          context: 'formatting'\\n        });\\n      // Tu\\n\\n      case 'iiiiii':\\n        return localize.day(dayOfWeek, {\\n          width: 'short',\\n          context: 'formatting'\\n        });\\n      // Tuesday\\n\\n      case 'iiii':\\n      default:\\n        return localize.day(dayOfWeek, {\\n          width: 'wide',\\n          context: 'formatting'\\n        });\\n    }\\n  },\\n  // AM or PM\\n  a: function (date, token, localize) {\\n    var hours = date.getUTCHours();\\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\\n\\n    switch (token) {\\n      case 'a':\\n      case 'aa':\\n        return localize.dayPeriod(dayPeriodEnumValue, {\\n          width: 'abbreviated',\\n          context: 'formatting'\\n        });\\n\\n      case 'aaa':\\n        return localize.dayPeriod(dayPeriodEnumValue, {\\n          width: 'abbreviated',\\n          context: 'formatting'\\n        }).toLowerCase();\\n\\n      case 'aaaaa':\\n        return localize.dayPeriod(dayPeriodEnumValue, {\\n          width: 'narrow',\\n          context: 'formatting'\\n        });\\n\\n      case 'aaaa':\\n      default:\\n        return localize.dayPeriod(dayPeriodEnumValue, {\\n          width: 'wide',\\n          context: 'formatting'\\n        });\\n    }\\n  },\\n  // AM, PM, midnight, noon\\n  b: function (date, token, localize) {\\n    var hours = date.getUTCHours();\\n    var dayPeriodEnumValue;\\n\\n    if (hours === 12) {\\n      dayPeriodEnumValue = dayPeriodEnum.noon;\\n    } else if (hours === 0) {\\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\\n    } else {\\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\\n    }\\n\\n    switch (token) {\\n      case 'b':\\n      case 'bb':\\n        return localize.dayPeriod(dayPeriodEnumValue, {\\n          width: 'abbreviated',\\n          context: 'formatting'\\n        });\\n\\n      case 'bbb':\\n        return localize.dayPeriod(dayPeriodEnumValue, {\\n          width: 'abbreviated',\\n          context: 'formatting'\\n        }).toLowerCase();\\n\\n      case 'bbbbb':\\n        return localize.dayPeriod(dayPeriodEnumValue, {\\n          width: 'narrow',\\n          context: 'formatting'\\n        });\\n\\n      case 'bbbb':\\n      default:\\n        return localize.dayPeriod(dayPeriodEnumValue, {\\n          width: 'wide',\\n          context: 'formatting'\\n        });\\n    }\\n  },\\n  // in the morning, in the afternoon, in the evening, at night\\n  B: function (date, token, localize) {\\n    var hours = date.getUTCHours();\\n    var dayPeriodEnumValue;\\n\\n    if (hours >= 17) {\\n      dayPeriodEnumValue = dayPeriodEnum.evening;\\n    } else if (hours >= 12) {\\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\\n    } else if (hours >= 4) {\\n      dayPeriodEnumValue = dayPeriodEnum.morning;\\n    } else {\\n      dayPeriodEnumValue = dayPeriodEnum.night;\\n    }\\n\\n    switch (token) {\\n      case 'B':\\n      case 'BB':\\n      case 'BBB':\\n        return localize.dayPeriod(dayPeriodEnumValue, {\\n          width: 'abbreviated',\\n          context: 'formatting'\\n        });\\n\\n      case 'BBBBB':\\n        return localize.dayPeriod(dayPeriodEnumValue, {\\n          width: 'narrow',\\n          context: 'formatting'\\n        });\\n\\n      case 'BBBB':\\n      default:\\n        return localize.dayPeriod(dayPeriodEnumValue, {\\n          width: 'wide',\\n          context: 'formatting'\\n        });\\n    }\\n  },\\n  // Hour [1-12]\\n  h: function (date, token, localize) {\\n    if (token === 'ho') {\\n      var hours = date.getUTCHours() % 12;\\n      if (hours === 0) hours = 12;\\n      return localize.ordinalNumber(hours, {\\n        unit: 'hour'\\n      });\\n    }\\n\\n    return formatters$3.h(date, token);\\n  },\\n  // Hour [0-23]\\n  H: function (date, token, localize) {\\n    if (token === 'Ho') {\\n      return localize.ordinalNumber(date.getUTCHours(), {\\n        unit: 'hour'\\n      });\\n    }\\n\\n    return formatters$3.H(date, token);\\n  },\\n  // Hour [0-11]\\n  K: function (date, token, localize) {\\n    var hours = date.getUTCHours() % 12;\\n\\n    if (token === 'Ko') {\\n      return localize.ordinalNumber(hours, {\\n        unit: 'hour'\\n      });\\n    }\\n\\n    return addLeadingZeros(hours, token.length);\\n  },\\n  // Hour [1-24]\\n  k: function (date, token, localize) {\\n    var hours = date.getUTCHours();\\n    if (hours === 0) hours = 24;\\n\\n    if (token === 'ko') {\\n      return localize.ordinalNumber(hours, {\\n        unit: 'hour'\\n      });\\n    }\\n\\n    return addLeadingZeros(hours, token.length);\\n  },\\n  // Minute\\n  m: function (date, token, localize) {\\n    if (token === 'mo') {\\n      return localize.ordinalNumber(date.getUTCMinutes(), {\\n        unit: 'minute'\\n      });\\n    }\\n\\n    return formatters$3.m(date, token);\\n  },\\n  // Second\\n  s: function (date, token, localize) {\\n    if (token === 'so') {\\n      return localize.ordinalNumber(date.getUTCSeconds(), {\\n        unit: 'second'\\n      });\\n    }\\n\\n    return formatters$3.s(date, token);\\n  },\\n  // Fraction of second\\n  S: function (date, token) {\\n    return formatters$3.S(date, token);\\n  },\\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\\n  X: function (date, token, _localize, options) {\\n    var originalDate = options._originalDate || date;\\n    var timezoneOffset = originalDate.getTimezoneOffset();\\n\\n    if (timezoneOffset === 0) {\\n      return 'Z';\\n    }\\n\\n    switch (token) {\\n      // Hours and optional minutes\\n      case 'X':\\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\\n      // Hours, minutes and optional seconds without `:` delimiter\\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\\n      // so this token always has the same output as `XX`\\n\\n      case 'XXXX':\\n      case 'XX':\\n        // Hours and minutes without `:` delimiter\\n        return formatTimezone(timezoneOffset);\\n      // Hours, minutes and optional seconds with `:` delimiter\\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\\n      // so this token always has the same output as `XXX`\\n\\n      case 'XXXXX':\\n      case 'XXX': // Hours and minutes with `:` delimiter\\n\\n      default:\\n        return formatTimezone(timezoneOffset, ':');\\n    }\\n  },\\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\\n  x: function (date, token, _localize, options) {\\n    var originalDate = options._originalDate || date;\\n    var timezoneOffset = originalDate.getTimezoneOffset();\\n\\n    switch (token) {\\n      // Hours and optional minutes\\n      case 'x':\\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\\n      // Hours, minutes and optional seconds without `:` delimiter\\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\\n      // so this token always has the same output as `xx`\\n\\n      case 'xxxx':\\n      case 'xx':\\n        // Hours and minutes without `:` delimiter\\n        return formatTimezone(timezoneOffset);\\n      // Hours, minutes and optional seconds with `:` delimiter\\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\\n      // so this token always has the same output as `xxx`\\n\\n      case 'xxxxx':\\n      case 'xxx': // Hours and minutes with `:` delimiter\\n\\n      default:\\n        return formatTimezone(timezoneOffset, ':');\\n    }\\n  },\\n  // Timezone (GMT)\\n  O: function (date, token, _localize, options) {\\n    var originalDate = options._originalDate || date;\\n    var timezoneOffset = originalDate.getTimezoneOffset();\\n\\n    switch (token) {\\n      // Short\\n      case 'O':\\n      case 'OO':\\n      case 'OOO':\\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\\n      // Long\\n\\n      case 'OOOO':\\n      default:\\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\\n    }\\n  },\\n  // Timezone (specific non-location)\\n  z: function (date, token, _localize, options) {\\n    var originalDate = options._originalDate || date;\\n    var timezoneOffset = originalDate.getTimezoneOffset();\\n\\n    switch (token) {\\n      // Short\\n      case 'z':\\n      case 'zz':\\n      case 'zzz':\\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\\n      // Long\\n\\n      case 'zzzz':\\n      default:\\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\\n    }\\n  },\\n  // Seconds timestamp\\n  t: function (date, token, _localize, options) {\\n    var originalDate = options._originalDate || date;\\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\\n    return addLeadingZeros(timestamp, token.length);\\n  },\\n  // Milliseconds timestamp\\n  T: function (date, token, _localize, options) {\\n    var originalDate = options._originalDate || date;\\n    var timestamp = originalDate.getTime();\\n    return addLeadingZeros(timestamp, token.length);\\n  }\\n};\\n\\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\\n  var sign = offset > 0 ? '-' : '+';\\n  var absOffset = Math.abs(offset);\\n  var hours = Math.floor(absOffset / 60);\\n  var minutes = absOffset % 60;\\n\\n  if (minutes === 0) {\\n    return sign + String(hours);\\n  }\\n\\n  var delimiter = dirtyDelimiter || '';\\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\\n}\\n\\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\\n  if (offset % 60 === 0) {\\n    var sign = offset > 0 ? '-' : '+';\\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\\n  }\\n\\n  return formatTimezone(offset, dirtyDelimiter);\\n}\\n\\nfunction formatTimezone(offset, dirtyDelimiter) {\\n  var delimiter = dirtyDelimiter || '';\\n  var sign = offset > 0 ? '-' : '+';\\n  var absOffset = Math.abs(offset);\\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\\n  var minutes = addLeadingZeros(absOffset % 60, 2);\\n  return sign + hours + delimiter + minutes;\\n}\\n\\nvar formatters$1 = formatters;\\n\\nfunction dateLongFormatter(pattern, formatLong) {\\n  switch (pattern) {\\n    case 'P':\\n      return formatLong.date({\\n        width: 'short'\\n      });\\n\\n    case 'PP':\\n      return formatLong.date({\\n        width: 'medium'\\n      });\\n\\n    case 'PPP':\\n      return formatLong.date({\\n        width: 'long'\\n      });\\n\\n    case 'PPPP':\\n    default:\\n      return formatLong.date({\\n        width: 'full'\\n      });\\n  }\\n}\\n\\nfunction timeLongFormatter(pattern, formatLong) {\\n  switch (pattern) {\\n    case 'p':\\n      return formatLong.time({\\n        width: 'short'\\n      });\\n\\n    case 'pp':\\n      return formatLong.time({\\n        width: 'medium'\\n      });\\n\\n    case 'ppp':\\n      return formatLong.time({\\n        width: 'long'\\n      });\\n\\n    case 'pppp':\\n    default:\\n      return formatLong.time({\\n        width: 'full'\\n      });\\n  }\\n}\\n\\nfunction dateTimeLongFormatter(pattern, formatLong) {\\n  var matchResult = pattern.match(/(P+)(p+)?/);\\n  var datePattern = matchResult[1];\\n  var timePattern = matchResult[2];\\n\\n  if (!timePattern) {\\n    return dateLongFormatter(pattern, formatLong);\\n  }\\n\\n  var dateTimeFormat;\\n\\n  switch (datePattern) {\\n    case 'P':\\n      dateTimeFormat = formatLong.dateTime({\\n        width: 'short'\\n      });\\n      break;\\n\\n    case 'PP':\\n      dateTimeFormat = formatLong.dateTime({\\n        width: 'medium'\\n      });\\n      break;\\n\\n    case 'PPP':\\n      dateTimeFormat = formatLong.dateTime({\\n        width: 'long'\\n      });\\n      break;\\n\\n    case 'PPPP':\\n    default:\\n      dateTimeFormat = formatLong.dateTime({\\n        width: 'full'\\n      });\\n      break;\\n  }\\n\\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\\n}\\n\\nvar longFormatters = {\\n  p: timeLongFormatter,\\n  P: dateTimeLongFormatter\\n};\\nvar longFormatters$1 = longFormatters;\\n\\nvar protectedDayOfYearTokens = ['D', 'DD'];\\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\\nfunction isProtectedDayOfYearToken(token) {\\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\\n}\\nfunction isProtectedWeekYearToken(token) {\\n  return protectedWeekYearTokens.indexOf(token) !== -1;\\n}\\nfunction throwProtectedError(token, format, input) {\\n  if (token === 'YYYY') {\\n    throw new RangeError(\\\"Use `yyyy` instead of `YYYY` (in `\\\".concat(format, \\\"`) for formatting years to the input `\\\").concat(input, \\\"`; see: https://git.io/fxCyr\\\"));\\n  } else if (token === 'YY') {\\n    throw new RangeError(\\\"Use `yy` instead of `YY` (in `\\\".concat(format, \\\"`) for formatting years to the input `\\\").concat(input, \\\"`; see: https://git.io/fxCyr\\\"));\\n  } else if (token === 'D') {\\n    throw new RangeError(\\\"Use `d` instead of `D` (in `\\\".concat(format, \\\"`) for formatting days of the month to the input `\\\").concat(input, \\\"`; see: https://git.io/fxCyr\\\"));\\n  } else if (token === 'DD') {\\n    throw new RangeError(\\\"Use `dd` instead of `DD` (in `\\\".concat(format, \\\"`) for formatting days of the month to the input `\\\").concat(input, \\\"`; see: https://git.io/fxCyr\\\"));\\n  }\\n}\\n\\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\\n//   (one of the certain letters followed by `o`)\\n// - (\\\\w)\\\\1* matches any sequences of the same letter\\n// - '' matches two quote characters in a row\\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\\n//   except a single quote symbol, which ends the sequence.\\n//   Two quote characters do not end the sequence.\\n//   If there is no matching single quote\\n//   then the sequence will continue until the end of the string.\\n// - . matches any single character unmatched by previous parts of the RegExps\\n\\nvar formattingTokensRegExp$1 = /[yYQqMLwIdDecihHKkms]o|(\\\\w)\\\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\\n\\nvar longFormattingTokensRegExp$1 = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\\nvar escapedStringRegExp$1 = /^'([^]*?)'?$/;\\nvar doubleQuoteRegExp$1 = /''/g;\\nvar unescapedLatinCharacterRegExp$1 = /[a-zA-Z]/;\\n/**\\n * @name format\\n * @category Common Helpers\\n * @summary Format the date.\\n *\\n * @description\\n * Return the formatted date string in the given format. The result may vary by locale.\\n *\\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\\n * > See: https://git.io/fxCyr\\n *\\n * The characters wrapped between two single quotes characters (') are escaped.\\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\\n * (see the last example)\\n *\\n * Format of the string is based on Unicode Technical Standard #35:\\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\\n * with a few additions (see note 7 below the table).\\n *\\n * Accepted patterns:\\n * | Unit                            | Pattern | Result examples                   | Notes |\\n * |---------------------------------|---------|-----------------------------------|-------|\\n * | Era                             | G..GGG  | AD, BC                            |       |\\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\\n * |                                 | GGGGG   | A, B                              |       |\\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\\n * |                                 | yyyyy   | ...                               | 3,5   |\\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\\n * |                                 | YYYYY   | ...                               | 3,5   |\\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\\n * |                                 | RRRRR   | ...                               | 3,5,7 |\\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\\n * |                                 | uuuuu   | ...                               | 3,5   |\\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\\n * |                                 | qq      | 01, 02, 03, 04                    |       |\\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\\n * |                                 | MM      | 01, 02, ..., 12                   |       |\\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\\n * |                                 | MMMM    | January, February, ..., December  | 2     |\\n * |                                 | MMMMM   | J, F, ..., D                      |       |\\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\\n * |                                 | LL      | 01, 02, ..., 12                   |       |\\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\\n * |                                 | LLLL    | January, February, ..., December  | 2     |\\n * |                                 | LLLLL   | J, F, ..., D                      |       |\\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\\n * |                                 | ww      | 01, 02, ..., 53                   |       |\\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\\n * |                                 | dd      | 01, 02, ..., 31                   |       |\\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\\n * |                                 | DDDD    | ...                               | 3     |\\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\\n * |                                 | ee      | 02, 03, ..., 01                   |       |\\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\\n * |                                 | cc      | 02, 03, ..., 01                   |       |\\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\\n * | AM, PM                          | a..aa   | AM, PM                            |       |\\n * |                                 | aaa     | am, pm                            |       |\\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\\n * |                                 | aaaaa   | a, p                              |       |\\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\\n * |                                 | bbb     | am, pm, noon, midnight            |       |\\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\\n * |                                 | bbbbb   | a, p, n, mi                       |       |\\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\\n * |                                 | mm      | 00, 01, ..., 59                   |       |\\n * | Second                          | s       | 0, 1, ..., 59                     |       |\\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\\n * |                                 | ss      | 00, 01, ..., 59                   |       |\\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\\n * |                                 | SS      | 00, 01, ..., 99                   |       |\\n * |                                 | SSS     | 000, 001, ..., 999                |       |\\n * |                                 | SSSS    | ...                               | 3     |\\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\\n * |                                 | XX      | -0800, +0530, Z                   |       |\\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\\n * |                                 | xx      | -0800, +0530, +0000               |       |\\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\\n * | Seconds timestamp               | t       | 512969520                         | 7     |\\n * |                                 | tt      | ...                               | 3,7   |\\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\\n * |                                 | TT      | ...                               | 3,7   |\\n * | Long localized date             | P       | 04/29/1453                        | 7     |\\n * |                                 | PP      | Apr 29, 1453                      | 7     |\\n * |                                 | PPP     | April 29th, 1453                  | 7     |\\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\\n * | Long localized time             | p       | 12:00 AM                          | 7     |\\n * |                                 | pp      | 12:00:00 AM                       | 7     |\\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\\n * Notes:\\n * 1. \\\"Formatting\\\" units (e.g. formatting quarter) in the default en-US locale\\n *    are the same as \\\"stand-alone\\\" units, but are different in some languages.\\n *    \\\"Formatting\\\" units are declined according to the rules of the language\\n *    in the context of a date. \\\"Stand-alone\\\" units are always nominative singular:\\n *\\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\\n *\\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\\n *\\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\\n *    the single quote characters (see below).\\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\\n *    the output will be the same as default pattern for this unit, usually\\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\\n *    are marked with \\\"2\\\" in the last column of the table.\\n *\\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\\n *\\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\\n *\\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\\n *\\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\\n *\\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\\n *\\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\\n *    The output will be padded with zeros to match the length of the pattern.\\n *\\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\\n *\\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\\n *    These tokens represent the shortest form of the quarter.\\n *\\n * 5. The main difference between `y` and `u` patterns are B.C. years:\\n *\\n *    | Year | `y` | `u` |\\n *    |------|-----|-----|\\n *    | AC 1 |   1 |   1 |\\n *    | BC 1 |   1 |   0 |\\n *    | BC 2 |   2 |  -1 |\\n *\\n *    Also `yy` always returns the last two digits of a year,\\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\\n *\\n *    | Year | `yy` | `uu` |\\n *    |------|------|------|\\n *    | 1    |   01 |   01 |\\n *    | 14   |   14 |   14 |\\n *    | 376  |   76 |  376 |\\n *    | 1453 |   53 | 1453 |\\n *\\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\\n *    except local week-numbering years are dependent on `options.weekStartsOn`\\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\\n *\\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\\n *    so right now these tokens fall back to GMT timezones.\\n *\\n * 7. These patterns are not in the Unicode Technical Standard #35:\\n *    - `i`: ISO day of week\\n *    - `I`: ISO week of year\\n *    - `R`: ISO week-numbering year\\n *    - `t`: seconds timestamp\\n *    - `T`: milliseconds timestamp\\n *    - `o`: ordinal number modifier\\n *    - `P`: long localized date\\n *    - `p`: long localized time\\n *\\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\\n *\\n * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\\n *\\n * ### v2.0.0 breaking changes:\\n *\\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\\n *\\n * - The second argument is now required for the sake of explicitness.\\n *\\n *   ```javascript\\n *   // Before v2.0.0\\n *   format(new Date(2016, 0, 1))\\n *\\n *   // v2.0.0 onward\\n *   format(new Date(2016, 0, 1), \\\"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\\\")\\n *   ```\\n *\\n * - New format string API for `format` function\\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\\n *\\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\\n *\\n * @param {Date|Number} date - the original date\\n * @param {String} format - the string of tokens\\n * @param {Object} [options] - an object with options.\\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\\n *   see: https://git.io/fxCyr\\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\\n *   see: https://git.io/fxCyr\\n * @returns {String} the formatted date string\\n * @throws {TypeError} 2 arguments required\\n * @throws {RangeError} `date` must not be Invalid Date\\n * @throws {RangeError} `options.locale` must contain `localize` property\\n * @throws {RangeError} `options.locale` must contain `formatLong` property\\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\\n * @throws {RangeError} format string contains an unescaped latin alphabet character\\n *\\n * @example\\n * // Represent 11 February 2014 in middle-endian format:\\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\\n * //=> '02/11/2014'\\n *\\n * @example\\n * // Represent 2 July 2014 in Esperanto:\\n * import { eoLocale } from 'date-fns/locale/eo'\\n * var result = format(new Date(2014, 6, 2), \\\"do 'de' MMMM yyyy\\\", {\\n *   locale: eoLocale\\n * })\\n * //=> '2-a de julio 2014'\\n *\\n * @example\\n * // Escape string by single quote characters:\\n * var result = format(new Date(2014, 6, 2, 15), \\\"h 'o''clock'\\\")\\n * //=> \\\"3 o'clock\\\"\\n */\\n\\nfunction format(dirtyDate, dirtyFormatStr, dirtyOptions) {\\n  requiredArgs(2, arguments);\\n  var formatStr = String(dirtyFormatStr);\\n  var options = dirtyOptions || {};\\n  var locale = options.locale || defaultLocale;\\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\\n\\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\\n  }\\n\\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\\n\\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\\n  }\\n\\n  if (!locale.localize) {\\n    throw new RangeError('locale must contain localize property');\\n  }\\n\\n  if (!locale.formatLong) {\\n    throw new RangeError('locale must contain formatLong property');\\n  }\\n\\n  var originalDate = toDate(dirtyDate);\\n\\n  if (!isValid(originalDate)) {\\n    throw new RangeError('Invalid time value');\\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\\n\\n\\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\\n  var formatterOptions = {\\n    firstWeekContainsDate: firstWeekContainsDate,\\n    weekStartsOn: weekStartsOn,\\n    locale: locale,\\n    _originalDate: originalDate\\n  };\\n  var result = formatStr.match(longFormattingTokensRegExp$1).map(function (substring) {\\n    var firstCharacter = substring[0];\\n\\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\\n      var longFormatter = longFormatters$1[firstCharacter];\\n      return longFormatter(substring, locale.formatLong, formatterOptions);\\n    }\\n\\n    return substring;\\n  }).join('').match(formattingTokensRegExp$1).map(function (substring) {\\n    // Replace two single quote characters with one single quote character\\n    if (substring === \\\"''\\\") {\\n      return \\\"'\\\";\\n    }\\n\\n    var firstCharacter = substring[0];\\n\\n    if (firstCharacter === \\\"'\\\") {\\n      return cleanEscapedString$1(substring);\\n    }\\n\\n    var formatter = formatters$1[firstCharacter];\\n\\n    if (formatter) {\\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\\n      }\\n\\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\\n      }\\n\\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\\n    }\\n\\n    if (firstCharacter.match(unescapedLatinCharacterRegExp$1)) {\\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\\n    }\\n\\n    return substring;\\n  }).join('');\\n  return result;\\n}\\n\\nfunction cleanEscapedString$1(input) {\\n  return input.match(escapedStringRegExp$1)[1].replace(doubleQuoteRegExp$1, \\\"'\\\");\\n}\\n\\nfunction assign(target, dirtyObject) {\\n  if (target == null) {\\n    throw new TypeError('assign requires that input parameter not be null or undefined');\\n  }\\n\\n  dirtyObject = dirtyObject || {};\\n\\n  for (var property in dirtyObject) {\\n    if (Object.prototype.hasOwnProperty.call(dirtyObject, property)) {\\n      target[property] = dirtyObject[property];\\n    }\\n  }\\n\\n  return target;\\n}\\n\\n// See issue: https://github.com/date-fns/date-fns/issues/376\\n\\nfunction setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {\\n  requiredArgs(2, arguments);\\n  var options = dirtyOptions || {};\\n  var locale = options.locale;\\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\\n\\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\\n  }\\n\\n  var date = toDate(dirtyDate);\\n  var day = toInteger(dirtyDay);\\n  var currentDay = date.getUTCDay();\\n  var remainder = day % 7;\\n  var dayIndex = (remainder + 7) % 7;\\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\\n  date.setUTCDate(date.getUTCDate() + diff);\\n  return date;\\n}\\n\\n// See issue: https://github.com/date-fns/date-fns/issues/376\\n\\nfunction setUTCISODay(dirtyDate, dirtyDay) {\\n  requiredArgs(2, arguments);\\n  var day = toInteger(dirtyDay);\\n\\n  if (day % 7 === 0) {\\n    day = day - 7;\\n  }\\n\\n  var weekStartsOn = 1;\\n  var date = toDate(dirtyDate);\\n  var currentDay = date.getUTCDay();\\n  var remainder = day % 7;\\n  var dayIndex = (remainder + 7) % 7;\\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\\n  date.setUTCDate(date.getUTCDate() + diff);\\n  return date;\\n}\\n\\n// See issue: https://github.com/date-fns/date-fns/issues/376\\n\\nfunction setUTCISOWeek(dirtyDate, dirtyISOWeek) {\\n  requiredArgs(2, arguments);\\n  var date = toDate(dirtyDate);\\n  var isoWeek = toInteger(dirtyISOWeek);\\n  var diff = getUTCISOWeek(date) - isoWeek;\\n  date.setUTCDate(date.getUTCDate() - diff * 7);\\n  return date;\\n}\\n\\n// See issue: https://github.com/date-fns/date-fns/issues/376\\n\\nfunction setUTCWeek(dirtyDate, dirtyWeek, options) {\\n  requiredArgs(2, arguments);\\n  var date = toDate(dirtyDate);\\n  var week = toInteger(dirtyWeek);\\n  var diff = getUTCWeek(date, options) - week;\\n  date.setUTCDate(date.getUTCDate() - diff * 7);\\n  return date;\\n}\\n\\nvar MILLISECONDS_IN_HOUR = 3600000;\\nvar MILLISECONDS_IN_MINUTE = 60000;\\nvar MILLISECONDS_IN_SECOND = 1000;\\nvar numericPatterns = {\\n  month: /^(1[0-2]|0?\\\\d)/,\\n  // 0 to 12\\n  date: /^(3[0-1]|[0-2]?\\\\d)/,\\n  // 0 to 31\\n  dayOfYear: /^(36[0-6]|3[0-5]\\\\d|[0-2]?\\\\d?\\\\d)/,\\n  // 0 to 366\\n  week: /^(5[0-3]|[0-4]?\\\\d)/,\\n  // 0 to 53\\n  hour23h: /^(2[0-3]|[0-1]?\\\\d)/,\\n  // 0 to 23\\n  hour24h: /^(2[0-4]|[0-1]?\\\\d)/,\\n  // 0 to 24\\n  hour11h: /^(1[0-1]|0?\\\\d)/,\\n  // 0 to 11\\n  hour12h: /^(1[0-2]|0?\\\\d)/,\\n  // 0 to 12\\n  minute: /^[0-5]?\\\\d/,\\n  // 0 to 59\\n  second: /^[0-5]?\\\\d/,\\n  // 0 to 59\\n  singleDigit: /^\\\\d/,\\n  // 0 to 9\\n  twoDigits: /^\\\\d{1,2}/,\\n  // 0 to 99\\n  threeDigits: /^\\\\d{1,3}/,\\n  // 0 to 999\\n  fourDigits: /^\\\\d{1,4}/,\\n  // 0 to 9999\\n  anyDigitsSigned: /^-?\\\\d+/,\\n  singleDigitSigned: /^-?\\\\d/,\\n  // 0 to 9, -0 to -9\\n  twoDigitsSigned: /^-?\\\\d{1,2}/,\\n  // 0 to 99, -0 to -99\\n  threeDigitsSigned: /^-?\\\\d{1,3}/,\\n  // 0 to 999, -0 to -999\\n  fourDigitsSigned: /^-?\\\\d{1,4}/ // 0 to 9999, -0 to -9999\\n\\n};\\nvar timezonePatterns = {\\n  basicOptionalMinutes: /^([+-])(\\\\d{2})(\\\\d{2})?|Z/,\\n  basic: /^([+-])(\\\\d{2})(\\\\d{2})|Z/,\\n  basicOptionalSeconds: /^([+-])(\\\\d{2})(\\\\d{2})((\\\\d{2}))?|Z/,\\n  extended: /^([+-])(\\\\d{2}):(\\\\d{2})|Z/,\\n  extendedOptionalSeconds: /^([+-])(\\\\d{2}):(\\\\d{2})(:(\\\\d{2}))?|Z/\\n};\\n\\nfunction parseNumericPattern(pattern, string, valueCallback) {\\n  var matchResult = string.match(pattern);\\n\\n  if (!matchResult) {\\n    return null;\\n  }\\n\\n  var value = parseInt(matchResult[0], 10);\\n  return {\\n    value: valueCallback ? valueCallback(value) : value,\\n    rest: string.slice(matchResult[0].length)\\n  };\\n}\\n\\nfunction parseTimezonePattern(pattern, string) {\\n  var matchResult = string.match(pattern);\\n\\n  if (!matchResult) {\\n    return null;\\n  } // Input is 'Z'\\n\\n\\n  if (matchResult[0] === 'Z') {\\n    return {\\n      value: 0,\\n      rest: string.slice(1)\\n    };\\n  }\\n\\n  var sign = matchResult[1] === '+' ? 1 : -1;\\n  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\\n  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\\n  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\\n  return {\\n    value: sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * MILLISECONDS_IN_SECOND),\\n    rest: string.slice(matchResult[0].length)\\n  };\\n}\\n\\nfunction parseAnyDigitsSigned(string, valueCallback) {\\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);\\n}\\n\\nfunction parseNDigits(n, string, valueCallback) {\\n  switch (n) {\\n    case 1:\\n      return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);\\n\\n    case 2:\\n      return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);\\n\\n    case 3:\\n      return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);\\n\\n    case 4:\\n      return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);\\n\\n    default:\\n      return parseNumericPattern(new RegExp('^\\\\\\\\d{1,' + n + '}'), string, valueCallback);\\n  }\\n}\\n\\nfunction parseNDigitsSigned(n, string, valueCallback) {\\n  switch (n) {\\n    case 1:\\n      return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);\\n\\n    case 2:\\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);\\n\\n    case 3:\\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);\\n\\n    case 4:\\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);\\n\\n    default:\\n      return parseNumericPattern(new RegExp('^-?\\\\\\\\d{1,' + n + '}'), string, valueCallback);\\n  }\\n}\\n\\nfunction dayPeriodEnumToHours(enumValue) {\\n  switch (enumValue) {\\n    case 'morning':\\n      return 4;\\n\\n    case 'evening':\\n      return 17;\\n\\n    case 'pm':\\n    case 'noon':\\n    case 'afternoon':\\n      return 12;\\n\\n    case 'am':\\n    case 'midnight':\\n    case 'night':\\n    default:\\n      return 0;\\n  }\\n}\\n\\nfunction normalizeTwoDigitYear(twoDigitYear, currentYear) {\\n  var isCommonEra = currentYear > 0; // Absolute number of the current year:\\n  // 1 -> 1 AC\\n  // 0 -> 1 BC\\n  // -1 -> 2 BC\\n\\n  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\\n  var result;\\n\\n  if (absCurrentYear <= 50) {\\n    result = twoDigitYear || 100;\\n  } else {\\n    var rangeEnd = absCurrentYear + 50;\\n    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\\n    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;\\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\\n  }\\n\\n  return isCommonEra ? result : 1 - result;\\n}\\n\\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\\nvar DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // User for validation\\n\\nfunction isLeapYearIndex(year) {\\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\\n}\\n/*\\n * |     | Unit                           |     | Unit                           |\\n * |-----|--------------------------------|-----|--------------------------------|\\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\\n * |  d  | Day of month                   |  D  | Day of year                    |\\n * |  e  | Local day of week              |  E  | Day of week                    |\\n * |  f  |                                |  F* | Day of week in month           |\\n * |  g* | Modified Julian day            |  G  | Era                            |\\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\\n * |  i! | ISO day of week                |  I! | ISO week of year               |\\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\\n * |  m  | Minute                         |  M  | Month                          |\\n * |  n  |                                |  N  |                                |\\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\\n * |  p  |                                |  P  |                                |\\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\\n * |  s  | Second                         |  S  | Fraction of second             |\\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\\n * |  u  | Extended year                  |  U* | Cyclic year                    |\\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\\n * |  w  | Local week of year             |  W* | Week of month                  |\\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\\n *\\n * Letters marked by * are not implemented but reserved by Unicode standard.\\n *\\n * Letters marked by ! are non-standard, but implemented by date-fns:\\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\\n *   i.e. 7 for Sunday, 1 for Monday, etc.\\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\\n *   `R` is supposed to be used in conjunction with `I` and `i`\\n *   for universal ISO week-numbering date, whereas\\n *   `Y` is supposed to be used in conjunction with `w` and `e`\\n *   for week-numbering date specific to the locale.\\n */\\n\\n\\nvar parsers = {\\n  // Era\\n  G: {\\n    priority: 140,\\n    parse: function (string, token, match, _options) {\\n      switch (token) {\\n        // AD, BC\\n        case 'G':\\n        case 'GG':\\n        case 'GGG':\\n          return match.era(string, {\\n            width: 'abbreviated'\\n          }) || match.era(string, {\\n            width: 'narrow'\\n          });\\n        // A, B\\n\\n        case 'GGGGG':\\n          return match.era(string, {\\n            width: 'narrow'\\n          });\\n        // Anno Domini, Before Christ\\n\\n        case 'GGGG':\\n        default:\\n          return match.era(string, {\\n            width: 'wide'\\n          }) || match.era(string, {\\n            width: 'abbreviated'\\n          }) || match.era(string, {\\n            width: 'narrow'\\n          });\\n      }\\n    },\\n    set: function (date, flags, value, _options) {\\n      flags.era = value;\\n      date.setUTCFullYear(value, 0, 1);\\n      date.setUTCHours(0, 0, 0, 0);\\n      return date;\\n    },\\n    incompatibleTokens: ['R', 'u', 't', 'T']\\n  },\\n  // Year\\n  y: {\\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\\n    // |----------|-------|----|-------|-------|-------|\\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\\n    priority: 130,\\n    parse: function (string, token, match, _options) {\\n      var valueCallback = function (year) {\\n        return {\\n          year: year,\\n          isTwoDigitYear: token === 'yy'\\n        };\\n      };\\n\\n      switch (token) {\\n        case 'y':\\n          return parseNDigits(4, string, valueCallback);\\n\\n        case 'yo':\\n          return match.ordinalNumber(string, {\\n            unit: 'year',\\n            valueCallback: valueCallback\\n          });\\n\\n        default:\\n          return parseNDigits(token.length, string, valueCallback);\\n      }\\n    },\\n    validate: function (_date, value, _options) {\\n      return value.isTwoDigitYear || value.year > 0;\\n    },\\n    set: function (date, flags, value, _options) {\\n      var currentYear = date.getUTCFullYear();\\n\\n      if (value.isTwoDigitYear) {\\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\\n        date.setUTCHours(0, 0, 0, 0);\\n        return date;\\n      }\\n\\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\\n      date.setUTCFullYear(year, 0, 1);\\n      date.setUTCHours(0, 0, 0, 0);\\n      return date;\\n    },\\n    incompatibleTokens: ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']\\n  },\\n  // Local week-numbering year\\n  Y: {\\n    priority: 130,\\n    parse: function (string, token, match, _options) {\\n      var valueCallback = function (year) {\\n        return {\\n          year: year,\\n          isTwoDigitYear: token === 'YY'\\n        };\\n      };\\n\\n      switch (token) {\\n        case 'Y':\\n          return parseNDigits(4, string, valueCallback);\\n\\n        case 'Yo':\\n          return match.ordinalNumber(string, {\\n            unit: 'year',\\n            valueCallback: valueCallback\\n          });\\n\\n        default:\\n          return parseNDigits(token.length, string, valueCallback);\\n      }\\n    },\\n    validate: function (_date, value, _options) {\\n      return value.isTwoDigitYear || value.year > 0;\\n    },\\n    set: function (date, flags, value, options) {\\n      var currentYear = getUTCWeekYear(date, options);\\n\\n      if (value.isTwoDigitYear) {\\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\\n        date.setUTCHours(0, 0, 0, 0);\\n        return startOfUTCWeek(date, options);\\n      }\\n\\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\\n      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);\\n      date.setUTCHours(0, 0, 0, 0);\\n      return startOfUTCWeek(date, options);\\n    },\\n    incompatibleTokens: ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\\n  },\\n  // ISO week-numbering year\\n  R: {\\n    priority: 130,\\n    parse: function (string, token, _match, _options) {\\n      if (token === 'R') {\\n        return parseNDigitsSigned(4, string);\\n      }\\n\\n      return parseNDigitsSigned(token.length, string);\\n    },\\n    set: function (_date, _flags, value, _options) {\\n      var firstWeekOfYear = new Date(0);\\n      firstWeekOfYear.setUTCFullYear(value, 0, 4);\\n      firstWeekOfYear.setUTCHours(0, 0, 0, 0);\\n      return startOfUTCISOWeek(firstWeekOfYear);\\n    },\\n    incompatibleTokens: ['G', 'y', 'Y', 'u', 'Q', 'q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\\n  },\\n  // Extended year\\n  u: {\\n    priority: 130,\\n    parse: function (string, token, _match, _options) {\\n      if (token === 'u') {\\n        return parseNDigitsSigned(4, string);\\n      }\\n\\n      return parseNDigitsSigned(token.length, string);\\n    },\\n    set: function (date, _flags, value, _options) {\\n      date.setUTCFullYear(value, 0, 1);\\n      date.setUTCHours(0, 0, 0, 0);\\n      return date;\\n    },\\n    incompatibleTokens: ['G', 'y', 'Y', 'R', 'w', 'I', 'i', 'e', 'c', 't', 'T']\\n  },\\n  // Quarter\\n  Q: {\\n    priority: 120,\\n    parse: function (string, token, match, _options) {\\n      switch (token) {\\n        // 1, 2, 3, 4\\n        case 'Q':\\n        case 'QQ':\\n          // 01, 02, 03, 04\\n          return parseNDigits(token.length, string);\\n        // 1st, 2nd, 3rd, 4th\\n\\n        case 'Qo':\\n          return match.ordinalNumber(string, {\\n            unit: 'quarter'\\n          });\\n        // Q1, Q2, Q3, Q4\\n\\n        case 'QQQ':\\n          return match.quarter(string, {\\n            width: 'abbreviated',\\n            context: 'formatting'\\n          }) || match.quarter(string, {\\n            width: 'narrow',\\n            context: 'formatting'\\n          });\\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\\n\\n        case 'QQQQQ':\\n          return match.quarter(string, {\\n            width: 'narrow',\\n            context: 'formatting'\\n          });\\n        // 1st quarter, 2nd quarter, ...\\n\\n        case 'QQQQ':\\n        default:\\n          return match.quarter(string, {\\n            width: 'wide',\\n            context: 'formatting'\\n          }) || match.quarter(string, {\\n            width: 'abbreviated',\\n            context: 'formatting'\\n          }) || match.quarter(string, {\\n            width: 'narrow',\\n            context: 'formatting'\\n          });\\n      }\\n    },\\n    validate: function (_date, value, _options) {\\n      return value >= 1 && value <= 4;\\n    },\\n    set: function (date, _flags, value, _options) {\\n      date.setUTCMonth((value - 1) * 3, 1);\\n      date.setUTCHours(0, 0, 0, 0);\\n      return date;\\n    },\\n    incompatibleTokens: ['Y', 'R', 'q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\\n  },\\n  // Stand-alone quarter\\n  q: {\\n    priority: 120,\\n    parse: function (string, token, match, _options) {\\n      switch (token) {\\n        // 1, 2, 3, 4\\n        case 'q':\\n        case 'qq':\\n          // 01, 02, 03, 04\\n          return parseNDigits(token.length, string);\\n        // 1st, 2nd, 3rd, 4th\\n\\n        case 'qo':\\n          return match.ordinalNumber(string, {\\n            unit: 'quarter'\\n          });\\n        // Q1, Q2, Q3, Q4\\n\\n        case 'qqq':\\n          return match.quarter(string, {\\n            width: 'abbreviated',\\n            context: 'standalone'\\n          }) || match.quarter(string, {\\n            width: 'narrow',\\n            context: 'standalone'\\n          });\\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\\n\\n        case 'qqqqq':\\n          return match.quarter(string, {\\n            width: 'narrow',\\n            context: 'standalone'\\n          });\\n        // 1st quarter, 2nd quarter, ...\\n\\n        case 'qqqq':\\n        default:\\n          return match.quarter(string, {\\n            width: 'wide',\\n            context: 'standalone'\\n          }) || match.quarter(string, {\\n            width: 'abbreviated',\\n            context: 'standalone'\\n          }) || match.quarter(string, {\\n            width: 'narrow',\\n            context: 'standalone'\\n          });\\n      }\\n    },\\n    validate: function (_date, value, _options) {\\n      return value >= 1 && value <= 4;\\n    },\\n    set: function (date, _flags, value, _options) {\\n      date.setUTCMonth((value - 1) * 3, 1);\\n      date.setUTCHours(0, 0, 0, 0);\\n      return date;\\n    },\\n    incompatibleTokens: ['Y', 'R', 'Q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\\n  },\\n  // Month\\n  M: {\\n    priority: 110,\\n    parse: function (string, token, match, _options) {\\n      var valueCallback = function (value) {\\n        return value - 1;\\n      };\\n\\n      switch (token) {\\n        // 1, 2, ..., 12\\n        case 'M':\\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\\n        // 01, 02, ..., 12\\n\\n        case 'MM':\\n          return parseNDigits(2, string, valueCallback);\\n        // 1st, 2nd, ..., 12th\\n\\n        case 'Mo':\\n          return match.ordinalNumber(string, {\\n            unit: 'month',\\n            valueCallback: valueCallback\\n          });\\n        // Jan, Feb, ..., Dec\\n\\n        case 'MMM':\\n          return match.month(string, {\\n            width: 'abbreviated',\\n            context: 'formatting'\\n          }) || match.month(string, {\\n            width: 'narrow',\\n            context: 'formatting'\\n          });\\n        // J, F, ..., D\\n\\n        case 'MMMMM':\\n          return match.month(string, {\\n            width: 'narrow',\\n            context: 'formatting'\\n          });\\n        // January, February, ..., December\\n\\n        case 'MMMM':\\n        default:\\n          return match.month(string, {\\n            width: 'wide',\\n            context: 'formatting'\\n          }) || match.month(string, {\\n            width: 'abbreviated',\\n            context: 'formatting'\\n          }) || match.month(string, {\\n            width: 'narrow',\\n            context: 'formatting'\\n          });\\n      }\\n    },\\n    validate: function (_date, value, _options) {\\n      return value >= 0 && value <= 11;\\n    },\\n    set: function (date, _flags, value, _options) {\\n      date.setUTCMonth(value, 1);\\n      date.setUTCHours(0, 0, 0, 0);\\n      return date;\\n    },\\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'L', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\\n  },\\n  // Stand-alone month\\n  L: {\\n    priority: 110,\\n    parse: function (string, token, match, _options) {\\n      var valueCallback = function (value) {\\n        return value - 1;\\n      };\\n\\n      switch (token) {\\n        // 1, 2, ..., 12\\n        case 'L':\\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\\n        // 01, 02, ..., 12\\n\\n        case 'LL':\\n          return parseNDigits(2, string, valueCallback);\\n        // 1st, 2nd, ..., 12th\\n\\n        case 'Lo':\\n          return match.ordinalNumber(string, {\\n            unit: 'month',\\n            valueCallback: valueCallback\\n          });\\n        // Jan, Feb, ..., Dec\\n\\n        case 'LLL':\\n          return match.month(string, {\\n            width: 'abbreviated',\\n            context: 'standalone'\\n          }) || match.month(string, {\\n            width: 'narrow',\\n            context: 'standalone'\\n          });\\n        // J, F, ..., D\\n\\n        case 'LLLLL':\\n          return match.month(string, {\\n            width: 'narrow',\\n            context: 'standalone'\\n          });\\n        // January, February, ..., December\\n\\n        case 'LLLL':\\n        default:\\n          return match.month(string, {\\n            width: 'wide',\\n            context: 'standalone'\\n          }) || match.month(string, {\\n            width: 'abbreviated',\\n            context: 'standalone'\\n          }) || match.month(string, {\\n            width: 'narrow',\\n            context: 'standalone'\\n          });\\n      }\\n    },\\n    validate: function (_date, value, _options) {\\n      return value >= 0 && value <= 11;\\n    },\\n    set: function (date, _flags, value, _options) {\\n      date.setUTCMonth(value, 1);\\n      date.setUTCHours(0, 0, 0, 0);\\n      return date;\\n    },\\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\\n  },\\n  // Local week of year\\n  w: {\\n    priority: 100,\\n    parse: function (string, token, match, _options) {\\n      switch (token) {\\n        case 'w':\\n          return parseNumericPattern(numericPatterns.week, string);\\n\\n        case 'wo':\\n          return match.ordinalNumber(string, {\\n            unit: 'week'\\n          });\\n\\n        default:\\n          return parseNDigits(token.length, string);\\n      }\\n    },\\n    validate: function (_date, value, _options) {\\n      return value >= 1 && value <= 53;\\n    },\\n    set: function (date, _flags, value, options) {\\n      return startOfUTCWeek(setUTCWeek(date, value, options), options);\\n    },\\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\\n  },\\n  // ISO week of year\\n  I: {\\n    priority: 100,\\n    parse: function (string, token, match, _options) {\\n      switch (token) {\\n        case 'I':\\n          return parseNumericPattern(numericPatterns.week, string);\\n\\n        case 'Io':\\n          return match.ordinalNumber(string, {\\n            unit: 'week'\\n          });\\n\\n        default:\\n          return parseNDigits(token.length, string);\\n      }\\n    },\\n    validate: function (_date, value, _options) {\\n      return value >= 1 && value <= 53;\\n    },\\n    set: function (date, _flags, value, options) {\\n      return startOfUTCISOWeek(setUTCISOWeek(date, value, options), options);\\n    },\\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\\n  },\\n  // Day of the month\\n  d: {\\n    priority: 90,\\n    subPriority: 1,\\n    parse: function (string, token, match, _options) {\\n      switch (token) {\\n        case 'd':\\n          return parseNumericPattern(numericPatterns.date, string);\\n\\n        case 'do':\\n          return match.ordinalNumber(string, {\\n            unit: 'date'\\n          });\\n\\n        default:\\n          return parseNDigits(token.length, string);\\n      }\\n    },\\n    validate: function (date, value, _options) {\\n      var year = date.getUTCFullYear();\\n      var isLeapYear = isLeapYearIndex(year);\\n      var month = date.getUTCMonth();\\n\\n      if (isLeapYear) {\\n        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\\n      } else {\\n        return value >= 1 && value <= DAYS_IN_MONTH[month];\\n      }\\n    },\\n    set: function (date, _flags, value, _options) {\\n      date.setUTCDate(value);\\n      date.setUTCHours(0, 0, 0, 0);\\n      return date;\\n    },\\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\\n  },\\n  // Day of year\\n  D: {\\n    priority: 90,\\n    subPriority: 1,\\n    parse: function (string, token, match, _options) {\\n      switch (token) {\\n        case 'D':\\n        case 'DD':\\n          return parseNumericPattern(numericPatterns.dayOfYear, string);\\n\\n        case 'Do':\\n          return match.ordinalNumber(string, {\\n            unit: 'date'\\n          });\\n\\n        default:\\n          return parseNDigits(token.length, string);\\n      }\\n    },\\n    validate: function (date, value, _options) {\\n      var year = date.getUTCFullYear();\\n      var isLeapYear = isLeapYearIndex(year);\\n\\n      if (isLeapYear) {\\n        return value >= 1 && value <= 366;\\n      } else {\\n        return value >= 1 && value <= 365;\\n      }\\n    },\\n    set: function (date, _flags, value, _options) {\\n      date.setUTCMonth(0, value);\\n      date.setUTCHours(0, 0, 0, 0);\\n      return date;\\n    },\\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']\\n  },\\n  // Day of week\\n  E: {\\n    priority: 90,\\n    parse: function (string, token, match, _options) {\\n      switch (token) {\\n        // Tue\\n        case 'E':\\n        case 'EE':\\n        case 'EEE':\\n          return match.day(string, {\\n            width: 'abbreviated',\\n            context: 'formatting'\\n          }) || match.day(string, {\\n            width: 'short',\\n            context: 'formatting'\\n          }) || match.day(string, {\\n            width: 'narrow',\\n            context: 'formatting'\\n          });\\n        // T\\n\\n        case 'EEEEE':\\n          return match.day(string, {\\n            width: 'narrow',\\n            context: 'formatting'\\n          });\\n        // Tu\\n\\n        case 'EEEEEE':\\n          return match.day(string, {\\n            width: 'short',\\n            context: 'formatting'\\n          }) || match.day(string, {\\n            width: 'narrow',\\n            context: 'formatting'\\n          });\\n        // Tuesday\\n\\n        case 'EEEE':\\n        default:\\n          return match.day(string, {\\n            width: 'wide',\\n            context: 'formatting'\\n          }) || match.day(string, {\\n            width: 'abbreviated',\\n            context: 'formatting'\\n          }) || match.day(string, {\\n            width: 'short',\\n            context: 'formatting'\\n          }) || match.day(string, {\\n            width: 'narrow',\\n            context: 'formatting'\\n          });\\n      }\\n    },\\n    validate: function (_date, value, _options) {\\n      return value >= 0 && value <= 6;\\n    },\\n    set: function (date, _flags, value, options) {\\n      date = setUTCDay(date, value, options);\\n      date.setUTCHours(0, 0, 0, 0);\\n      return date;\\n    },\\n    incompatibleTokens: ['D', 'i', 'e', 'c', 't', 'T']\\n  },\\n  // Local day of week\\n  e: {\\n    priority: 90,\\n    parse: function (string, token, match, options) {\\n      var valueCallback = function (value) {\\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\\n      };\\n\\n      switch (token) {\\n        // 3\\n        case 'e':\\n        case 'ee':\\n          // 03\\n          return parseNDigits(token.length, string, valueCallback);\\n        // 3rd\\n\\n        case 'eo':\\n          return match.ordinalNumber(string, {\\n            unit: 'day',\\n            valueCallback: valueCallback\\n          });\\n        // Tue\\n\\n        case 'eee':\\n          return match.day(string, {\\n            width: 'abbreviated',\\n            context: 'formatting'\\n          }) || match.day(string, {\\n            width: 'short',\\n            context: 'formatting'\\n          }) || match.day(string, {\\n            width: 'narrow',\\n            context: 'formatting'\\n          });\\n        // T\\n\\n        case 'eeeee':\\n          return match.day(string, {\\n            width: 'narrow',\\n            context: 'formatting'\\n          });\\n        // Tu\\n\\n        case 'eeeeee':\\n          return match.day(string, {\\n            width: 'short',\\n            context: 'formatting'\\n          }) || match.day(string, {\\n            width: 'narrow',\\n            context: 'formatting'\\n          });\\n        // Tuesday\\n\\n        case 'eeee':\\n        default:\\n          return match.day(string, {\\n            width: 'wide',\\n            context: 'formatting'\\n          }) || match.day(string, {\\n            width: 'abbreviated',\\n            context: 'formatting'\\n          }) || match.day(string, {\\n            width: 'short',\\n            context: 'formatting'\\n          }) || match.day(string, {\\n            width: 'narrow',\\n            context: 'formatting'\\n          });\\n      }\\n    },\\n    validate: function (_date, value, _options) {\\n      return value >= 0 && value <= 6;\\n    },\\n    set: function (date, _flags, value, options) {\\n      date = setUTCDay(date, value, options);\\n      date.setUTCHours(0, 0, 0, 0);\\n      return date;\\n    },\\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'c', 't', 'T']\\n  },\\n  // Stand-alone local day of week\\n  c: {\\n    priority: 90,\\n    parse: function (string, token, match, options) {\\n      var valueCallback = function (value) {\\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\\n      };\\n\\n      switch (token) {\\n        // 3\\n        case 'c':\\n        case 'cc':\\n          // 03\\n          return parseNDigits(token.length, string, valueCallback);\\n        // 3rd\\n\\n        case 'co':\\n          return match.ordinalNumber(string, {\\n            unit: 'day',\\n            valueCallback: valueCallback\\n          });\\n        // Tue\\n\\n        case 'ccc':\\n          return match.day(string, {\\n            width: 'abbreviated',\\n            context: 'standalone'\\n          }) || match.day(string, {\\n            width: 'short',\\n            context: 'standalone'\\n          }) || match.day(string, {\\n            width: 'narrow',\\n            context: 'standalone'\\n          });\\n        // T\\n\\n        case 'ccccc':\\n          return match.day(string, {\\n            width: 'narrow',\\n            context: 'standalone'\\n          });\\n        // Tu\\n\\n        case 'cccccc':\\n          return match.day(string, {\\n            width: 'short',\\n            context: 'standalone'\\n          }) || match.day(string, {\\n            width: 'narrow',\\n            context: 'standalone'\\n          });\\n        // Tuesday\\n\\n        case 'cccc':\\n        default:\\n          return match.day(string, {\\n            width: 'wide',\\n            context: 'standalone'\\n          }) || match.day(string, {\\n            width: 'abbreviated',\\n            context: 'standalone'\\n          }) || match.day(string, {\\n            width: 'short',\\n            context: 'standalone'\\n          }) || match.day(string, {\\n            width: 'narrow',\\n            context: 'standalone'\\n          });\\n      }\\n    },\\n    validate: function (_date, value, _options) {\\n      return value >= 0 && value <= 6;\\n    },\\n    set: function (date, _flags, value, options) {\\n      date = setUTCDay(date, value, options);\\n      date.setUTCHours(0, 0, 0, 0);\\n      return date;\\n    },\\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'e', 't', 'T']\\n  },\\n  // ISO day of week\\n  i: {\\n    priority: 90,\\n    parse: function (string, token, match, _options) {\\n      var valueCallback = function (value) {\\n        if (value === 0) {\\n          return 7;\\n        }\\n\\n        return value;\\n      };\\n\\n      switch (token) {\\n        // 2\\n        case 'i':\\n        case 'ii':\\n          // 02\\n          return parseNDigits(token.length, string);\\n        // 2nd\\n\\n        case 'io':\\n          return match.ordinalNumber(string, {\\n            unit: 'day'\\n          });\\n        // Tue\\n\\n        case 'iii':\\n          return match.day(string, {\\n            width: 'abbreviated',\\n            context: 'formatting',\\n            valueCallback: valueCallback\\n          }) || match.day(string, {\\n            width: 'short',\\n            context: 'formatting',\\n            valueCallback: valueCallback\\n          }) || match.day(string, {\\n            width: 'narrow',\\n            context: 'formatting',\\n            valueCallback: valueCallback\\n          });\\n        // T\\n\\n        case 'iiiii':\\n          return match.day(string, {\\n            width: 'narrow',\\n            context: 'formatting',\\n            valueCallback: valueCallback\\n          });\\n        // Tu\\n\\n        case 'iiiiii':\\n          return match.day(string, {\\n            width: 'short',\\n            context: 'formatting',\\n            valueCallback: valueCallback\\n          }) || match.day(string, {\\n            width: 'narrow',\\n            context: 'formatting',\\n            valueCallback: valueCallback\\n          });\\n        // Tuesday\\n\\n        case 'iiii':\\n        default:\\n          return match.day(string, {\\n            width: 'wide',\\n            context: 'formatting',\\n            valueCallback: valueCallback\\n          }) || match.day(string, {\\n            width: 'abbreviated',\\n            context: 'formatting',\\n            valueCallback: valueCallback\\n          }) || match.day(string, {\\n            width: 'short',\\n            context: 'formatting',\\n            valueCallback: valueCallback\\n          }) || match.day(string, {\\n            width: 'narrow',\\n            context: 'formatting',\\n            valueCallback: valueCallback\\n          });\\n      }\\n    },\\n    validate: function (_date, value, _options) {\\n      return value >= 1 && value <= 7;\\n    },\\n    set: function (date, _flags, value, options) {\\n      date = setUTCISODay(date, value, options);\\n      date.setUTCHours(0, 0, 0, 0);\\n      return date;\\n    },\\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'E', 'e', 'c', 't', 'T']\\n  },\\n  // AM or PM\\n  a: {\\n    priority: 80,\\n    parse: function (string, token, match, _options) {\\n      switch (token) {\\n        case 'a':\\n        case 'aa':\\n        case 'aaa':\\n          return match.dayPeriod(string, {\\n            width: 'abbreviated',\\n            context: 'formatting'\\n          }) || match.dayPeriod(string, {\\n            width: 'narrow',\\n            context: 'formatting'\\n          });\\n\\n        case 'aaaaa':\\n          return match.dayPeriod(string, {\\n            width: 'narrow',\\n            context: 'formatting'\\n          });\\n\\n        case 'aaaa':\\n        default:\\n          return match.dayPeriod(string, {\\n            width: 'wide',\\n            context: 'formatting'\\n          }) || match.dayPeriod(string, {\\n            width: 'abbreviated',\\n            context: 'formatting'\\n          }) || match.dayPeriod(string, {\\n            width: 'narrow',\\n            context: 'formatting'\\n          });\\n      }\\n    },\\n    set: function (date, _flags, value, _options) {\\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\\n      return date;\\n    },\\n    incompatibleTokens: ['b', 'B', 'H', 'K', 'k', 't', 'T']\\n  },\\n  // AM, PM, midnight\\n  b: {\\n    priority: 80,\\n    parse: function (string, token, match, _options) {\\n      switch (token) {\\n        case 'b':\\n        case 'bb':\\n        case 'bbb':\\n          return match.dayPeriod(string, {\\n            width: 'abbreviated',\\n            context: 'formatting'\\n          }) || match.dayPeriod(string, {\\n            width: 'narrow',\\n            context: 'formatting'\\n          });\\n\\n        case 'bbbbb':\\n          return match.dayPeriod(string, {\\n            width: 'narrow',\\n            context: 'formatting'\\n          });\\n\\n        case 'bbbb':\\n        default:\\n          return match.dayPeriod(string, {\\n            width: 'wide',\\n            context: 'formatting'\\n          }) || match.dayPeriod(string, {\\n            width: 'abbreviated',\\n            context: 'formatting'\\n          }) || match.dayPeriod(string, {\\n            width: 'narrow',\\n            context: 'formatting'\\n          });\\n      }\\n    },\\n    set: function (date, _flags, value, _options) {\\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\\n      return date;\\n    },\\n    incompatibleTokens: ['a', 'B', 'H', 'K', 'k', 't', 'T']\\n  },\\n  // in the morning, in the afternoon, in the evening, at night\\n  B: {\\n    priority: 80,\\n    parse: function (string, token, match, _options) {\\n      switch (token) {\\n        case 'B':\\n        case 'BB':\\n        case 'BBB':\\n          return match.dayPeriod(string, {\\n            width: 'abbreviated',\\n            context: 'formatting'\\n          }) || match.dayPeriod(string, {\\n            width: 'narrow',\\n            context: 'formatting'\\n          });\\n\\n        case 'BBBBB':\\n          return match.dayPeriod(string, {\\n            width: 'narrow',\\n            context: 'formatting'\\n          });\\n\\n        case 'BBBB':\\n        default:\\n          return match.dayPeriod(string, {\\n            width: 'wide',\\n            context: 'formatting'\\n          }) || match.dayPeriod(string, {\\n            width: 'abbreviated',\\n            context: 'formatting'\\n          }) || match.dayPeriod(string, {\\n            width: 'narrow',\\n            context: 'formatting'\\n          });\\n      }\\n    },\\n    set: function (date, _flags, value, _options) {\\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\\n      return date;\\n    },\\n    incompatibleTokens: ['a', 'b', 't', 'T']\\n  },\\n  // Hour [1-12]\\n  h: {\\n    priority: 70,\\n    parse: function (string, token, match, _options) {\\n      switch (token) {\\n        case 'h':\\n          return parseNumericPattern(numericPatterns.hour12h, string);\\n\\n        case 'ho':\\n          return match.ordinalNumber(string, {\\n            unit: 'hour'\\n          });\\n\\n        default:\\n          return parseNDigits(token.length, string);\\n      }\\n    },\\n    validate: function (_date, value, _options) {\\n      return value >= 1 && value <= 12;\\n    },\\n    set: function (date, _flags, value, _options) {\\n      var isPM = date.getUTCHours() >= 12;\\n\\n      if (isPM && value < 12) {\\n        date.setUTCHours(value + 12, 0, 0, 0);\\n      } else if (!isPM && value === 12) {\\n        date.setUTCHours(0, 0, 0, 0);\\n      } else {\\n        date.setUTCHours(value, 0, 0, 0);\\n      }\\n\\n      return date;\\n    },\\n    incompatibleTokens: ['H', 'K', 'k', 't', 'T']\\n  },\\n  // Hour [0-23]\\n  H: {\\n    priority: 70,\\n    parse: function (string, token, match, _options) {\\n      switch (token) {\\n        case 'H':\\n          return parseNumericPattern(numericPatterns.hour23h, string);\\n\\n        case 'Ho':\\n          return match.ordinalNumber(string, {\\n            unit: 'hour'\\n          });\\n\\n        default:\\n          return parseNDigits(token.length, string);\\n      }\\n    },\\n    validate: function (_date, value, _options) {\\n      return value >= 0 && value <= 23;\\n    },\\n    set: function (date, _flags, value, _options) {\\n      date.setUTCHours(value, 0, 0, 0);\\n      return date;\\n    },\\n    incompatibleTokens: ['a', 'b', 'h', 'K', 'k', 't', 'T']\\n  },\\n  // Hour [0-11]\\n  K: {\\n    priority: 70,\\n    parse: function (string, token, match, _options) {\\n      switch (token) {\\n        case 'K':\\n          return parseNumericPattern(numericPatterns.hour11h, string);\\n\\n        case 'Ko':\\n          return match.ordinalNumber(string, {\\n            unit: 'hour'\\n          });\\n\\n        default:\\n          return parseNDigits(token.length, string);\\n      }\\n    },\\n    validate: function (_date, value, _options) {\\n      return value >= 0 && value <= 11;\\n    },\\n    set: function (date, _flags, value, _options) {\\n      var isPM = date.getUTCHours() >= 12;\\n\\n      if (isPM && value < 12) {\\n        date.setUTCHours(value + 12, 0, 0, 0);\\n      } else {\\n        date.setUTCHours(value, 0, 0, 0);\\n      }\\n\\n      return date;\\n    },\\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'k', 't', 'T']\\n  },\\n  // Hour [1-24]\\n  k: {\\n    priority: 70,\\n    parse: function (string, token, match, _options) {\\n      switch (token) {\\n        case 'k':\\n          return parseNumericPattern(numericPatterns.hour24h, string);\\n\\n        case 'ko':\\n          return match.ordinalNumber(string, {\\n            unit: 'hour'\\n          });\\n\\n        default:\\n          return parseNDigits(token.length, string);\\n      }\\n    },\\n    validate: function (_date, value, _options) {\\n      return value >= 1 && value <= 24;\\n    },\\n    set: function (date, _flags, value, _options) {\\n      var hours = value <= 24 ? value % 24 : value;\\n      date.setUTCHours(hours, 0, 0, 0);\\n      return date;\\n    },\\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'K', 't', 'T']\\n  },\\n  // Minute\\n  m: {\\n    priority: 60,\\n    parse: function (string, token, match, _options) {\\n      switch (token) {\\n        case 'm':\\n          return parseNumericPattern(numericPatterns.minute, string);\\n\\n        case 'mo':\\n          return match.ordinalNumber(string, {\\n            unit: 'minute'\\n          });\\n\\n        default:\\n          return parseNDigits(token.length, string);\\n      }\\n    },\\n    validate: function (_date, value, _options) {\\n      return value >= 0 && value <= 59;\\n    },\\n    set: function (date, _flags, value, _options) {\\n      date.setUTCMinutes(value, 0, 0);\\n      return date;\\n    },\\n    incompatibleTokens: ['t', 'T']\\n  },\\n  // Second\\n  s: {\\n    priority: 50,\\n    parse: function (string, token, match, _options) {\\n      switch (token) {\\n        case 's':\\n          return parseNumericPattern(numericPatterns.second, string);\\n\\n        case 'so':\\n          return match.ordinalNumber(string, {\\n            unit: 'second'\\n          });\\n\\n        default:\\n          return parseNDigits(token.length, string);\\n      }\\n    },\\n    validate: function (_date, value, _options) {\\n      return value >= 0 && value <= 59;\\n    },\\n    set: function (date, _flags, value, _options) {\\n      date.setUTCSeconds(value, 0);\\n      return date;\\n    },\\n    incompatibleTokens: ['t', 'T']\\n  },\\n  // Fraction of second\\n  S: {\\n    priority: 30,\\n    parse: function (string, token, _match, _options) {\\n      var valueCallback = function (value) {\\n        return Math.floor(value * Math.pow(10, -token.length + 3));\\n      };\\n\\n      return parseNDigits(token.length, string, valueCallback);\\n    },\\n    set: function (date, _flags, value, _options) {\\n      date.setUTCMilliseconds(value);\\n      return date;\\n    },\\n    incompatibleTokens: ['t', 'T']\\n  },\\n  // Timezone (ISO-8601. +00:00 is `'Z'`)\\n  X: {\\n    priority: 10,\\n    parse: function (string, token, _match, _options) {\\n      switch (token) {\\n        case 'X':\\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\\n\\n        case 'XX':\\n          return parseTimezonePattern(timezonePatterns.basic, string);\\n\\n        case 'XXXX':\\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\\n\\n        case 'XXXXX':\\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\\n\\n        case 'XXX':\\n        default:\\n          return parseTimezonePattern(timezonePatterns.extended, string);\\n      }\\n    },\\n    set: function (date, flags, value, _options) {\\n      if (flags.timestampIsSet) {\\n        return date;\\n      }\\n\\n      return new Date(date.getTime() - value);\\n    },\\n    incompatibleTokens: ['t', 'T', 'x']\\n  },\\n  // Timezone (ISO-8601)\\n  x: {\\n    priority: 10,\\n    parse: function (string, token, _match, _options) {\\n      switch (token) {\\n        case 'x':\\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\\n\\n        case 'xx':\\n          return parseTimezonePattern(timezonePatterns.basic, string);\\n\\n        case 'xxxx':\\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\\n\\n        case 'xxxxx':\\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\\n\\n        case 'xxx':\\n        default:\\n          return parseTimezonePattern(timezonePatterns.extended, string);\\n      }\\n    },\\n    set: function (date, flags, value, _options) {\\n      if (flags.timestampIsSet) {\\n        return date;\\n      }\\n\\n      return new Date(date.getTime() - value);\\n    },\\n    incompatibleTokens: ['t', 'T', 'X']\\n  },\\n  // Seconds timestamp\\n  t: {\\n    priority: 40,\\n    parse: function (string, _token, _match, _options) {\\n      return parseAnyDigitsSigned(string);\\n    },\\n    set: function (_date, _flags, value, _options) {\\n      return [new Date(value * 1000), {\\n        timestampIsSet: true\\n      }];\\n    },\\n    incompatibleTokens: '*'\\n  },\\n  // Milliseconds timestamp\\n  T: {\\n    priority: 20,\\n    parse: function (string, _token, _match, _options) {\\n      return parseAnyDigitsSigned(string);\\n    },\\n    set: function (_date, _flags, value, _options) {\\n      return [new Date(value), {\\n        timestampIsSet: true\\n      }];\\n    },\\n    incompatibleTokens: '*'\\n  }\\n};\\nvar parsers$1 = parsers;\\n\\nvar TIMEZONE_UNIT_PRIORITY = 10; // This RegExp consists of three parts separated by `|`:\\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\\n//   (one of the certain letters followed by `o`)\\n// - (\\\\w)\\\\1* matches any sequences of the same letter\\n// - '' matches two quote characters in a row\\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\\n//   except a single quote symbol, which ends the sequence.\\n//   Two quote characters do not end the sequence.\\n//   If there is no matching single quote\\n//   then the sequence will continue until the end of the string.\\n// - . matches any single character unmatched by previous parts of the RegExps\\n\\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\\\w)\\\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\\n\\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\\nvar escapedStringRegExp = /^'([^]*?)'?$/;\\nvar doubleQuoteRegExp = /''/g;\\nvar notWhitespaceRegExp = /\\\\S/;\\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\\n/**\\n * @name parse\\n * @category Common Helpers\\n * @summary Parse the date.\\n *\\n * @description\\n * Return the date parsed from string using the given format string.\\n *\\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\\n * > See: https://git.io/fxCyr\\n *\\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\\n *\\n * Format of the format string is based on Unicode Technical Standard #35:\\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\\n * with a few additions (see note 5 below the table).\\n *\\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\\n *\\n * ```javascript\\n * parse('23 AM', 'HH a', new Date())\\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\\n * ```\\n *\\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\\n *\\n * Accepted format string patterns:\\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\\n * |---------------------------------|-----|---------|-----------------------------------|-------|\\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\\n * |                                 |     | GGGGG   | A, B                              |       |\\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\\n * |                                 |     | yyyyy   | ...                               | 2,4   |\\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\\n * |                                 |     | YYYYY   | ...                               | 2,4   |\\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\\n * |                                 |     | uuuuu   | ...                               | 2,4   |\\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\\n * |                                 |     | DDDD    | ...                               | 2     |\\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |\\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 5     |\\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |\\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |\\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\\n * |                                 |     | aaaaa   | a, p                              |       |\\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\\n * |                                 |     | tt      | ...                               | 2     |\\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\\n * |                                 |     | SSS     | 000, 0001, ..., 999               |       |\\n * |                                 |     | SSSS    | ...                               | 2     |\\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\\n * |                                 |     | TT      | ...                               | 2     |\\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\\n * |                                 |     | PP      | May 29, 1453                      |       |\\n * |                                 |     | PPP     | May 29th, 1453                    |       |\\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\\n * |                                 |     | pp      | 12:00:00 AM                       |       |\\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\\n * Notes:\\n * 1. \\\"Formatting\\\" units (e.g. formatting quarter) in the default en-US locale\\n *    are the same as \\\"stand-alone\\\" units, but are different in some languages.\\n *    \\\"Formatting\\\" units are declined according to the rules of the language\\n *    in the context of a date. \\\"Stand-alone\\\" units are always nominative singular.\\n *    In `format` function, they will produce different result:\\n *\\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\\n *\\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\\n *\\n *    `parse` will try to match both formatting and stand-alone units interchangably.\\n *\\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\\n *    the single quote characters (see below).\\n *    If the sequence is longer than listed in table:\\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\\n *      as wide as the sequence\\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\\n *      These variations are marked with \\\"2\\\" in the last column of the table.\\n *\\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\\n *    These tokens represent the shortest form of the quarter.\\n *\\n * 4. The main difference between `y` and `u` patterns are B.C. years:\\n *\\n *    | Year | `y` | `u` |\\n *    |------|-----|-----|\\n *    | AC 1 |   1 |   1 |\\n *    | BC 1 |   1 |   0 |\\n *    | BC 2 |   2 |  -1 |\\n *\\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\\n *\\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\\n *\\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\\n *\\n *    while `uu` will just assign the year as is:\\n *\\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\\n *\\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\\n *\\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\\n *    except local week-numbering years are dependent on `options.weekStartsOn`\\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\\n *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\\n *\\n * 5. These patterns are not in the Unicode Technical Standard #35:\\n *    - `i`: ISO day of week\\n *    - `I`: ISO week of year\\n *    - `R`: ISO week-numbering year\\n *    - `o`: ordinal number modifier\\n *    - `P`: long localized date\\n *    - `p`: long localized time\\n *\\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\\n *\\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\\n *\\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\\n *    on the given locale.\\n *\\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\\n *    using `en-US` locale: `p` => `hh:mm a`\\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\\n *    using `pt-BR` locale: `p` => `HH:mm`\\n *\\n * Values will be assigned to the date in the descending order of its unit's priority.\\n * Units of an equal priority overwrite each other in the order of appearance.\\n *\\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\\n *\\n * `referenceDate` must be passed for correct work of the function.\\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\\n * In this case parsing will be done in the context of the current date.\\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\\n * then `Invalid Date` will be returned.\\n *\\n * The result may vary by locale.\\n *\\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\\n *\\n * If parsing failed, `Invalid Date` will be returned.\\n * Invalid Date is a Date, whose time value is NaN.\\n * Time value of Date: http://es5.github.io/#x15.9.1.1\\n *\\n * ### v2.0.0 breaking changes:\\n *\\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\\n *\\n * - Old `parse` was renamed to `toDate`.\\n *   Now `parse` is a new function which parses a string using a provided format.\\n *\\n *   ```javascript\\n *   // Before v2.0.0\\n *   parse('2016-01-01')\\n *\\n *   // v2.0.0 onward (toDate no longer accepts a string)\\n *   toDate(1392098430000) // Unix to timestamp\\n *   toDate(new Date(2014, 1, 11, 11, 30, 30)) // Cloning the date\\n *   parse('2016-01-01', 'yyyy-MM-dd', new Date())\\n *   ```\\n *\\n * @param {String} dateString - the string to parse\\n * @param {String} formatString - the string of tokens\\n * @param {Date|Number} referenceDate - defines values missing from the parsed dateString\\n * @param {Object} [options] - an object with options.\\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\\n *   see: https://git.io/fxCyr\\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\\n *   see: https://git.io/fxCyr\\n * @returns {Date} the parsed date\\n * @throws {TypeError} 3 arguments required\\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\\n * @throws {RangeError} `options.locale` must contain `match` property\\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\\n * @throws {RangeError} format string contains an unescaped latin alphabet character\\n *\\n * @example\\n * // Parse 11 February 2014 from middle-endian format:\\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\\n * //=> Tue Feb 11 2014 00:00:00\\n *\\n * @example\\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\\n * import eo from 'date-fns/locale/eo'\\n * var result = parse('28-a de februaro', \\\"do 'de' MMMM\\\", new Date(2010, 0, 1), {\\n *   locale: eo\\n * })\\n * //=> Sun Feb 28 2010 00:00:00\\n */\\n\\nfunction parse(dirtyDateString, dirtyFormatString, dirtyReferenceDate, dirtyOptions) {\\n  requiredArgs(3, arguments);\\n  var dateString = String(dirtyDateString);\\n  var formatString = String(dirtyFormatString);\\n  var options = dirtyOptions || {};\\n  var locale = options.locale || defaultLocale;\\n\\n  if (!locale.match) {\\n    throw new RangeError('locale must contain match property');\\n  }\\n\\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\\n\\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\\n  }\\n\\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\\n\\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\\n  }\\n\\n  if (formatString === '') {\\n    if (dateString === '') {\\n      return toDate(dirtyReferenceDate);\\n    } else {\\n      return new Date(NaN);\\n    }\\n  }\\n\\n  var subFnOptions = {\\n    firstWeekContainsDate: firstWeekContainsDate,\\n    weekStartsOn: weekStartsOn,\\n    locale: locale\\n  }; // If timezone isn't specified, it will be set to the system timezone\\n\\n  var setters = [{\\n    priority: TIMEZONE_UNIT_PRIORITY,\\n    subPriority: -1,\\n    set: dateToSystemTimezone,\\n    index: 0\\n  }];\\n  var i;\\n  var tokens = formatString.match(longFormattingTokensRegExp).map(function (substring) {\\n    var firstCharacter = substring[0];\\n\\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\\n      var longFormatter = longFormatters$1[firstCharacter];\\n      return longFormatter(substring, locale.formatLong, subFnOptions);\\n    }\\n\\n    return substring;\\n  }).join('').match(formattingTokensRegExp);\\n  var usedTokens = [];\\n\\n  for (i = 0; i < tokens.length; i++) {\\n    var token = tokens[i];\\n\\n    if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(token)) {\\n      throwProtectedError(token, formatString, dirtyDateString);\\n    }\\n\\n    if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(token)) {\\n      throwProtectedError(token, formatString, dirtyDateString);\\n    }\\n\\n    var firstCharacter = token[0];\\n    var parser = parsers$1[firstCharacter];\\n\\n    if (parser) {\\n      var incompatibleTokens = parser.incompatibleTokens;\\n\\n      if (Array.isArray(incompatibleTokens)) {\\n        var incompatibleToken = void 0;\\n\\n        for (var _i = 0; _i < usedTokens.length; _i++) {\\n          var usedToken = usedTokens[_i].token;\\n\\n          if (incompatibleTokens.indexOf(usedToken) !== -1 || usedToken === firstCharacter) {\\n            incompatibleToken = usedTokens[_i];\\n            break;\\n          }\\n        }\\n\\n        if (incompatibleToken) {\\n          throw new RangeError(\\\"The format string mustn't contain `\\\".concat(incompatibleToken.fullToken, \\\"` and `\\\").concat(token, \\\"` at the same time\\\"));\\n        }\\n      } else if (parser.incompatibleTokens === '*' && usedTokens.length) {\\n        throw new RangeError(\\\"The format string mustn't contain `\\\".concat(token, \\\"` and any other token at the same time\\\"));\\n      }\\n\\n      usedTokens.push({\\n        token: firstCharacter,\\n        fullToken: token\\n      });\\n      var parseResult = parser.parse(dateString, token, locale.match, subFnOptions);\\n\\n      if (!parseResult) {\\n        return new Date(NaN);\\n      }\\n\\n      setters.push({\\n        priority: parser.priority,\\n        subPriority: parser.subPriority || 0,\\n        set: parser.set,\\n        validate: parser.validate,\\n        value: parseResult.value,\\n        index: setters.length\\n      });\\n      dateString = parseResult.rest;\\n    } else {\\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\\n        throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\\n      } // Replace two single quote characters with one single quote character\\n\\n\\n      if (token === \\\"''\\\") {\\n        token = \\\"'\\\";\\n      } else if (firstCharacter === \\\"'\\\") {\\n        token = cleanEscapedString(token);\\n      } // Cut token from string, or, if string doesn't match the token, return Invalid Date\\n\\n\\n      if (dateString.indexOf(token) === 0) {\\n        dateString = dateString.slice(token.length);\\n      } else {\\n        return new Date(NaN);\\n      }\\n    }\\n  } // Check if the remaining input contains something other than whitespace\\n\\n\\n  if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {\\n    return new Date(NaN);\\n  }\\n\\n  var uniquePrioritySetters = setters.map(function (setter) {\\n    return setter.priority;\\n  }).sort(function (a, b) {\\n    return b - a;\\n  }).filter(function (priority, index, array) {\\n    return array.indexOf(priority) === index;\\n  }).map(function (priority) {\\n    return setters.filter(function (setter) {\\n      return setter.priority === priority;\\n    }).sort(function (a, b) {\\n      return b.subPriority - a.subPriority;\\n    });\\n  }).map(function (setterArray) {\\n    return setterArray[0];\\n  });\\n  var date = toDate(dirtyReferenceDate);\\n\\n  if (isNaN(date)) {\\n    return new Date(NaN);\\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/37\\n\\n\\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\\n  var flags = {};\\n\\n  for (i = 0; i < uniquePrioritySetters.length; i++) {\\n    var setter = uniquePrioritySetters[i];\\n\\n    if (setter.validate && !setter.validate(utcDate, setter.value, subFnOptions)) {\\n      return new Date(NaN);\\n    }\\n\\n    var result = setter.set(utcDate, flags, setter.value, subFnOptions); // Result is tuple (date, flags)\\n\\n    if (result[0]) {\\n      utcDate = result[0];\\n      assign(flags, result[1]); // Result is date\\n    } else {\\n      utcDate = result;\\n    }\\n  }\\n\\n  return utcDate;\\n}\\n\\nfunction dateToSystemTimezone(date, flags) {\\n  if (flags.timestampIsSet) {\\n    return date;\\n  }\\n\\n  var convertedDate = new Date(0);\\n  convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\\n  convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\\n  return convertedDate;\\n}\\n\\nfunction cleanEscapedString(input) {\\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \\\"'\\\");\\n}\\n\\nconst date = Object.assign({}, defaultType);\\n\\ndate.isRight = true;\\n\\n/**\\n * Compare the two dates and return 1 if the first date is after the second, -1 if the first date is before the second or 0 if dates are equal.\\n * @param {*} x Date 1\\n * @param {*} y Date 2\\n * @param {Object} column Additional parameters (e.g. dateInputFormat, dateOutputFormat)\\n * @returns \\n */\\ndate.compare = function (x, y, column) {\\n  function cook(d) {\\n    if (column && column.dateInputFormat) {\\n      return parse(`${d}`, `${column.dateInputFormat}`, new Date());\\n    } else if (typeof d === 'string') {\\n      try {\\n        return Date.parse(d);\\n      } catch(err) {\\n        return d;\\n      }\\n    }\\n    return d;\\n  }\\n  x = cook(x);\\n  y = cook(y);\\n  if (!isValid(x)) {\\n    return -1;\\n  }\\n  if (!isValid(y)) {\\n    return 1;\\n  }\\n  return compareAsc(x, y);\\n};\\n\\ndate.format = function (v, column) {\\n  if (v === undefined || v === null) return '';\\n  // convert to date\\n  const date = parse(v, column.dateInputFormat, new Date());\\n  if (isValid(date)) {\\n    return format(date, column.dateOutputFormat);\\n  }\\n  console.error(`Not a valid date: \\\"${v}\\\"`);\\n  return null;\\n};\\n\\nvar date$1 = /*#__PURE__*/Object.freeze({\\n  __proto__: null,\\n  'default': date\\n});\\n\\nconst number = Object.assign({}, defaultType);\\n\\nnumber.isRight = true;\\n\\nnumber.filterPredicate = function (rowval, filter) {\\n  return number.compare(rowval, filter) === 0;\\n};\\n\\n\\nnumber.compare = function (x, y) {\\n  function cook(d) {\\n    // if d is null or undefined we give it the smallest\\n    // possible value\\n    if (d === undefined || d === null) return -Infinity;\\n    return d.indexOf('.') >= 0 ? parseFloat(d) : parseInt(d, 10);\\n  }\\n\\n  x = typeof x === 'number' ? x : cook(x);\\n  y = typeof y === 'number' ? y : cook(y);\\n  if (x < y) return -1;\\n  if (x > y) return 1;\\n  return 0;\\n};\\n\\nvar number$1 = /*#__PURE__*/Object.freeze({\\n  __proto__: null,\\n  'default': number\\n});\\n\\nconst decimal = Object.assign({}, number);\\n\\ndecimal.format = function (v) {\\n  if (v === undefined || v === null) return '';\\n  return parseFloat(Math.round(v * 100) / 100).toFixed(2);\\n};\\n\\nvar decimal$1 = /*#__PURE__*/Object.freeze({\\n  __proto__: null,\\n  'default': decimal\\n});\\n\\nconst percentage = Object.assign({}, number);\\n\\npercentage.format = function (v) {\\n  if (v === undefined || v === null) return '';\\n  return `${parseFloat(v * 100).toFixed(2)}%`;\\n};\\n\\nvar percentage$1 = /*#__PURE__*/Object.freeze({\\n  __proto__: null,\\n  'default': percentage\\n});\\n\\nconst boolean = Object.assign({}, defaultType);\\n\\nboolean.isRight = true;\\n\\nboolean.filterPredicate = function (rowval, filter) {\\n  return boolean.compare(rowval, filter) === 0;\\n};\\n\\n\\nboolean.compare = function (x, y) {\\n  function cook(d) {\\n    if (typeof d === 'boolean') return d ? 1 : 0;\\n    if (typeof d === 'string') return d === 'true' ? 1 : 0;\\n    return -Infinity;\\n  }\\n\\n  x = cook(x);\\n  y = cook(y);\\n  if (x < y) return -1;\\n  if (x > y) return 1;\\n  return 0;\\n};\\n\\nvar boolean$1 = /*#__PURE__*/Object.freeze({\\n  __proto__: null,\\n  'default': boolean\\n});\\n\\nvar index$1 = {\\n  date: date$1,\\n  decimal: decimal$1,\\n  number: number$1,\\n  percentage: percentage$1,\\n  boolean: boolean$1,\\n};\\n\\nconst dataTypes = {};\\nconst coreDataTypes = index$1;\\nObject.keys(coreDataTypes).forEach((key) => {\\n  const compName = key.replace(/^\\\\.\\\\//, '').replace(/\\\\.js/, '');\\n  dataTypes[compName] = coreDataTypes[key].default;\\n});\\n\\nconst _sfc_main = {\\n  name: 'vue-good-table',\\n  props: {\\n    isLoading: { default: null, type: Boolean },\\n    maxHeight: { default: null, type: String },\\n    fixedHeader: Boolean ,\\n    theme: { default: '' },\\n    mode: { default: 'local' }, // could be remote\\n    totalRows: {}, // required if mode = 'remote'\\n    styleClass: { default: 'vgt-table bordered' },\\n    columns: {},\\n    rows: {},\\n    lineNumbers: Boolean,\\n    responsive: { default: true , type: Boolean },\\n    rtl: Boolean,\\n    rowStyleClass: { default: null, type: [Function, String] },\\n    compactMode: Boolean,\\n\\n    groupOptions: {\\n      default() {\\n        return {\\n          enabled: false,\\n          collapsable: false,\\n          rowKey: null\\n        };\\n      },\\n    },\\n\\n    selectOptions: {\\n      default() {\\n        return {\\n          enabled: false,\\n          selectionInfoClass: '',\\n          selectionText: 'rows selected',\\n          clearSelectionText: 'clear',\\n          disableSelectInfo: false,\\n          selectAllByGroup: false,\\n        };\\n      },\\n    },\\n\\n    // sort\\n    sortOptions: {\\n      default() {\\n        return {\\n          enabled: true,\\n          multipleColumns: true,\\n          initialSortBy: {},\\n        };\\n      },\\n    },\\n\\n    // pagination\\n    paginationOptions: {\\n      default() {\\n        return {\\n          enabled: false,\\n          position: 'bottom',\\n          perPage: 10,\\n          perPageDropdown: null,\\n          perPageDropdownEnabled: true,\\n          position: 'bottom',\\n          dropdownAllowAll: true,\\n          mode: 'records', // or pages\\n          infoFn: null,\\n        };\\n      },\\n    },\\n\\n    searchOptions: {\\n      default() {\\n        return {\\n          enabled: false,\\n          trigger: null,\\n          externalQuery: null,\\n          searchFn: null,\\n          placeholder: 'Search Table',\\n        };\\n      },\\n    },\\n  },\\n\\n\\n\\n  data: () => ({\\n    // loading state for remote mode\\n    tableLoading: false,\\n\\n    // text options\\n    nextText: 'Next',\\n    prevText: 'Previous',\\n    rowsPerPageText: 'Rows per page',\\n    ofText: 'of',\\n    allText: 'All',\\n    pageText: 'page',\\n\\n    // internal select options\\n    selectable: false,\\n    selectOnCheckboxOnly: false,\\n    selectAllByPage: true,\\n    disableSelectInfo: false,\\n    selectionInfoClass: '',\\n    selectionText: 'rows selected',\\n    clearSelectionText: 'clear',\\n\\n    // keys for rows that are currently expanded\\n    maintainExpanded: true,\\n    expandedRowKeys: new Set(),\\n\\n    // internal sort options\\n    sortable: true,\\n    defaultSortBy: null,\\n    multipleColumnSort: true,\\n\\n    // internal search options\\n    searchEnabled: false,\\n    searchTrigger: null,\\n    externalSearchQuery: null,\\n    searchFn: null,\\n    searchPlaceholder: 'Search Table',\\n    searchSkipDiacritics: false,\\n\\n    // internal pagination options\\n    perPage: null,\\n    paginate: false,\\n    paginateOnTop: false,\\n    paginateOnBottom: true,\\n    customRowsPerPageDropdown: [],\\n    paginateDropdownAllowAll: true,\\n    paginationMode: 'records',\\n    paginationInfoFn: null,\\n\\n    currentPage: 1,\\n    currentPerPage: 10,\\n    sorts: [],\\n    globalSearchTerm: '',\\n    filteredRows: [],\\n    columnFilters: {},\\n    forceSearch: false,\\n    sortChanged: false,\\n    dataTypes: dataTypes || {},\\n  }),\\n\\n  emits: [\\n    'select-all',\\n    'selected-rows-change',\\n    'search',\\n    'per-page-change',\\n    'page-change',\\n    'update:isLoading',\\n    'sort-change',\\n    'row-click',\\n    'row-dblclick',\\n    'row-aux-click',\\n    'cell-click',\\n    'row-mouseenter',\\n    'row-mouseleave',\\n    'column-filter',\\n  ],\\n\\n  watch: {\\n    rows: {\\n      handler() {\\n        this.$emit('update:isLoading', false);\\n        this.filterRows(this.columnFilters, false);\\n      },\\n      deep: true,\\n      immediate: true,\\n    },\\n\\n    selectOptions: {\\n      handler() {\\n        this.initializeSelect();\\n      },\\n      deep: true,\\n      immediate: true,\\n    },\\n\\n    paginationOptions: {\\n      handler(newValue, oldValue) {\\n        if (!isEqual(newValue, oldValue)) {\\n          this.initializePagination();\\n        }\\n      },\\n      deep: true,\\n      immediate: true,\\n    },\\n\\n    searchOptions: {\\n      handler() {\\n        if (\\n          this.searchOptions.externalQuery !== undefined &&\\n          this.searchOptions.externalQuery !== this.searchTerm\\n        ) {\\n          //* we need to set searchTerm to externalQuery first.\\n          this.externalSearchQuery = this.searchOptions.externalQuery;\\n          this.handleSearch();\\n        }\\n        this.initializeSearch();\\n      },\\n      deep: true,\\n      immediate: true,\\n    },\\n\\n    sortOptions: {\\n      handler(newValue, oldValue) {\\n        if (!isEqual(newValue, oldValue)) {\\n          this.initializeSort();\\n        }\\n      },\\n      deep: true,\\n    },\\n\\n    selectedRows(newValue, oldValue) {\\n      if (!isEqual(newValue, oldValue)) {\\n        this.$emit('selected-rows-change', {\\n          selectedRows: this.selectedRows,\\n        });\\n      }\\n    },\\n  },\\n\\n  computed: {\\n    tableStyles() {\\n      if (this.compactMode)\\n        return this.tableStyleClasses + 'vgt-compact'\\n      else\\n        return this.tableStyleClasses\\n    },\\n    hasFooterSlot() {\\n      return !!this.$slots['table-actions-bottom'];\\n    },\\n    wrapperStyles() {\\n      return {\\n        overflow: 'scroll-y',\\n        maxHeight: this.maxHeight ? this.maxHeight : 'auto',\\n      };\\n    },\\n\\n    rowKeyField() {\\n      return this.groupOptions.rowKey || 'vgt_header_id';\\n    },\\n\\n    hasHeaderRowTemplate() {\\n      return !!this.$slots['table-header-row'];\\n    },\\n\\n    showEmptySlot() {\\n      if (!this.paginated.length) return true;\\n\\n      if (\\n        this.paginated[0].label === 'no groups' &&\\n        !this.paginated[0].children.length\\n      ) {\\n        return true;\\n      }\\n\\n      return false;\\n    },\\n\\n    allSelected() {\\n      return (\\n        this.selectedRowCount > 0 &&\\n        ((this.selectAllByPage &&\\n          this.selectedPageRowsCount === this.totalPageRowCount) ||\\n          (!this.selectAllByPage &&\\n            this.selectedRowCount === this.totalRowCount))\\n      );\\n    },\\n\\n    allSelectedIndeterminate() {\\n      return (\\n        !this.allSelected &&\\n        ((this.selectAllByPage && this.selectedPageRowsCount > 0) ||\\n          (!this.selectAllByPage && this.selectedRowCount > 0))\\n      );\\n    },\\n\\n    selectionInfo() {\\n      return `${this.selectedRowCount} ${this.selectionText}`;\\n    },\\n\\n    selectedRowCount() {\\n      return this.selectedRows.length;\\n    },\\n\\n    selectedPageRowsCount() {\\n      return this.selectedPageRows.length;\\n    },\\n\\n    selectedPageRows() {\\n      const selectedRows = [];\\n      this.paginated.forEach((headerRow) => {\\n        headerRow.children.forEach((row) => {\\n          if (row.vgtSelected) {\\n            selectedRows.push(row);\\n          }\\n        });\\n      });\\n      return selectedRows;\\n    },\\n\\n    selectedRows() {\\n      const selectedRows = [];\\n      this.processedRows.forEach((headerRow) => {\\n        headerRow.children.forEach((row) => {\\n          if (row.vgtSelected) {\\n            selectedRows.push(row);\\n          }\\n        });\\n      });\\n      return selectedRows.sort((r1, r2) => r1.originalIndex - r2.originalIndex);\\n    },\\n\\n    fullColspan() {\\n      let fullColspan = 0;\\n      for (let i = 0; i < this.columns.length; i += 1) {\\n        if (!this.columns[i].hidden) {\\n          fullColspan += 1;\\n        }\\n      }\\n      if (this.lineNumbers) fullColspan++;\\n      if (this.selectable) fullColspan++;\\n      return fullColspan;\\n    },\\n    groupHeaderOnTop() {\\n      if (\\n        this.groupOptions &&\\n        this.groupOptions.enabled &&\\n        this.groupOptions.headerPosition &&\\n        this.groupOptions.headerPosition === 'bottom'\\n      ) {\\n        return false;\\n      }\\n      if (this.groupOptions && this.groupOptions.enabled) return true;\\n\\n      // will only get here if groupOptions is false\\n      return false;\\n    },\\n    groupHeaderOnBottom() {\\n      if (\\n        this.groupOptions &&\\n        this.groupOptions.enabled &&\\n        this.groupOptions.headerPosition &&\\n        this.groupOptions.headerPosition === 'bottom'\\n      ) {\\n        return true;\\n      }\\n      return false;\\n    },\\n    totalRowCount() {\\n      const total = this.processedRows.reduce((total, headerRow) => {\\n        const childrenCount = headerRow.children ? headerRow.children.length : 0;\\n        return total + childrenCount;\\n      }, 0);\\n      return total;\\n    },\\n    totalPageRowCount() {\\n      const total = this.paginated.reduce((total, headerRow) => {\\n        const childrenCount = headerRow.children ? headerRow.children.length : 0;\\n        return total + childrenCount;\\n      }, 0);\\n      return total;\\n    },\\n    wrapStyleClasses() {\\n      let classes = 'vgt-wrap';\\n      if (this.rtl) classes += ' rtl';\\n      classes += ` ${this.theme}`;\\n      return classes;\\n    },\\n    tableStyleClasses() {\\n      let classes = this.styleClass;\\n      classes += ` ${this.theme}`;\\n      return classes;\\n    },\\n\\n    searchTerm() {\\n      return this.externalSearchQuery != null\\n        ? this.externalSearchQuery\\n        : this.globalSearchTerm;\\n    },\\n\\n    //\\n    globalSearchAllowed() {\\n      if (\\n        this.searchEnabled &&\\n        !!this.globalSearchTerm &&\\n        this.searchTrigger !== 'enter'\\n      ) {\\n        return true;\\n      }\\n\\n      if (this.externalSearchQuery != null && this.searchTrigger !== 'enter') {\\n        return true;\\n      }\\n\\n      if (this.forceSearch) {\\n        this.forceSearch = false;\\n        return true;\\n      }\\n\\n      return false;\\n    },\\n\\n    // this is done everytime sortColumn\\n    // or sort type changes\\n    //----------------------------------------\\n    processedRows() {\\n      // we only process rows when mode is local\\n      let computedRows = this.filteredRows;\\n      if (this.mode === 'remote') {\\n        return computedRows;\\n      }\\n\\n      // take care of the global filter here also\\n      if (this.globalSearchAllowed) {\\n        // here also we need to de-construct and then\\n        // re-construct the rows.\\n        const allRows = [];\\n        this.filteredRows.forEach((headerRow) => {\\n          allRows.push(...headerRow.children);\\n        });\\n        const filteredRows = [];\\n        allRows.forEach((row) => {\\n          for (let i = 0; i < this.columns.length; i += 1) {\\n            const col = this.columns[i];\\n            // if col does not have search disabled,\\n            if (!col.globalSearchDisabled) {\\n              // if a search function is provided,\\n              // use that for searching, otherwise,\\n              // use the default search behavior\\n              if (this.searchFn) {\\n                const foundMatch = this.searchFn(\\n                  row,\\n                  col,\\n                  this.collectFormatted(row, col),\\n                  this.searchTerm\\n                );\\n                if (foundMatch) {\\n                  filteredRows.push(row);\\n                  break; // break the loop\\n                }\\n              } else {\\n                // comparison\\n                const matched = defaultType.filterPredicate(\\n                  this.collectFormatted(row, col),\\n                  this.searchTerm,\\n                  this.searchSkipDiacritics\\n                );\\n                if (matched) {\\n                  filteredRows.push(row);\\n                  break; // break loop\\n                }\\n              }\\n            }\\n          }\\n        });\\n\\n        // this is where we emit on search\\n        this.$emit('search', {\\n          searchTerm: this.searchTerm,\\n          rowCount: filteredRows.length,\\n        });\\n\\n        // here we need to reconstruct the nested structure\\n        // of rows\\n        computedRows = [];\\n        this.filteredRows.forEach((headerRow) => {\\n          const i = headerRow.vgt_header_id;\\n          const children = filteredRows.filter((r) => r.vgt_id === i);\\n          if (children.length) {\\n            const newHeaderRow = JSON.parse(JSON.stringify(headerRow));\\n            newHeaderRow.children = children;\\n            computedRows.push(newHeaderRow);\\n          }\\n        });\\n      }\\n      if (this.sorts.length) {\\n        //* we need to sort\\n        computedRows.forEach((cRows) => {\\n          cRows.children.sort((xRow, yRow) => {\\n            //* we need to get column for each sort\\n            let sortValue;\\n            for (let i = 0; i < this.sorts.length; i += 1) {\\n              const srt = this.sorts[i];\\n\\n              if (srt.type === SORT_TYPES.None) {\\n                //* if no sort, we need to use the original index to sort.\\n                sortValue = sortValue || (xRow.originalIndex - yRow.originalIndex);\\n              } else {\\n                const column = this.getColumnForField(srt.field);\\n                const xvalue = this.collect(xRow, srt.field);\\n                const yvalue = this.collect(yRow, srt.field);\\n  \\n                //* if a custom sort function has been provided we use that\\n                const { sortFn } = column;\\n                if (sortFn && typeof sortFn === 'function') {\\n                  sortValue =\\n                    sortValue ||\\n                    sortFn(xvalue, yvalue, column, xRow, yRow) *\\n                      (srt.type === SORT_TYPES.Descending ? -1 : 1);\\n                } else {\\n                  //* else we use our own sort\\n                  sortValue =\\n                    sortValue ||\\n                    column.typeDef.compare(xvalue, yvalue, column) *\\n                      (srt.type === SORT_TYPES.Descending ? -1 : 1);\\n                }\\n              }\\n            }\\n            return sortValue;\\n          });\\n        });\\n      }\\n\\n      // if the filtering is event based, we need to maintain filter\\n      // rows\\n      if (this.searchTrigger === 'enter') {\\n        this.filteredRows = computedRows;\\n      }\\n\\n      return computedRows;\\n    },\\n\\n    paginated() {\\n      if (!this.processedRows.length) return [];\\n\\n      if (this.mode === 'remote') {\\n        return this.processedRows;\\n      }\\n\\n      //* flatten the rows for paging.\\n      let paginatedRows = [];\\n      this.processedRows.forEach((childRows) => {\\n        //* only add headers when group options are enabled.\\n        if (this.groupOptions.enabled) {\\n          paginatedRows.push(childRows);\\n        }\\n        paginatedRows.push(...childRows.children);\\n      });\\n\\n      if (this.paginate) {\\n        let pageStart = (this.currentPage - 1) * this.currentPerPage;\\n\\n        // in case of filtering we might be on a page that is\\n        // not relevant anymore\\n        // also, if setting to all, current page will not be valid\\n        if (pageStart >= paginatedRows.length || this.currentPerPage === -1) {\\n          this.currentPage = 1;\\n          pageStart = 0;\\n        }\\n\\n        // calculate page end now\\n        let pageEnd = paginatedRows.length + 1;\\n\\n        // if the setting is set to 'all'\\n        if (this.currentPerPage !== -1) {\\n          pageEnd = this.currentPage * this.currentPerPage;\\n        }\\n\\n        paginatedRows = paginatedRows.slice(pageStart, pageEnd);\\n      }\\n      // reconstruct paginated rows here\\n      const reconstructedRows = [];\\n      paginatedRows.forEach((flatRow) => {\\n        //* header row?\\n        if (flatRow.vgt_header_id !== undefined) {\\n          this.handleExpanded(flatRow);\\n          const newHeaderRow = JSON.parse(JSON.stringify(flatRow));\\n          newHeaderRow.children = [];\\n          reconstructedRows.push(newHeaderRow);\\n        } else {\\n          //* child row\\n          let hRow = reconstructedRows.find(r => r.vgt_header_id === flatRow.vgt_id);\\n          if (!hRow) {\\n            hRow = this.processedRows.find(r => r.vgt_header_id === flatRow.vgt_id);\\n            if (hRow) {\\n              hRow = JSON.parse(JSON.stringify(hRow));\\n              hRow.children = [];\\n              reconstructedRows.push(hRow);\\n            }\\n          }\\n          hRow.children.push(flatRow);\\n        }\\n      });\\n      return reconstructedRows;\\n    },\\n\\n    originalRows() {\\n      const rows = JSON.parse(JSON.stringify(this.rows));\\n      let nestedRows = [];\\n      if (!this.groupOptions.enabled) {\\n        nestedRows = this.handleGrouped([\\n          {\\n            label: 'no groups',\\n            children: rows,\\n          },\\n        ]);\\n      } else {\\n        nestedRows = this.handleGrouped(rows);\\n      }\\n      // we need to preserve the original index of\\n      // rows so lets do that\\n      let index = 0;\\n      nestedRows.forEach((headerRow) => {\\n        headerRow.children.forEach((row) => {\\n          row.originalIndex = index++;\\n        });\\n      });\\n\\n      return nestedRows;\\n    },\\n\\n    typedColumns() {\\n      const columns = this.columns;\\n      for (let i = 0; i < this.columns.length; i++) {\\n        const column = columns[i];\\n        column.typeDef = this.dataTypes[column.type] || defaultType;\\n      }\\n      return columns;\\n    },\\n\\n    hasRowClickListener() {\\n      return this.$attrs && this.$attrs['row-click'];\\n    },\\n  },\\n\\n  methods: {\\n    //* we need to check for expanded row state here\\n    //* to maintain it when sorting/filtering\\n    handleExpanded(headerRow) {\\n      if (this.maintainExpanded &&\\n        this.expandedRowKeys.has(headerRow[this.rowKeyField])) {\\n        headerRow['vgtIsExpanded'] = true;\\n      } else {\\n        headerRow['vgtIsExpanded'] = false;\\n      }\\n    },\\n    toggleExpand(id) {\\n      const headerRow = this.filteredRows.find(r => r[this.rowKeyField] === id);\\n      if (headerRow) {\\n        headerRow['vgtIsExpanded'] = !headerRow.vgtIsExpanded;\\n      }\\n      if (this.maintainExpanded\\n        && headerRow.vgtIsExpanded) {\\n        this.expandedRowKeys.add(headerRow[this.rowKeyField]);\\n      } else {\\n        this.expandedRowKeys.delete(headerRow[this.rowKeyField]);\\n      }\\n    },\\n\\n    expandAll() {\\n      this.filteredRows.forEach((row) => {\\n        row['vgtIsExpanded'] = true;\\n        if (this.maintainExpanded) {\\n          this.expandedRowKeys.add(row[this.rowKeyField]);\\n        }\\n      });\\n    },\\n\\n    collapseAll() {\\n      this.filteredRows.forEach((row) => {\\n        row['vgtIsExpanded'] = false;\\n        this.expandedRowKeys.clear();\\n      });\\n    },\\n\\n    getColumnForField(field) {\\n      for (let i = 0; i < this.typedColumns.length; i += 1) {\\n        if (this.typedColumns[i].field === field) return this.typedColumns[i];\\n      }\\n    },\\n\\n    handleSearch() {\\n      this.resetTable();\\n      // for remote mode, we need to emit search\\n      if (this.mode === 'remote') {\\n        this.$emit('search', {\\n          searchTerm: this.searchTerm,\\n        });\\n      }\\n    },\\n\\n    reset() {\\n      this.initializeSort();\\n      this.changePage(1);\\n      this.$refs['table-header-primary'].reset(true);\\n      if (this.$refs['table-header-secondary']) {\\n        this.$refs['table-header-secondary'].reset(true);\\n      }\\n    },\\n\\n    emitSelectedRows() {\\n      this.$emit('select-all', {\\n        selected: this.selectedRowCount === this.totalRowCount,\\n        selectedRows: this.selectedRows,\\n      });\\n    },\\n\\n    unselectAllInternal(forceAll) {\\n      const rows =\\n        this.selectAllByPage && !forceAll ? this.paginated : this.filteredRows;\\n      rows.forEach((headerRow, i) => {\\n        headerRow.children.forEach((row, j) => {\\n          row['vgtSelected'] = false;\\n        });\\n      });\\n      this.emitSelectedRows();\\n    },\\n\\n    toggleSelectAll() {\\n      if (this.allSelected) {\\n        this.unselectAllInternal();\\n        return;\\n      }\\n      const rows = this.selectAllByPage ? this.paginated : this.filteredRows;\\n      rows.forEach((headerRow) => {\\n        headerRow.children.forEach((row) => {\\n          row['vgtSelected'] = true;\\n        });\\n      });\\n      this.emitSelectedRows();\\n    },\\n\\n    toggleSelectGroup(event, headerRow) {\\n      headerRow.children.forEach((row) => {\\n        row['vgtSelected'] = event;\\n      });\\n    },\\n\\n    changePage(value) {\\n      const enabled = this.paginate;\\n      let { paginationBottom, paginationTop } = this.$refs;\\n      if (enabled) {\\n        if (this.paginateOnTop && paginationTop) {\\n          paginationTop.currentPage = value;\\n        }\\n        if (this.paginateOnBottom && paginationBottom) {\\n          paginationBottom.currentPage = value;\\n        }\\n        // we also need to set the currentPage\\n        // for table.\\n        this.currentPage = value;\\n      }\\n    },\\n\\n    pageChangedEvent() {\\n      return {\\n        currentPage: this.currentPage,\\n        currentPerPage: this.currentPerPage,\\n        total: Math.floor(this.totalRowCount / this.currentPerPage),\\n      };\\n    },\\n\\n    pageChanged(pagination) {\\n      this.currentPage = pagination.currentPage;\\n      if (!pagination.noEmit) {\\n        const pageChangedEvent = this.pageChangedEvent();\\n        pageChangedEvent.prevPage = pagination.prevPage;\\n        this.$emit('page-change', pageChangedEvent);\\n        if (this.mode === 'remote') {\\n          this.$emit('update:isLoading', true);\\n        }\\n      }\\n    },\\n\\n    perPageChanged(pagination) {\\n      this.currentPerPage = pagination.currentPerPage;\\n      // ensure that both sides of pagination are in agreement\\n      // this fixes changes during position = 'both'\\n      let paginationPosition = this.paginationOptions.position;\\n      if (this.$refs.paginationTop && (paginationPosition === 'top' || paginationPosition === 'both')) {\\n        this.$refs.paginationTop.currentPerPage = this.currentPerPage;\\n      }\\n      if (this.$refs.paginationBottom && (paginationPosition === 'bottom' || paginationPosition === 'both')) {\\n        this.$refs.paginationBottom.currentPerPage = this.currentPerPage;\\n      }\\n      //* update perPage also\\n      const perPageChangedEvent = this.pageChangedEvent();\\n      this.$emit('per-page-change', perPageChangedEvent);\\n      if (this.mode === 'remote') {\\n        this.$emit('update:isLoading', true);\\n      }\\n    },\\n\\n    changeSort(sorts) {\\n      this.sorts = sorts;\\n      this.$emit('sort-change', sorts);\\n\\n      // every time we change sort we need to reset to page 1\\n      this.changePage(1);\\n\\n      // if the mode is remote, we don't need to do anything\\n      // after this. just set table loading to true\\n      if (this.mode === 'remote') {\\n        this.$emit('update:isLoading', true);\\n        return;\\n      }\\n      this.sortChanged = true;\\n    },\\n\\n    // checkbox click should always do the following\\n    onCheckboxClicked(row, index, event) {\\n      row['vgtSelected'] = !row.vgtSelected;\\n      this.$emit('row-click', {\\n        row,\\n        pageIndex: index,\\n        selected: !!row.vgtSelected,\\n        event,\\n      });\\n    },\\n\\n    onRowDoubleClicked(row, index, event) {\\n      this.$emit('row-dblclick', {\\n        row,\\n        pageIndex: index,\\n        selected: !!row.vgtSelected,\\n        event,\\n      });\\n    },\\n\\n    onRowClicked(row, index, event) {\\n      if (this.selectable && !this.selectOnCheckboxOnly) {\\n        row['vgtSelected'] = !row.vgtSelected;\\n      }\\n      this.$emit('row-click', {\\n        row,\\n        pageIndex: index,\\n        selected: !!row.vgtSelected,\\n        event,\\n      });\\n    },\\n\\n    onRowAuxClicked(row, index, event) {\\n      this.$emit('row-aux-click', {\\n        row,\\n        pageIndex: index,\\n        selected: !!row.vgtSelected,\\n        event,\\n      });\\n    },\\n\\n    onCellClicked(row, column, rowIndex, event) {\\n      this.$emit('cell-click', {\\n        row,\\n        column,\\n        rowIndex,\\n        event,\\n      });\\n    },\\n\\n    onMouseenter(row, index) {\\n      this.$emit('row-mouseenter', {\\n        row,\\n        pageIndex: index,\\n      });\\n    },\\n\\n    onMouseleave(row, index) {\\n      this.$emit('row-mouseleave', {\\n        row,\\n        pageIndex: index,\\n      });\\n    },\\n\\n    searchTableOnEnter() {\\n      if (this.searchTrigger === 'enter') {\\n        this.handleSearch();\\n        // we reset the filteredRows here because\\n        // we want to search across everything.\\n        this.filteredRows = JSON.parse(JSON.stringify(this.originalRows));\\n        this.forceSearch = true;\\n        this.sortChanged = true;\\n      }\\n    },\\n\\n    searchTableOnKeyUp() {\\n      if (this.searchTrigger !== 'enter') {\\n        this.handleSearch();\\n      }\\n    },\\n\\n    resetTable() {\\n      this.unselectAllInternal(true);\\n      // every time we searchTable\\n      this.changePage(1);\\n    },\\n\\n    // field can be:\\n    // 1. function (passed as a string using function.name. For example: 'bound myFunction')\\n    // 2. regular property - ex: 'prop'\\n    // 3. nested property path - ex: 'nested.prop'\\n    collect(obj, field) {\\n      // utility function to get nested property\\n      function dig(obj, selector) {\\n        let result = obj;\\n        const splitter = selector.split('.');\\n        for (let i = 0; i < splitter.length; i++) {\\n          if (typeof result === 'undefined' || result === null) {\\n            return undefined;\\n          }\\n          result = result[splitter[i]];\\n        }\\n        return result;\\n      }\\n\\n      if (typeof field === 'function') return field(obj);\\n      if (typeof field === 'string') return dig(obj, field);\\n      return undefined;\\n    },\\n\\n    collectFormatted(obj, column, headerRow = false) {\\n      let value;\\n      if (headerRow && column.headerField) {\\n        value = this.collect(obj, column.headerField);\\n      } else {\\n        value = this.collect(obj, column.field);\\n      }\\n      if (value === undefined) return '';\\n\\n      // if user has supplied custom formatter,\\n      // use that here\\n      if (column.formatFn && typeof column.formatFn === 'function') {\\n        return column.formatFn(value, obj);\\n      }\\n\\n      // lets format the resultant data\\n      let type = column.typeDef;\\n      // this will only happen if we try to collect formatted\\n      // before types have been initialized. for example: on\\n      // load when external query is specified.\\n      if (!type) {\\n        type = this.dataTypes[column.type] || defaultType;\\n      }\\n\\n      let result = type.format(value, column);\\n      // we must have some values in compact mode\\n      if (this.compactMode && (result == '' || result == null)) return '-';\\n      return result;\\n    },\\n\\n    formattedRow(row, isHeaderRow = false) {\\n      const formattedRow = {};\\n      for (let i = 0; i < this.typedColumns.length; i++) {\\n        const col = this.typedColumns[i];\\n        // what happens if field is\\n        if (col.field) {\\n          formattedRow[col.field] = this.collectFormatted(\\n            row,\\n            col,\\n            isHeaderRow\\n          );\\n        }\\n      }\\n      return formattedRow;\\n    },\\n\\n    // Get classes for the given column index & element.\\n    getClasses(index, element, row) {\\n      const { typeDef, [`${element}Class`]: custom } = this.typedColumns[index];\\n      let { isRight } = typeDef;\\n      if (this.rtl) isRight = true;\\n\\n      const classes = {\\n        'vgt-right-align': isRight,\\n        'vgt-left-align': !isRight,\\n      };\\n\\n      // for td we need to check if value is\\n      // a function.\\n      if (typeof custom === 'function') {\\n        classes[custom(row)] = true;\\n      } else if (typeof custom === 'string') {\\n        classes[custom] = true;\\n      }\\n      return classes;\\n    },\\n\\n    // method to filter rows\\n    filterRows(columnFilters, fromFilter = true) {\\n      // if (!this.rows.length) return;\\n      // this is invoked either as a result of changing filters\\n      // or as a result of modifying rows.\\n      this.columnFilters = columnFilters;\\n      let computedRows = JSON.parse(JSON.stringify(this.originalRows));\\n      let instancesOfFiltering = false;\\n\\n      // do we have a filter to care about?\\n      // if not we don't need to do anything\\n      if (this.columnFilters && Object.keys(this.columnFilters).length) {\\n        // every time we filter rows, we need to set current page\\n        // to 1\\n        // if the mode is remote, we only need to reset, if this is\\n        // being called from filter, not when rows are changing\\n        if (this.mode !== 'remote' || fromFilter) {\\n          this.changePage(1);\\n        }\\n        // we need to emit an event and that's that.\\n        // but this only needs to be invoked if filter is changing\\n        // not when row object is modified.\\n        if (fromFilter) {\\n          this.$emit('column-filter', {\\n            columnFilters: this.columnFilters,\\n          });\\n        }\\n\\n        // if mode is remote, we don't do any filtering here.\\n        if (this.mode === 'remote') {\\n          if (fromFilter) {\\n            this.$emit('update:isLoading', true);\\n          } else {\\n            // if remote filtering has already been taken care of.\\n            this.filteredRows = computedRows;\\n          }\\n          return;\\n        }\\n\\n        const fieldKey = (field) => {\\n          if (typeof(field) === 'function' && field.name) {\\n            return field.name;\\n          }\\n          return field;\\n        };\\n\\n        for (let i = 0; i < this.typedColumns.length; i++) {\\n          const col = this.typedColumns[i];\\n          if (this.columnFilters[fieldKey(col.field)]) {\\n\\n            instancesOfFiltering = true;\\n            computedRows.forEach((headerRow) => {\\n              const newChildren = headerRow.children.filter((row) => {\\n                // If column has a custom filter, use that.\\n                if (\\n                  col.filterOptions &&\\n                  typeof col.filterOptions.filterFn === 'function'\\n                ) {\\n                  return col.filterOptions.filterFn(\\n                    this.collect(row, col.field),\\n                    this.columnFilters[fieldKey(col.field)]\\n                  );\\n                }\\n\\n                // Otherwise Use default filters\\n                const { typeDef } = col;\\n                return typeDef.filterPredicate(\\n                  this.collect(row, col.field),\\n                  this.columnFilters[fieldKey(col.field)],\\n                  false,\\n                  col.filterOptions &&\\n                    typeof col.filterOptions.filterDropdownItems === 'object'\\n                );\\n              });\\n              // should we remove the header?\\n              headerRow.children = newChildren;\\n            });\\n          }\\n        }\\n      }\\n\\n      if (instancesOfFiltering) {\\n        this.filteredRows = computedRows.filter((h) => h.children && h.children.length);\\n      } else {\\n        this.filteredRows = computedRows;\\n      }\\n    },\\n\\n    getCurrentIndex(rowId) {\\n      let index = 0;\\n      let found = false;\\n      for (let i = 0; i < this.paginated.length; i += 1) {\\n        const headerRow = this.paginated[i];\\n        const { children } = headerRow;\\n        if (children && children.length) {\\n          for (let j = 0; j < children.length; j += 1) {\\n            const c = children[j];\\n            if (c.originalIndex === rowId) {\\n              found = true;\\n              break;\\n            }\\n            index += 1;\\n          }\\n        }\\n        if (found) break;\\n      }\\n      return ((this.currentPage - 1) * this.currentPerPage) + index + 1;\\n    },\\n\\n    getRowStyleClass(row) {\\n      let classes = '';\\n      if (this.hasRowClickListener) classes += 'clickable';\\n      let rowStyleClasses;\\n      if (typeof this.rowStyleClass === 'function') {\\n        rowStyleClasses = this.rowStyleClass(row);\\n      } else {\\n        rowStyleClasses = this.rowStyleClass;\\n      }\\n      if (rowStyleClasses) {\\n        classes += ` ${rowStyleClasses}`;\\n      }\\n      return classes;\\n    },\\n\\n    handleGrouped(originalRows) {\\n      originalRows.forEach((headerRow, i) => {\\n        headerRow.vgt_header_id = i;\\n        if (\\n          this.groupOptions.maintainExpanded &&\\n          this.expandedRowKeys.has(headerRow[this.groupOptions.rowKey])\\n        ) {\\n          headerRow['vgtIsExpanded'] = true;\\n        }\\n        headerRow.children.forEach((childRow) => {\\n          childRow.vgt_id = i;\\n        });\\n      });\\n      return originalRows;\\n    },\\n\\n    initializePagination() {\\n      const {\\n        enabled,\\n        perPage,\\n        position,\\n        perPageDropdown,\\n        perPageDropdownEnabled,\\n        dropdownAllowAll,\\n        nextLabel,\\n        prevLabel,\\n        rowsPerPageLabel,\\n        ofLabel,\\n        pageLabel,\\n        allLabel,\\n        setCurrentPage,\\n        mode,\\n        infoFn,\\n      } = this.paginationOptions;\\n\\n      if (typeof enabled === 'boolean') {\\n        this.paginate = enabled;\\n      }\\n\\n      if (typeof perPage === 'number') {\\n        this.perPage = perPage;\\n      }\\n\\n      if (position === 'top') {\\n        this.paginateOnTop = true; // default is false\\n        this.paginateOnBottom = false; // default is true\\n      } else if (position === 'both') {\\n        this.paginateOnTop = true;\\n        this.paginateOnBottom = true;\\n      }\\n\\n      if (Array.isArray(perPageDropdown) && perPageDropdown.length) {\\n        this.customRowsPerPageDropdown = perPageDropdown;\\n        if (!this.perPage) {\\n          [this.perPage] = perPageDropdown;\\n        }\\n      }\\n\\n      if (typeof perPageDropdownEnabled === 'boolean') {\\n        this.perPageDropdownEnabled = perPageDropdownEnabled;\\n      }\\n\\n      if (typeof dropdownAllowAll === 'boolean') {\\n        this.paginateDropdownAllowAll = dropdownAllowAll;\\n      }\\n\\n      if (typeof mode === 'string') {\\n        this.paginationMode = mode;\\n      }\\n\\n      if (typeof nextLabel === 'string') {\\n        this.nextText = nextLabel;\\n      }\\n\\n      if (typeof prevLabel === 'string') {\\n        this.prevText = prevLabel;\\n      }\\n\\n      if (typeof rowsPerPageLabel === 'string') {\\n        this.rowsPerPageText = rowsPerPageLabel;\\n      }\\n\\n      if (typeof ofLabel === 'string') {\\n        this.ofText = ofLabel;\\n      }\\n\\n      if (typeof pageLabel === 'string') {\\n        this.pageText = pageLabel;\\n      }\\n\\n      if (typeof allLabel === 'string') {\\n        this.allText = allLabel;\\n      }\\n\\n      if (typeof setCurrentPage === 'number') {\\n        setTimeout(() => {\\n          this.changePage(setCurrentPage);\\n        }, 500);\\n      }\\n\\n      if (typeof infoFn === 'function') {\\n        this.paginationInfoFn = infoFn;\\n      }\\n    },\\n\\n    initializeSearch() {\\n      const {\\n        enabled,\\n        trigger,\\n        externalQuery,\\n        searchFn,\\n        placeholder,\\n        skipDiacritics,\\n      } = this.searchOptions;\\n\\n      if (typeof enabled === 'boolean') {\\n        this.searchEnabled = enabled;\\n      }\\n\\n      if (trigger === 'enter') {\\n        this.searchTrigger = trigger;\\n      }\\n\\n      if (typeof externalQuery === 'string') {\\n        this.externalSearchQuery = externalQuery;\\n      }\\n\\n      if (typeof searchFn === 'function') {\\n        this.searchFn = searchFn;\\n      }\\n\\n      if (typeof placeholder === 'string') {\\n        this.searchPlaceholder = placeholder;\\n      }\\n\\n      if (typeof skipDiacritics === 'boolean') {\\n        this.searchSkipDiacritics = skipDiacritics;\\n      }\\n    },\\n\\n    initializeSort() {\\n      const { enabled, initialSortBy, multipleColumns } = this.sortOptions;\\n      const initSortBy = JSON.parse(JSON.stringify(initialSortBy || {}));\\n\\n      if (typeof enabled === 'boolean') {\\n        this.sortable = enabled;\\n      }\\n\\n      if (typeof multipleColumns === 'boolean') {\\n        this.multipleColumnSort = multipleColumns;\\n      }\\n\\n      //* initialSortBy can be an array or an object\\n      if (typeof initSortBy === 'object') {\\n        const ref = this.fixedHeader\\n          ? this.$refs['table-header-secondary']\\n          : this.$refs['table-header-primary'];\\n        if (Array.isArray(initSortBy)) {\\n          ref.setInitialSort(initSortBy);\\n        } else {\\n          const hasField = Object.prototype.hasOwnProperty.call(\\n            initSortBy,\\n            'field'\\n          );\\n          if (hasField) ref.setInitialSort([initSortBy]);\\n        }\\n      }\\n    },\\n\\n    initializeSelect() {\\n      const {\\n        enabled,\\n        selectionInfoClass,\\n        selectionText,\\n        clearSelectionText,\\n        selectOnCheckboxOnly,\\n        selectAllByPage,\\n        disableSelectInfo,\\n        selectAllByGroup,\\n      } = this.selectOptions;\\n\\n      if (typeof enabled === 'boolean') {\\n        this.selectable = enabled;\\n      }\\n\\n      if (typeof selectOnCheckboxOnly === 'boolean') {\\n        this.selectOnCheckboxOnly = selectOnCheckboxOnly;\\n      }\\n\\n      if (typeof selectAllByPage === 'boolean') {\\n        this.selectAllByPage = selectAllByPage;\\n      }\\n\\n      if (typeof selectAllByGroup === 'boolean') {\\n        this.selectAllByGroup = selectAllByGroup;\\n      }\\n\\n      if (typeof disableSelectInfo === 'boolean') {\\n        this.disableSelectInfo = disableSelectInfo;\\n      }\\n\\n      if (typeof selectionInfoClass === 'string') {\\n        this.selectionInfoClass = selectionInfoClass;\\n      }\\n\\n      if (typeof selectionText === 'string') {\\n        this.selectionText = selectionText;\\n      }\\n\\n      if (typeof clearSelectionText === 'string') {\\n        this.clearSelectionText = clearSelectionText;\\n      }\\n    },\\n  },\\n\\n  mounted() {\\n    if (this.perPage) {\\n      this.currentPerPage = this.perPage;\\n    }\\n    this.initializeSort();\\n  },\\n\\n  components: {\\n    'vgt-pagination': VgtPagination,\\n    'vgt-global-search': VgtGlobalSearch,\\n    'vgt-header-row': VgtHeaderRow,\\n    'vgt-table-header': VgtTableHeader,\\n  },\\n};\\n\\nconst _hoisted_1 = {\\n  key: 0,\\n  class: \\\"vgt-loading vgt-center-align\\\"\\n};\\nconst _hoisted_2 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"span\\\", { class: \\\"vgt-loading__content\\\" }, \\\" Loading... \\\", -1 /* HOISTED */);\\nconst _hoisted_3 = { class: \\\"vgt-selection-info-row__actions vgt-pull-right\\\" };\\nconst _hoisted_4 = { class: \\\"vgt-fixed-header\\\" };\\nconst _hoisted_5 = [\\\"id\\\"];\\nconst _hoisted_6 = [\\\"id\\\"];\\nconst _hoisted_7 = [\\\"onMouseenter\\\", \\\"onMouseleave\\\", \\\"onDblclick\\\", \\\"onClick\\\", \\\"onAuxclick\\\"];\\nconst _hoisted_8 = {\\n  key: 0,\\n  class: \\\"line-numbers\\\"\\n};\\nconst _hoisted_9 = [\\\"onClick\\\"];\\nconst _hoisted_10 = [\\\"disabled\\\", \\\"checked\\\"];\\nconst _hoisted_11 = [\\\"onClick\\\", \\\"data-label\\\"];\\nconst _hoisted_12 = { key: 0 };\\nconst _hoisted_13 = [\\\"innerHTML\\\"];\\nconst _hoisted_14 = { key: 0 };\\nconst _hoisted_15 = [\\\"colspan\\\"];\\nconst _hoisted_16 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"div\\\", { class: \\\"vgt-center-align vgt-text-disabled\\\" }, \\\" No data for table \\\", -1 /* HOISTED */);\\nconst _hoisted_17 = {\\n  key: 2,\\n  class: \\\"vgt-wrap__actions-footer\\\"\\n};\\n\\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\\n  const _component_vgt_pagination = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"resolveComponent\\\"])(\\\"vgt-pagination\\\");\\n  const _component_vgt_global_search = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"resolveComponent\\\"])(\\\"vgt-global-search\\\");\\n  const _component_vgt_table_header = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"resolveComponent\\\"])(\\\"vgt-table-header\\\");\\n  const _component_vgt_header_row = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"resolveComponent\\\"])(\\\"vgt-header-row\\\");\\n\\n  return (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"div\\\", {\\n    class: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"normalizeClass\\\"])($options.wrapStyleClasses)\\n  }, [\\n    ($props.isLoading)\\n      ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"div\\\", _hoisted_1, [\\n          Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"renderSlot\\\"])(_ctx.$slots, \\\"loadingContent\\\", {}, () => [\\n            _hoisted_2\\n          ])\\n        ]))\\n      : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true),\\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"div\\\", {\\n      class: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"normalizeClass\\\"])([\\\"vgt-inner-wrap\\\", {'is-loading': $props.isLoading}])\\n    }, [\\n      (_ctx.paginate && _ctx.paginateOnTop)\\n        ? Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"renderSlot\\\"])(_ctx.$slots, \\\"pagination-top\\\", {\\n            key: 0,\\n            pageChanged: $options.pageChanged,\\n            perPageChanged: $options.perPageChanged,\\n            total: $props.totalRows || $options.totalRowCount\\n          }, () => [\\n            Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createVNode\\\"])(_component_vgt_pagination, {\\n              ref: \\\"paginationTop\\\",\\n              onPageChanged: $options.pageChanged,\\n              onPerPageChanged: $options.perPageChanged,\\n              perPage: _ctx.perPage,\\n              rtl: $props.rtl,\\n              total: $props.totalRows || $options.totalRowCount,\\n              mode: _ctx.paginationMode,\\n              nextText: _ctx.nextText,\\n              prevText: _ctx.prevText,\\n              rowsPerPageText: _ctx.rowsPerPageText,\\n              perPageDropdownEnabled: $props.paginationOptions.perPageDropdownEnabled,\\n              customRowsPerPageDropdown: _ctx.customRowsPerPageDropdown,\\n              paginateDropdownAllowAll: _ctx.paginateDropdownAllowAll,\\n              ofText: _ctx.ofText,\\n              pageText: _ctx.pageText,\\n              allText: _ctx.allText,\\n              \\\"info-fn\\\": _ctx.paginationInfoFn\\n            }, null, 8 /* PROPS */, [\\\"onPageChanged\\\", \\\"onPerPageChanged\\\", \\\"perPage\\\", \\\"rtl\\\", \\\"total\\\", \\\"mode\\\", \\\"nextText\\\", \\\"prevText\\\", \\\"rowsPerPageText\\\", \\\"perPageDropdownEnabled\\\", \\\"customRowsPerPageDropdown\\\", \\\"paginateDropdownAllowAll\\\", \\\"ofText\\\", \\\"pageText\\\", \\\"allText\\\", \\\"info-fn\\\"])\\n          ])\\n        : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true),\\n      Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createVNode\\\"])(_component_vgt_global_search, {\\n        onKeyup: $options.searchTableOnKeyUp,\\n        onEnter: $options.searchTableOnEnter,\\n        value: _ctx.globalSearchTerm,\\n        onInput: _cache[0] || (_cache[0] = $event => (_ctx.globalSearchTerm = $event)),\\n        \\\"search-enabled\\\": _ctx.searchEnabled && _ctx.externalSearchQuery == null,\\n        \\\"global-search-placeholder\\\": _ctx.searchPlaceholder\\n      }, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createSlots\\\"])({ _: 2 /* DYNAMIC */ }, [\\n        (_ctx.$slots['table-actions'])\\n          ? {\\n              name: \\\"internal-table-actions\\\",\\n              fn: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"withCtx\\\"])(() => [\\n                Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"renderSlot\\\"])(_ctx.$slots, \\\"table-actions\\\")\\n              ])\\n            }\\n          : undefined\\n      ]), 1032 /* PROPS, DYNAMIC_SLOTS */, [\\\"onKeyup\\\", \\\"onEnter\\\", \\\"value\\\", \\\"search-enabled\\\", \\\"global-search-placeholder\\\"]),\\n      ($options.selectedRowCount && !_ctx.disableSelectInfo)\\n        ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"div\\\", {\\n            key: 1,\\n            class: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"normalizeClass\\\"])([\\\"vgt-selection-info-row clearfix\\\", _ctx.selectionInfoClass])\\n          }, [\\n            Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createTextVNode\\\"])(Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"toDisplayString\\\"])($options.selectionInfo) + \\\" \\\", 1 /* TEXT */),\\n            Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"a\\\", {\\n              href: \\\"\\\",\\n              onClick: _cache[1] || (_cache[1] = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"withModifiers\\\"])($event => ($options.unselectAllInternal(true)), [\\\"prevent\\\"]))\\n            }, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"toDisplayString\\\"])(_ctx.clearSelectionText), 1 /* TEXT */),\\n            Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"div\\\", _hoisted_3, [\\n              Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"renderSlot\\\"])(_ctx.$slots, \\\"selected-row-actions\\\")\\n            ])\\n          ], 2 /* CLASS */))\\n        : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true),\\n      Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"div\\\", _hoisted_4, [\\n        ($props.fixedHeader)\\n          ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"table\\\", {\\n              key: 0,\\n              id: \\\"vgt-table\\\",\\n              class: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"normalizeClass\\\"])($options.tableStyleClasses)\\n            }, [\\n              Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"colgroup\\\", null, [\\n                (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(true), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"Fragment\\\"], null, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"renderList\\\"])($props.columns, (column, index) => {\\n                  return (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"col\\\", {\\n                    key: index,\\n                    id: `col-${index}`\\n                  }, null, 8 /* PROPS */, _hoisted_5))\\n                }), 128 /* KEYED_FRAGMENT */))\\n              ]),\\n              Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\" Table header \\\"),\\n              Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createVNode\\\"])(_component_vgt_table_header, {\\n                ref: \\\"table-header-secondary\\\",\\n                onToggleSelectAll: $options.toggleSelectAll,\\n                onSortChange: $options.changeSort,\\n                onFilterChanged: $options.filterRows,\\n                columns: $props.columns,\\n                \\\"line-numbers\\\": $props.lineNumbers,\\n                selectable: _ctx.selectable,\\n                \\\"all-selected\\\": $options.allSelected,\\n                \\\"all-selected-indeterminate\\\": $options.allSelectedIndeterminate,\\n                mode: $props.mode,\\n                sortable: _ctx.sortable,\\n                \\\"multiple-column-sort\\\": _ctx.multipleColumnSort,\\n                \\\"typed-columns\\\": $options.typedColumns,\\n                getClasses: $options.getClasses,\\n                searchEnabled: _ctx.searchEnabled,\\n                paginated: $options.paginated,\\n                \\\"table-ref\\\": _ctx.$refs.table\\n              }, {\\n                \\\"table-column\\\": Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"withCtx\\\"])((slotProps) => [\\n                  Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"renderSlot\\\"])(_ctx.$slots, \\\"table-column\\\", {\\n                    column: slotProps.column\\n                  }, () => [\\n                    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"span\\\", null, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"toDisplayString\\\"])(slotProps.column.label), 1 /* TEXT */)\\n                  ])\\n                ]),\\n                \\\"column-filter\\\": Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"withCtx\\\"])((slotProps) => [\\n                  Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"renderSlot\\\"])(_ctx.$slots, \\\"column-filter\\\", {\\n                    column: slotProps.column,\\n                    updateFilters: slotProps.updateFilters\\n                  })\\n                ]),\\n                _: 3 /* FORWARDED */\\n              }, 8 /* PROPS */, [\\\"onToggleSelectAll\\\", \\\"onSortChange\\\", \\\"onFilterChanged\\\", \\\"columns\\\", \\\"line-numbers\\\", \\\"selectable\\\", \\\"all-selected\\\", \\\"all-selected-indeterminate\\\", \\\"mode\\\", \\\"sortable\\\", \\\"multiple-column-sort\\\", \\\"typed-columns\\\", \\\"getClasses\\\", \\\"searchEnabled\\\", \\\"paginated\\\", \\\"table-ref\\\"])\\n            ], 2 /* CLASS */))\\n          : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true)\\n      ]),\\n      Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"div\\\", {\\n        class: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"normalizeClass\\\"])({'vgt-responsive': $props.responsive}),\\n        style: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"normalizeStyle\\\"])($options.wrapperStyles)\\n      }, [\\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"table\\\", {\\n          id: \\\"vgt-table\\\",\\n          ref: \\\"table\\\",\\n          class: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"normalizeClass\\\"])($options.tableStyles)\\n        }, [\\n          Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"colgroup\\\", null, [\\n            (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(true), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"Fragment\\\"], null, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"renderList\\\"])($props.columns, (column, index) => {\\n              return (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"col\\\", {\\n                key: index,\\n                id: `col-${index}`\\n              }, null, 8 /* PROPS */, _hoisted_6))\\n            }), 128 /* KEYED_FRAGMENT */))\\n          ]),\\n          Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\" Table header \\\"),\\n          Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createVNode\\\"])(_component_vgt_table_header, {\\n            ref: \\\"table-header-primary\\\",\\n            onToggleSelectAll: $options.toggleSelectAll,\\n            onSortChange: $options.changeSort,\\n            onFilterChanged: $options.filterRows,\\n            columns: $props.columns,\\n            \\\"line-numbers\\\": $props.lineNumbers,\\n            selectable: _ctx.selectable,\\n            \\\"all-selected\\\": $options.allSelected,\\n            \\\"all-selected-indeterminate\\\": $options.allSelectedIndeterminate,\\n            mode: $props.mode,\\n            sortable: _ctx.sortable,\\n            \\\"multiple-column-sort\\\": _ctx.multipleColumnSort,\\n            \\\"typed-columns\\\": $options.typedColumns,\\n            getClasses: $options.getClasses,\\n            searchEnabled: _ctx.searchEnabled\\n          }, {\\n            \\\"table-column\\\": Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"withCtx\\\"])((slotProps) => [\\n              Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"renderSlot\\\"])(_ctx.$slots, \\\"table-column\\\", {\\n                column: slotProps.column\\n              }, () => [\\n                Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"span\\\", null, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"toDisplayString\\\"])(slotProps.column.label), 1 /* TEXT */)\\n              ])\\n            ]),\\n            \\\"column-filter\\\": Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"withCtx\\\"])((slotProps) => [\\n              Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"renderSlot\\\"])(_ctx.$slots, \\\"column-filter\\\", {\\n                column: slotProps.column,\\n                updateFilters: slotProps.updateFilters\\n              })\\n            ]),\\n            _: 3 /* FORWARDED */\\n          }, 8 /* PROPS */, [\\\"onToggleSelectAll\\\", \\\"onSortChange\\\", \\\"onFilterChanged\\\", \\\"columns\\\", \\\"line-numbers\\\", \\\"selectable\\\", \\\"all-selected\\\", \\\"all-selected-indeterminate\\\", \\\"mode\\\", \\\"sortable\\\", \\\"multiple-column-sort\\\", \\\"typed-columns\\\", \\\"getClasses\\\", \\\"searchEnabled\\\"]),\\n          Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\" Table body starts here \\\"),\\n          (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(true), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"Fragment\\\"], null, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"renderList\\\"])($options.paginated, (headerRow, hIndex) => {\\n            return (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"tbody\\\", { key: hIndex }, [\\n              Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\" if group row header is at the top \\\"),\\n              ($options.groupHeaderOnTop)\\n                ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createBlock\\\"])(_component_vgt_header_row, {\\n                    key: 0,\\n                    onVgtExpand: $event => ($options.toggleExpand(headerRow[$options.rowKeyField])),\\n                    \\\"header-row\\\": headerRow,\\n                    columns: $props.columns,\\n                    \\\"line-numbers\\\": $props.lineNumbers,\\n                    selectable: _ctx.selectable,\\n                    \\\"select-all-by-group\\\": _ctx.selectAllByGroup,\\n                    collapsable: $props.groupOptions.collapsable,\\n                    \\\"collect-formatted\\\": $options.collectFormatted,\\n                    \\\"formatted-row\\\": $options.formattedRow,\\n                    class: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"normalizeClass\\\"])($options.getRowStyleClass(headerRow)),\\n                    \\\"get-classes\\\": $options.getClasses,\\n                    \\\"full-colspan\\\": $options.fullColspan,\\n                    groupIndex: hIndex,\\n                    onSelectGroupChange: $event => ($options.toggleSelectGroup($event, headerRow))\\n                  }, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createSlots\\\"])({ _: 2 /* DYNAMIC */ }, [\\n                    ($options.hasHeaderRowTemplate)\\n                      ? {\\n                          name: \\\"table-header-row\\\",\\n                          fn: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"withCtx\\\"])((slotProps) => [\\n                            Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"renderSlot\\\"])(_ctx.$slots, \\\"table-header-row\\\", {\\n                              column: slotProps.column,\\n                              formattedRow: slotProps.formattedRow,\\n                              row: slotProps.row\\n                            })\\n                          ])\\n                        }\\n                      : undefined\\n                  ]), 1032 /* PROPS, DYNAMIC_SLOTS */, [\\\"onVgtExpand\\\", \\\"header-row\\\", \\\"columns\\\", \\\"line-numbers\\\", \\\"selectable\\\", \\\"select-all-by-group\\\", \\\"collapsable\\\", \\\"collect-formatted\\\", \\\"formatted-row\\\", \\\"class\\\", \\\"get-classes\\\", \\\"full-colspan\\\", \\\"groupIndex\\\", \\\"onSelectGroupChange\\\"]))\\n                : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true),\\n              Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\" normal rows here. we loop over all rows \\\"),\\n              (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(true), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"Fragment\\\"], null, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"renderList\\\"])(headerRow.children, (row, index) => {\\n                return (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"Fragment\\\"], null, [\\n                  ($props.groupOptions.collapsable ? headerRow.vgtIsExpanded : true)\\n                    ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"tr\\\", {\\n                        key: row.originalIndex,\\n                        class: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"normalizeClass\\\"])($options.getRowStyleClass(row)),\\n                        onMouseenter: $event => ($options.onMouseenter(row, index)),\\n                        onMouseleave: $event => ($options.onMouseleave(row, index)),\\n                        onDblclick: $event => ($options.onRowDoubleClicked(row, index, $event)),\\n                        onClick: $event => ($options.onRowClicked(row, index, $event)),\\n                        onAuxclick: $event => ($options.onRowAuxClicked(row, index, $event))\\n                      }, [\\n                        ($props.lineNumbers)\\n                          ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"th\\\", _hoisted_8, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"toDisplayString\\\"])($options.getCurrentIndex(row.originalIndex)), 1 /* TEXT */))\\n                          : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true),\\n                        (_ctx.selectable)\\n                          ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"th\\\", {\\n                              key: 1,\\n                              onClick: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"withModifiers\\\"])($event => ($options.onCheckboxClicked(row, index, $event)), [\\\"stop\\\"]),\\n                              class: \\\"vgt-checkbox-col\\\"\\n                            }, [\\n                              Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"input\\\", {\\n                                type: \\\"checkbox\\\",\\n                                disabled: row.vgtDisabled,\\n                                checked: row.vgtSelected\\n                              }, null, 8 /* PROPS */, _hoisted_10)\\n                            ], 8 /* PROPS */, _hoisted_9))\\n                          : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true),\\n                        (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(true), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"Fragment\\\"], null, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"renderList\\\"])($props.columns, (column, i) => {\\n                          return (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"Fragment\\\"], null, [\\n                            (!column.hidden && column.field)\\n                              ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"td\\\", {\\n                                  key: i,\\n                                  onClick: $event => ($options.onCellClicked(row, column, index, $event)),\\n                                  class: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"normalizeClass\\\"])($options.getClasses(i, 'td', row)),\\n                                  \\\"data-label\\\": $props.compactMode ? column.label : undefined\\n                                }, [\\n                                  Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"renderSlot\\\"])(_ctx.$slots, \\\"table-row\\\", {\\n                                    row: row,\\n                                    column: column,\\n                                    formattedRow: $options.formattedRow(row),\\n                                    index: index\\n                                  }, () => [\\n                                    (!column.html)\\n                                      ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"span\\\", _hoisted_12, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"toDisplayString\\\"])($options.collectFormatted(row, column)), 1 /* TEXT */))\\n                                      : (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"span\\\", {\\n                                          key: 1,\\n                                          innerHTML: $options.collect(row, column.field)\\n                                        }, null, 8 /* PROPS */, _hoisted_13))\\n                                  ])\\n                                ], 10 /* CLASS, PROPS */, _hoisted_11))\\n                              : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true)\\n                          ], 64 /* STABLE_FRAGMENT */))\\n                        }), 256 /* UNKEYED_FRAGMENT */))\\n                      ], 42 /* CLASS, PROPS, HYDRATE_EVENTS */, _hoisted_7))\\n                    : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true)\\n                ], 64 /* STABLE_FRAGMENT */))\\n              }), 256 /* UNKEYED_FRAGMENT */)),\\n              Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\" if group row header is at the bottom \\\"),\\n              ($options.groupHeaderOnBottom)\\n                ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createBlock\\\"])(_component_vgt_header_row, {\\n                    key: 1,\\n                    \\\"header-row\\\": headerRow,\\n                    columns: $props.columns,\\n                    \\\"line-numbers\\\": $props.lineNumbers,\\n                    selectable: _ctx.selectable,\\n                    \\\"select-all-by-group\\\": _ctx.selectAllByGroup,\\n                    \\\"collect-formatted\\\": $options.collectFormatted,\\n                    \\\"formatted-row\\\": $options.formattedRow,\\n                    \\\"get-classes\\\": $options.getClasses,\\n                    \\\"full-colspan\\\": $options.fullColspan,\\n                    groupIndex: _ctx.index,\\n                    onSelectGroupChange: $event => ($options.toggleSelectGroup($event, headerRow))\\n                  }, Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createSlots\\\"])({ _: 2 /* DYNAMIC */ }, [\\n                    ($options.hasHeaderRowTemplate)\\n                      ? {\\n                          name: \\\"table-header-row\\\",\\n                          fn: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"withCtx\\\"])((slotProps) => [\\n                            Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"renderSlot\\\"])(_ctx.$slots, \\\"table-header-row\\\", {\\n                              column: slotProps.column,\\n                              formattedRow: slotProps.formattedRow,\\n                              row: slotProps.row\\n                            })\\n                          ])\\n                        }\\n                      : undefined\\n                  ]), 1032 /* PROPS, DYNAMIC_SLOTS */, [\\\"header-row\\\", \\\"columns\\\", \\\"line-numbers\\\", \\\"selectable\\\", \\\"select-all-by-group\\\", \\\"collect-formatted\\\", \\\"formatted-row\\\", \\\"get-classes\\\", \\\"full-colspan\\\", \\\"groupIndex\\\", \\\"onSelectGroupChange\\\"]))\\n                : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true)\\n            ]))\\n          }), 128 /* KEYED_FRAGMENT */)),\\n          ($options.showEmptySlot)\\n            ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"tbody\\\", _hoisted_14, [\\n                Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"tr\\\", null, [\\n                  Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementVNode\\\"])(\\\"td\\\", { colspan: $options.fullColspan }, [\\n                    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"renderSlot\\\"])(_ctx.$slots, \\\"emptystate\\\", {}, () => [\\n                      _hoisted_16\\n                    ])\\n                  ], 8 /* PROPS */, _hoisted_15)\\n                ])\\n              ]))\\n            : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true)\\n        ], 2 /* CLASS */)\\n      ], 6 /* CLASS, STYLE */),\\n      ($options.hasFooterSlot)\\n        ? (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"openBlock\\\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createElementBlock\\\"])(\\\"div\\\", _hoisted_17, [\\n            Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"renderSlot\\\"])(_ctx.$slots, \\\"table-actions-bottom\\\")\\n          ]))\\n        : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true),\\n      (_ctx.paginate && _ctx.paginateOnBottom)\\n        ? Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"renderSlot\\\"])(_ctx.$slots, \\\"pagination-bottom\\\", {\\n            key: 3,\\n            pageChanged: $options.pageChanged,\\n            perPageChanged: $options.perPageChanged,\\n            total: $props.totalRows || $options.totalRowCount\\n          }, () => [\\n            Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createVNode\\\"])(_component_vgt_pagination, {\\n              ref: \\\"paginationBottom\\\",\\n              onPageChanged: $options.pageChanged,\\n              onPerPageChanged: $options.perPageChanged,\\n              perPage: _ctx.perPage,\\n              rtl: $props.rtl,\\n              total: $props.totalRows || $options.totalRowCount,\\n              mode: _ctx.paginationMode,\\n              nextText: _ctx.nextText,\\n              prevText: _ctx.prevText,\\n              rowsPerPageText: _ctx.rowsPerPageText,\\n              perPageDropdownEnabled: $props.paginationOptions.perPageDropdownEnabled,\\n              customRowsPerPageDropdown: _ctx.customRowsPerPageDropdown,\\n              paginateDropdownAllowAll: _ctx.paginateDropdownAllowAll,\\n              ofText: _ctx.ofText,\\n              pageText: _ctx.pageText,\\n              allText: _ctx.allText,\\n              \\\"info-fn\\\": _ctx.paginationInfoFn\\n            }, null, 8 /* PROPS */, [\\\"onPageChanged\\\", \\\"onPerPageChanged\\\", \\\"perPage\\\", \\\"rtl\\\", \\\"total\\\", \\\"mode\\\", \\\"nextText\\\", \\\"prevText\\\", \\\"rowsPerPageText\\\", \\\"perPageDropdownEnabled\\\", \\\"customRowsPerPageDropdown\\\", \\\"paginateDropdownAllowAll\\\", \\\"ofText\\\", \\\"pageText\\\", \\\"allText\\\", \\\"info-fn\\\"])\\n          ])\\n        : Object(vue__WEBPACK_IMPORTED_MODULE_0__[\\\"createCommentVNode\\\"])(\\\"v-if\\\", true)\\n    ], 2 /* CLASS */)\\n  ], 2 /* CLASS */))\\n}\\nvar VueGoodTable = /*#__PURE__*/_export_sfc(_sfc_main, [['render',_sfc_render]]);\\n\\nvar index = {\\n  install: (app, options) => {\\n    app.component('VueGoodTable', VueGoodTable);\\n  }\\n};\\n\\n\\n\\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \\\"./node_modules/webpack/buildin/global.js\\\")))\\n\\n//# sourceURL=webpack:///./node_modules/vue-good-table-next/dist/vue-good-table.esm.js?\")}}]);","extractedComments":[]}