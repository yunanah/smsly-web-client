{"remainingRequest":"/Users/yoorabaek/Dev_test/client/node_modules/babel-loader/lib/index.js!/Users/yoorabaek/Dev_test/client/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/yoorabaek/Dev_test/client/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/yoorabaek/Dev_test/client/src/views/KitOrder.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/yoorabaek/Dev_test/client/src/views/KitOrder.vue","mtime":1645318578329},{"path":"/Users/yoorabaek/Dev_test/client/babel.config.js","mtime":1638856988000},{"path":"/Users/yoorabaek/Dev_test/client/node_modules/cache-loader/dist/cjs.js","mtime":1638841237816},{"path":"/Users/yoorabaek/Dev_test/client/node_modules/babel-loader/lib/index.js","mtime":1639623481094},{"path":"/Users/yoorabaek/Dev_test/client/node_modules/cache-loader/dist/cjs.js","mtime":1638841237816},{"path":"/Users/yoorabaek/Dev_test/client/node_modules/vue-loader-v16/dist/index.js","mtime":1642430036111}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}