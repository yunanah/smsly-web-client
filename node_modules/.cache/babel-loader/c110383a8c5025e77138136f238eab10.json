{"remainingRequest":"/Users/yoorabaek/Dev_test/client/node_modules/babel-loader/lib/index.js!/Users/yoorabaek/Dev_test/client/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/yoorabaek/Dev_test/client/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/yoorabaek/Dev_test/client/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/yoorabaek/Dev_test/client/src/views/PreviewRecommend.vue?vue&type=template&id=7b85d40e&scoped=true","dependencies":[{"path":"/Users/yoorabaek/Dev_test/client/src/views/PreviewRecommend.vue","mtime":1645238723348},{"path":"/Users/yoorabaek/Dev_test/client/babel.config.js","mtime":1638856988000},{"path":"/Users/yoorabaek/Dev_test/client/node_modules/cache-loader/dist/cjs.js","mtime":1638841237816},{"path":"/Users/yoorabaek/Dev_test/client/node_modules/babel-loader/lib/index.js","mtime":1639623481094},{"path":"/Users/yoorabaek/Dev_test/client/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1642430036117},{"path":"/Users/yoorabaek/Dev_test/client/node_modules/cache-loader/dist/cjs.js","mtime":1638841237816},{"path":"/Users/yoorabaek/Dev_test/client/node_modules/vue-loader-v16/dist/index.js","mtime":1642430036111}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgdG9EaXNwbGF5U3RyaW5nIGFzIF90b0Rpc3BsYXlTdHJpbmcsIGNyZWF0ZUVsZW1lbnRWTm9kZSBhcyBfY3JlYXRlRWxlbWVudFZOb2RlLCBjcmVhdGVUZXh0Vk5vZGUgYXMgX2NyZWF0ZVRleHRWTm9kZSwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUVsZW1lbnRCbG9jayBhcyBfY3JlYXRlRWxlbWVudEJsb2NrLCBjcmVhdGVDb21tZW50Vk5vZGUgYXMgX2NyZWF0ZUNvbW1lbnRWTm9kZSwgcmVuZGVyTGlzdCBhcyBfcmVuZGVyTGlzdCwgRnJhZ21lbnQgYXMgX0ZyYWdtZW50LCBub3JtYWxpemVDbGFzcyBhcyBfbm9ybWFsaXplQ2xhc3MsIHJlc29sdmVDb21wb25lbnQgYXMgX3Jlc29sdmVDb21wb25lbnQsIGNyZWF0ZUJsb2NrIGFzIF9jcmVhdGVCbG9jaywgcHVzaFNjb3BlSWQgYXMgX3B1c2hTY29wZUlkLCBwb3BTY29wZUlkIGFzIF9wb3BTY29wZUlkIH0gZnJvbSAidnVlIjsKaW1wb3J0IF9pbXBvcnRzXzAgZnJvbSAnQC9hc3NldHMvYnJhcy9icmE0LnBuZyc7CmltcG9ydCBfaW1wb3J0c18xIGZyb20gJ0AvYXNzZXRzL2hvbWVkZWxpdmVyLnBuZyc7Cgp2YXIgX3dpdGhTY29wZUlkID0gZnVuY3Rpb24gX3dpdGhTY29wZUlkKG4pIHsKICByZXR1cm4gX3B1c2hTY29wZUlkKCJkYXRhLXYtN2I4NWQ0MGUiKSwgbiA9IG4oKSwgX3BvcFNjb3BlSWQoKSwgbjsKfTsKCnZhciBfaG9pc3RlZF8xID0gewogIGNsYXNzOiAiYm9keSIKfTsKdmFyIF9ob2lzdGVkXzIgPSB7CiAgImRhdGEtYW9zIjogImZhZGUtdXAiLAogICJkYXRhLWFvcy1hbmNob3ItcGxhY2VtZW50IjogInRvcC1ib3R0b20iLAogICJkYXRhLWFvcy1kdXJhdGlvbiI6ICIxMDAwIiwKICBjbGFzczogInRpdGxlIgp9Owp2YXIgX2hvaXN0ZWRfMyA9IHsKICBrZXk6IDAKfTsKCnZhciBfaG9pc3RlZF80ID0gLyojX19QVVJFX18qL193aXRoU2NvcGVJZChmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJiciIsIG51bGwsIG51bGwsIC0xCiAgLyogSE9JU1RFRCAqLwogICk7Cn0pOwoKdmFyIF9ob2lzdGVkXzUgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVRleHRWTm9kZSgiIOuqqOuRkCDqs6DroKTtlZjsl6wg7KSA67mE7ZaI7Ja07JqUISAiKTsKCnZhciBfaG9pc3RlZF82ID0gLyojX19QVVJFX18qL193aXRoU2NvcGVJZChmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJiciIsIG51bGwsIG51bGwsIC0xCiAgLyogSE9JU1RFRCAqLwogICk7Cn0pOwoKdmFyIF9ob2lzdGVkXzcgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKGZ1bmN0aW9uICgpIHsKICByZXR1cm4gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoInNwYW4iLCBudWxsLCBbLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIu2VmOuCmOyUqSDshKDtg53tlbTshJwsIOy2lOyynCDsnbTsnKDrpbwg7ZmV7J247ZW0IOuztOyEuOyalMKgIiksIC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJpIiwgewogICAgY2xhc3M6ICJmYXIgZmEtc21pbGUiCiAgfSldLCAtMQogIC8qIEhPSVNURUQgKi8KICApOwp9KTsKCnZhciBfaG9pc3RlZF84ID0gewogIGtleTogMQp9OwoKdmFyIF9ob2lzdGVkXzkgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKGZ1bmN0aW9uICgpIHsKICByZXR1cm4gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImJyIiwgbnVsbCwgbnVsbCwgLTEKICAvKiBIT0lTVEVEICovCiAgKTsKfSk7Cgp2YXIgX2hvaXN0ZWRfMTAgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVRleHRWTm9kZSgiIOu2hOyEne2VmOuKlCDspJHsnbTsl5DsmpQhICIpOwoKdmFyIF9ob2lzdGVkXzExID0gLyojX19QVVJFX18qL193aXRoU2NvcGVJZChmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJiciIsIG51bGwsIG51bGwsIC0xCiAgLyogSE9JU1RFRCAqLwogICk7Cn0pOwoKdmFyIF9ob2lzdGVkXzEyID0gLyojX19QVVJFX18qL193aXRoU2NvcGVJZChmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJzcGFuIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKCLstpTsspzsnbQg7JmE66OM65CY66m0IOy5tO2GoSDslYzrprzsnLzroZwg7JWM66Ck65Oc66as6rKg7Iq164uI64ukwqAiKSwgLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImkiLCB7CiAgICBjbGFzczogImZhciBmYS1zbWlsZSIKICB9KV0sIC0xCiAgLyogSE9JU1RFRCAqLwogICk7Cn0pOwoKdmFyIF9ob2lzdGVkXzEzID0gLyojX19QVVJFX18qL193aXRoU2NvcGVJZChmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJiciIsIG51bGwsIG51bGwsIC0xCiAgLyogSE9JU1RFRCAqLwogICk7Cn0pOwoKdmFyIF9ob2lzdGVkXzE0ID0gLyojX19QVVJFX18qL193aXRoU2NvcGVJZChmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJzcGFuIiwgewogICAgY2xhc3M6ICJob3ctbG9uZyIKICB9LCAiKiDslb0gN+ydvCDshozsmpQiLCAtMQogIC8qIEhPSVNURUQgKi8KICApOwp9KTsKCnZhciBfaG9pc3RlZF8xNSA9IHsKICBrZXk6IDAsCiAgImRhdGEtYW9zIjogImZhZGUtZG93biIsCiAgImRhdGEtYW9zLWFuY2hvci1wbGFjZW1lbnQiOiAidG9wLWJvdHRvbSIsCiAgImRhdGEtYW9zLWR1cmF0aW9uIjogIjEwMDAiLAogIGNsYXNzOiAiY29udGFpbmVyIgp9Owp2YXIgX2hvaXN0ZWRfMTYgPSBbIm9uQ2xpY2siLCAib25Nb3VzZW92ZXIiLCAib25Nb3VzZW91dCJdOwp2YXIgX2hvaXN0ZWRfMTcgPSB7CiAga2V5OiAwLAogIGNsYXNzOiAiaW1hZ2UtYm94IGNvbXAiCn07Cgp2YXIgX2hvaXN0ZWRfMTggPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKGZ1bmN0aW9uICgpIHsKICByZXR1cm4gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImltZyIsIHsKICAgIHNyYzogIi9icmFSZWNvbW1lbmQvZ2V0SW1nL2JyYS8xIiwKICAgIGFsdDogIiIKICB9LCBudWxsLCAtMQogIC8qIEhPSVNURUQgKi8KICApOwp9KTsKCnZhciBfaG9pc3RlZF8xOSA9IFtfaG9pc3RlZF8xOF07CnZhciBfaG9pc3RlZF8yMCA9IHsKICBrZXk6IDEsCiAgY2xhc3M6ICJpbWFnZS1ib3ggY29tcCIKfTsKCnZhciBfaG9pc3RlZF8yMSA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoZnVuY3Rpb24gKCkgewogIHJldHVybiAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaW1nIiwgewogICAgc3JjOiAiL2JyYVJlY29tbWVuZC9nZXRJbWcvYnJhLzIiLAogICAgYWx0OiAiIgogIH0sIG51bGwsIC0xCiAgLyogSE9JU1RFRCAqLwogICk7Cn0pOwoKdmFyIF9ob2lzdGVkXzIyID0gW19ob2lzdGVkXzIxXTsKdmFyIF9ob2lzdGVkXzIzID0gewogIGtleTogMiwKICBjbGFzczogImltYWdlLWJveCBjb21wIgp9OwoKdmFyIF9ob2lzdGVkXzI0ID0gLyojX19QVVJFX18qL193aXRoU2NvcGVJZChmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJpbWciLCB7CiAgICBzcmM6ICIvYnJhUmVjb21tZW5kL2dldEltZy9icmEvMyIsCiAgICBhbHQ6ICIiCiAgfSwgbnVsbCwgLTEKICAvKiBIT0lTVEVEICovCiAgKTsKfSk7Cgp2YXIgX2hvaXN0ZWRfMjUgPSBbX2hvaXN0ZWRfMjRdOwp2YXIgX2hvaXN0ZWRfMjYgPSB7CiAga2V5OiAzLAogIGNsYXNzOiAiaW1hZ2UtYm94IGNvbXAiCn07Cgp2YXIgX2hvaXN0ZWRfMjcgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKGZ1bmN0aW9uICgpIHsKICByZXR1cm4gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImltZyIsIHsKICAgIHNyYzogIi9icmFSZWNvbW1lbmQvZ2V0SW1nL2JyYS80IiwKICAgIGFsdDogIiIKICB9LCBudWxsLCAtMQogIC8qIEhPSVNURUQgKi8KICApOwp9KTsKCnZhciBfaG9pc3RlZF8yOCA9IFtfaG9pc3RlZF8yN107CnZhciBfaG9pc3RlZF8yOSA9IHsKICBjbGFzczogImRldGFpbHMgY29tcCIKfTsKdmFyIF9ob2lzdGVkXzMwID0gewogIGNsYXNzOiAibmFtaW5nIgp9Owp2YXIgX2hvaXN0ZWRfMzEgPSB7CiAgY2xhc3M6ICJ0YWdzIgp9Owp2YXIgX2hvaXN0ZWRfMzIgPSB7CiAga2V5OiA0LAogIGNsYXNzOiAibW91c2VPbi10ZXh0Igp9OwoKdmFyIF9ob2lzdGVkXzMzID0gLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIuyDgeyEuCDrs7TquLAiKTsKCnZhciBfaG9pc3RlZF8zNCA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoZnVuY3Rpb24gKCkgewogIHJldHVybiAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiYnIiLCBudWxsLCBudWxsLCAtMQogIC8qIEhPSVNURUQgKi8KICApOwp9KTsKCnZhciBfaG9pc3RlZF8zNSA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoZnVuY3Rpb24gKCkgewogIHJldHVybiAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaSIsIHsKICAgIGNsYXNzOiAiZmFzIGZhLWJvb2stb3BlbiIKICB9LCBudWxsLCAtMQogIC8qIEhPSVNURUQgKi8KICApOwp9KTsKCnZhciBfaG9pc3RlZF8zNiA9IFtfaG9pc3RlZF8zMywgX2hvaXN0ZWRfMzQsIF9ob2lzdGVkXzM1XTsKdmFyIF9ob2lzdGVkXzM3ID0gewogIGtleTogMSwKICAiZGF0YS1hb3MiOiAiZmFkZS1kb3duIiwKICAiZGF0YS1hb3MtYW5jaG9yLXBsYWNlbWVudCI6ICJ0b3AtYm90dG9tIiwKICAiZGF0YS1hb3MtZHVyYXRpb24iOiAiMTAwMCIsCiAgY2xhc3M6ICJjb250YWluZXIiCn07Cgp2YXIgX2hvaXN0ZWRfMzggPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKGZ1bmN0aW9uICgpIHsKICByZXR1cm4gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIHsKICAgIGNsYXNzOiAiaW1hZ2UtYm94IGNvbXAiCiAgfSwgWy8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJpbWciLCB7CiAgICBzcmM6IF9pbXBvcnRzXzAsCiAgICBhbHQ6ICIiCiAgfSldLCAtMQogIC8qIEhPSVNURUQgKi8KICApOwp9KTsKCnZhciBfaG9pc3RlZF8zOSA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoZnVuY3Rpb24gKCkgewogIHJldHVybiAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgewogICAgY2xhc3M6ICJkZXRhaWxzIGNvbXAiCiAgfSwgWy8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCB7CiAgICBjbGFzczogImxvYWRpbmciCiAgfSwgWy8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJoMiIsIG51bGwsICLspIDruYQg7KSRLi4iKV0pXSwgLTEKICAvKiBIT0lTVEVEICovCiAgKTsKfSk7Cgp2YXIgX2hvaXN0ZWRfNDAgPSBbX2hvaXN0ZWRfMzgsIF9ob2lzdGVkXzM5XTsKdmFyIF9ob2lzdGVkXzQxID0gewogIGNsYXNzOiAiaG9tZS10cnlvbiIKfTsKCnZhciBfaG9pc3RlZF80MiA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoZnVuY3Rpb24gKCkgewogIHJldHVybiAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgewogICAgY2xhc3M6ICJkZXNjcmlwdGlvbiIKICB9LCBbLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIHsKICAgICJkYXRhLWFvcyI6ICJmYWRlLXVwIiwKICAgICJkYXRhLWFvcy1hbmNob3ItcGxhY2VtZW50IjogInRvcC1ib3R0b20iLAogICAgImRhdGEtYW9zLWR1cmF0aW9uIjogIjEwMDAiLAogICAgY2xhc3M6ICJ0aXRsZSIKICB9LCBbLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImgzIiwgbnVsbCwgIuq3uOufvOyXkOuPhCwg66y07JeH7J2EIOyCtOyngCDqs6Drr7zrkJzri6TrqbQ/IiksIC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJoMiIsIG51bGwsIFsvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgic3BhbiIsIG51bGwsICLtmYgg7ZS87YyFIOyEnOu5hOyKpCIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVRleHRWTm9kZSgi66W8IOydtOyaqe2VtOuztOyEuOyalCEiKV0pXSksIC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCB7CiAgICAiZGF0YS1hb3MiOiAiZmFkZS11cCIsCiAgICAiZGF0YS1hb3MtYW5jaG9yLXBsYWNlbWVudCI6ICJ0b3AtYm90dG9tIiwKICAgICJkYXRhLWFvcy1kdXJhdGlvbiI6ICIxMDAwIiwKICAgIGNsYXNzOiAiY29udGVudHMiCiAgfSwgWy8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJwIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJzcGFuIiwgbnVsbCwgIu2ZiCDtlLztjIUg7ISc67mE7Iqk656APyIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVRleHRWTm9kZSgiIOy2lOyynOuQnCDruIzrnbzrk6TsnYQg6rWs66ek7ZWY6riwIOyghOyXkCwgIiksIC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJiciIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVRleHRWTm9kZSgiIOynkeyXkOyEnCDrr7jrpqwg7J6F7Ja067O8IOyImCDsnojrj4TroZ0g7ZW07KO864qUIOyEnOu5hOyKpOyeheuLiOuLpC4gIiksIC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJiciIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiYnIiKSwgLyojX19QVVJFX18qL19jcmVhdGVUZXh0Vk5vZGUoIiDrp6TsnqXsl5Ag7KeB7KCRIOqwgOu0kOyVvCDtlZjripQg67KI6rGw66Gc7JuA6rO8LCAiKSwgLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImJyIiksIC8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKCIg7Jio65287J24IOyHvO2VkSDsi5wg67Cc7IOd65CY64qUIO2ZmOu2iOu5hOulvCDspITsl6wgIiksIC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJiciIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVRleHRWTm9kZSgiIOu4jOudvCDqtazrp6Tsl5Ag64yA7ZWcIOyLnO2WieywqeyYpOulvCDstZzrjIDtlZwg7KSE7J206rOg7J6QIO2VqeuLiOuLpC4gIildKSwgLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIHsKICAgIGNsYXNzOiAiaW1hZ2UtYm94IgogIH0sIFsvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaW1nIiwgewogICAgc3JjOiBfaW1wb3J0c18xLAogICAgYWx0OiAiIgogIH0pXSksIC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCB7CiAgICBjbGFzczogIndhcm5pbmciCiAgfSwgWy8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJwIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKCIg7YOd67CwIOqwnOu0ieyLnCwg67CY7Iah7ZW07JW8IO2VmOuvgOuhnCDruYTri5DsnbQg7LCi7Ja07KeA7KeAIOyViuuPhOuhnSDtlbTso7zshLjsmpQuICIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiYnIiKSwgLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoInNwYW4iLCBudWxsLCAi7JyE7J2YIOyCrO2VreydtCDrqqjrkZAg7IiZ7KeA65CY7JeI64uk66m0LCDtmYgg7ZS87YyFIOyLoOyyre2VmOq4sOulvCDriIzrn6zso7zshLjsmpQhIildKV0pXSldLCAtMQogIC8qIEhPSVNURUQgKi8KICApOwp9KTsKCnZhciBfaG9pc3RlZF80MyA9IHsKICAiZGF0YS1hb3MiOiAiZmFkZS11cCIsCiAgImRhdGEtYW9zLWFuY2hvci1wbGFjZW1lbnQiOiAidG9wLWJvdHRvbSIsCiAgImRhdGEtYW9zLWR1cmF0aW9uIjogIjEwMDAiLAogIGNsYXNzOiAiYnV0dG9uLWJveCIKfTsKdmFyIF9ob2lzdGVkXzQ0ID0gewogIGtleTogMSwKICB0eXBlOiAiYnV0dG9uIiwKICBjbGFzczogImJ0bi1wcmltYXJ5IGJ0bi01NSIsCiAgZGlzYWJsZWQ6ICIiCn07Cgp2YXIgX2hvaXN0ZWRfNDUgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVRleHRWTm9kZSgiIO2ZiCDtlLztjIUg7ISc67mE7IqkIOykgOu5hCDspJHCoCIpOwoKdmFyIF9ob2lzdGVkXzQ2ID0gLyojX19QVVJFX18qL193aXRoU2NvcGVJZChmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJpIiwgewogICAgY2xhc3M6ICJmYXMgZmEtZWxsaXBzaXMtaCIKICB9LCBudWxsLCAtMQogIC8qIEhPSVNURUQgKi8KICApOwp9KTsKCnZhciBfaG9pc3RlZF80NyA9IFtfaG9pc3RlZF80NSwgX2hvaXN0ZWRfNDZdOwp2YXIgX2hvaXN0ZWRfNDggPSB7CiAga2V5OiAyLAogIHR5cGU6ICJidXR0b24iLAogIGNsYXNzOiAiYnRuLXByaW1hcnkgYnRuLTU1IiwKICBkaXNhYmxlZDogIiIKfTsKCnZhciBfaG9pc3RlZF80OSA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVGV4dFZOb2RlKCLtmYgg7ZS87YyFIOyEnOu5hOyKpCDsi6Dssq0g7JmE66OMwqAiKTsKCnZhciBfaG9pc3RlZF81MCA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoZnVuY3Rpb24gKCkgewogIHJldHVybiAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaSIsIHsKICAgIGNsYXNzOiAiZmFzIGZhLWNoZWNrIgogIH0sIG51bGwsIC0xCiAgLyogSE9JU1RFRCAqLwogICk7Cn0pOwoKdmFyIF9ob2lzdGVkXzUxID0gW19ob2lzdGVkXzQ5LCBfaG9pc3RlZF81MF07CmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgdmFyIF90aGlzID0gdGhpczsKCiAgdmFyIF9jb21wb25lbnRfUHJvZHVjdERldGFpbCA9IF9yZXNvbHZlQ29tcG9uZW50KCJQcm9kdWN0RGV0YWlsIik7CgogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIF9ob2lzdGVkXzEsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8yLCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaDEiLCBudWxsLCBfdG9EaXNwbGF5U3RyaW5nKCRkYXRhLnVzZXJOYW1lKSArICIg64uY7J2EIOychO2VnCDruIzrnbwiLCAxCiAgLyogVEVYVCAqLwogICksICRkYXRhLmlzUmVjb20gPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJwIiwgX2hvaXN0ZWRfMywgW19jcmVhdGVUZXh0Vk5vZGUoX3RvRGlzcGxheVN0cmluZygkZGF0YS51c2VyTmFtZSkgKyAiwqDri5jsnZgg6rCA7Iq0LCDqt7jrpqzqs6Ag67iM6528IOq4sOuKpeqzvCDst6jtlqXsnYQgIiwgMQogIC8qIFRFWFQgKi8KICApLCBfaG9pc3RlZF80LCBfaG9pc3RlZF81LCBfaG9pc3RlZF82LCBfaG9pc3RlZF83XSkpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgidi1pZiIsIHRydWUpLCAhJGRhdGEuaXNSZWNvbSA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soInAiLCBfaG9pc3RlZF84LCBbX2NyZWF0ZVRleHRWTm9kZShfdG9EaXNwbGF5U3RyaW5nKCRkYXRhLnVzZXJOYW1lKSArICLCoOuLmOydmCDqsIDsirQsIOq3uOumrOqzoCDruIzrnbwg6riw64ql6rO8IOy3qO2WpeydhCAiLCAxCiAgLyogVEVYVCAqLwogICksIF9ob2lzdGVkXzksIF9ob2lzdGVkXzEwLCBfaG9pc3RlZF8xMSwgX2hvaXN0ZWRfMTIsIF9ob2lzdGVkXzEzLCBfaG9pc3RlZF8xNF0pKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoInYtaWYiLCB0cnVlKV0pLCBfY3JlYXRlQ29tbWVudFZOb2RlKCIgd2hlbiByZWNvbW1lbmQgZG9uZSAiKSwgJGRhdGEuaXNSZWNvbSAmJiAhJGRhdGEuaXNEZXRhaWxWaWV3ID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZGl2IiwgX2hvaXN0ZWRfMTUsIFsoX29wZW5CbG9jayh0cnVlKSwgX2NyZWF0ZUVsZW1lbnRCbG9jayhfRnJhZ21lbnQsIG51bGwsIF9yZW5kZXJMaXN0KCRkYXRhLmJyYV9wcmV2aWV3LCBmdW5jdGlvbiAoYnJhLCBpKSB7CiAgICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCB7CiAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soJGV2ZW50KSB7CiAgICAgICAgcmV0dXJuICRvcHRpb25zLm1vdmVUb0RldGFpbChpKTsKICAgICAgfSwKICAgICAgb25Nb3VzZW92ZXI6IGZ1bmN0aW9uIG9uTW91c2VvdmVyKCRldmVudCkgewogICAgICAgIHJldHVybiAkb3B0aW9ucy5pc01vdXNlT3ZlcihpKTsKICAgICAgfSwKICAgICAgb25Nb3VzZW91dDogZnVuY3Rpb24gb25Nb3VzZW91dCgkZXZlbnQpIHsKICAgICAgICByZXR1cm4gJG9wdGlvbnMuaXNNb3VzZU91dChpKTsKICAgICAgfSwKICAgICAgY2xhc3M6IF9ub3JtYWxpemVDbGFzcyhbewogICAgICAgIG1vdXNlT246ICRkYXRhLmlzTW91c2VPbltpXSA9PSB0cnVlCiAgICAgIH0sICJpdGVtIl0pLAogICAgICBrZXk6IGkKICAgIH0sIFtpID09IDAgJiYgJGRhdGEuYnJhX3ByZXZpZXdbMF0gPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCBfaG9pc3RlZF8xNywgX2hvaXN0ZWRfMTkpKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoInYtaWYiLCB0cnVlKSwgaSA9PSAxICYmICRkYXRhLmJyYV9wcmV2aWV3WzFdID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZGl2IiwgX2hvaXN0ZWRfMjAsIF9ob2lzdGVkXzIyKSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCJ2LWlmIiwgdHJ1ZSksIGkgPT0gMiAmJiAkZGF0YS5icmFfcHJldmlld1syXSA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIF9ob2lzdGVkXzIzLCBfaG9pc3RlZF8yNSkpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgidi1pZiIsIHRydWUpLCBpID09IDMgJiYgJGRhdGEuYnJhX3ByZXZpZXdbM10gPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCBfaG9pc3RlZF8yNiwgX2hvaXN0ZWRfMjgpKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoInYtaWYiLCB0cnVlKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMjksIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8zMCwgW19jcmVhdGVFbGVtZW50Vk5vZGUoImgzIiwgbnVsbCwgX3RvRGlzcGxheVN0cmluZyhicmEuYnJhbmROYW1lKSwgMQogICAgLyogVEVYVCAqLwogICAgKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgiaDIiLCBudWxsLCBfdG9EaXNwbGF5U3RyaW5nKGJyYS5icmFOYW1lKSwgMQogICAgLyogVEVYVCAqLwogICAgKV0pLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJkaXYiLCBfaG9pc3RlZF8zMSwgWyhfb3BlbkJsb2NrKHRydWUpLCBfY3JlYXRlRWxlbWVudEJsb2NrKF9GcmFnbWVudCwgbnVsbCwgX3JlbmRlckxpc3QoYnJhLnRhZ3MsIGZ1bmN0aW9uICh0YWcsIGkpIHsKICAgICAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygic3BhbiIsIHsKICAgICAgICBrZXk6IGkKICAgICAgfSwgIiMiICsgX3RvRGlzcGxheVN0cmluZyh0YWcpICsgIsKgIiwgMQogICAgICAvKiBURVhUICovCiAgICAgICk7CiAgICB9KSwgMTI4CiAgICAvKiBLRVlFRF9GUkFHTUVOVCAqLwogICAgKSldKV0pLCAkZGF0YS5pc01vdXNlT25baV0gPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJwIiwgX2hvaXN0ZWRfMzIsIF9ob2lzdGVkXzM2KSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCJ2LWlmIiwgdHJ1ZSldLCA0MgogICAgLyogQ0xBU1MsIFBST1BTLCBIWURSQVRFX0VWRU5UUyAqLwogICAgLCBfaG9pc3RlZF8xNik7CiAgfSksIDEyOAogIC8qIEtFWUVEX0ZSQUdNRU5UICovCiAgKSldKSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCJ2LWlmIiwgdHJ1ZSksIF9jcmVhdGVDb21tZW50Vk5vZGUoIiB3aGVuIHJlY29tbWVuZCBub3QgZG9uZSAiKSwgISRkYXRhLmlzUmVjb20gJiYgISRkYXRhLmlzRGV0YWlsVmlldyA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIF9ob2lzdGVkXzM3LCBbX2NyZWF0ZUNvbW1lbnRWTm9kZSgiIOqwnOuwnCDtlZjripQg64+Z7JWI66eMIOyVhOuemCDtgbTrpq3snbTrsqTtirgg7KCB7JqpIC8g7JmE66OM7ZuEIOyngOyasOq4sCAgIiksIChfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soX0ZyYWdtZW50LCBudWxsLCBfcmVuZGVyTGlzdCg0LCBmdW5jdGlvbiAoaWR4KSB7CiAgICByZXR1cm4gX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgewogICAgICBrZXk6IGlkeCwKICAgICAgY2xhc3M6ICJpdGVtIgogICAgfSwgX2hvaXN0ZWRfNDApOwogIH0pLCA2NAogIC8qIFNUQUJMRV9GUkFHTUVOVCAqLwogICkpXSkpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgidi1pZiIsIHRydWUpLCBfY3JlYXRlQ29tbWVudFZOb2RlKCIg67iM6528IOyDgeyEuCDtgbTrpq3tlZjrqbQg7IOB7IS4IO2ZlOuptCDsu7Ttj6zrhIztirggIiksICRkYXRhLmlzRGV0YWlsVmlldyA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfY29tcG9uZW50X1Byb2R1Y3REZXRhaWwsIHsKICAgIGtleTogMiwKICAgIHVzZXJOYW1lXzogJGRhdGEudXNlck5hbWUsCiAgICBpbmRleF86ICRkYXRhLmluZGV4LAogICAgYnJhRGV0YWlsc186ICRkYXRhLmJyYURldGFpbHMKICB9LCBudWxsLCA4CiAgLyogUFJPUFMgKi8KICAsIFsidXNlck5hbWVfIiwgImluZGV4XyIsICJicmFEZXRhaWxzXyJdKSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCJ2LWlmIiwgdHJ1ZSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzQxLCBbX2hvaXN0ZWRfNDIsIF9jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIF9ob2lzdGVkXzQzLCBbISRkYXRhLmlzT3JkZXJlZEhvbWVzZXJ2ICYmICRkYXRhLmlzUmVjb20gPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJidXR0b24iLCB7CiAgICBrZXk6IDAsCiAgICBvbkNsaWNrOiBfY2FjaGVbMF0gfHwgKF9jYWNoZVswXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgcmV0dXJuIF90aGlzLiRyb3V0ZXIucHVzaCgnL2hvbWVmaXR0aW5nL29yZGVyJyk7CiAgICB9KSwKICAgIHR5cGU6ICJidXR0b24iLAogICAgY2xhc3M6ICJidG4tcHJpbWFyeSBidG4tNTUiCiAgfSwgIiDtmYgg7ZS87YyFIOyEnOu5hOyKpCDsi6Dssq3tlZjquLAgIikpIDogX2NyZWF0ZUNvbW1lbnRWTm9kZSgidi1pZiIsIHRydWUpLCAhJGRhdGEuaXNPcmRlcmVkSG9tZXNlcnYgJiYgISRkYXRhLmlzUmVjb20gPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJidXR0b24iLCBfaG9pc3RlZF80NCwgX2hvaXN0ZWRfNDcpKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoInYtaWYiLCB0cnVlKSwgJGRhdGEuaXNPcmRlcmVkSG9tZXNlcnYgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJidXR0b24iLCBfaG9pc3RlZF80OCwgX2hvaXN0ZWRfNTEpKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoInYtaWYiLCB0cnVlKV0pXSldKTsKfQ=="},null]}