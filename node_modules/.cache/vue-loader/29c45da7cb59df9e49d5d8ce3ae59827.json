{"remainingRequest":"/Users/yoorabaek/Dev_test/client/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/yoorabaek/Dev_test/client/src/views/Signup.vue?vue&type=style&index=0&id=024d905c&lang=scss&scoped=true","dependencies":[{"path":"/Users/yoorabaek/Dev_test/client/src/views/Signup.vue","mtime":1645314823607},{"path":"/Users/yoorabaek/Dev_test/client/node_modules/css-loader/dist/cjs.js","mtime":1638841242025},{"path":"/Users/yoorabaek/Dev_test/client/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1642430036117},{"path":"/Users/yoorabaek/Dev_test/client/node_modules/postcss-loader/src/index.js","mtime":1638841242183},{"path":"/Users/yoorabaek/Dev_test/client/node_modules/sass-loader/dist/cjs.js","mtime":1638841245504},{"path":"/Users/yoorabaek/Dev_test/client/node_modules/cache-loader/dist/cjs.js","mtime":1638841237816},{"path":"/Users/yoorabaek/Dev_test/client/node_modules/vue-loader-v16/dist/index.js","mtime":1642430036111}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}